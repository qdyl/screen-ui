(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-f51b5dca"],{"0112":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[400,400,300,500,300,400,400,400,300],yData2:[400,450,700,500,1e3,400,400,600,700],yData3:[400,500,500,500,500,400,400,500,500],yData4:[400,600,700,700,1e3,400,400,600,700]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){const n=[{name:this.seriesname[0],type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#9C9AFF",label:{show:!0,position:"right",textStyle:{fontSize:12,fontWeight:400,color:"#9C9AFF"}}}},data:this.echdata.yData},{name:this.seriesname[1],type:"line",barWidth:"15%",itemStyle:{normal:{color:"#FFCA71",label:{show:!0,position:"top",textStyle:{fontSize:12,fontWeight:400,color:"#FFCA71"}}}},data:this.echdata.yData2}],t={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},itemWidth:16,itemHeight:10,itemGap:5,data:[{name:this.seriesname[0],icon:"circle"},{name:this.seriesname[1],icon:"roundRect"}]},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:n};return t}}},c=l,d=(e("62ac"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"6c862ade",null);t["default"]=h.exports},"03e6":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [400, 400, 300, 300, 300, 400, 400, 400, 300],\n    yData2: [400, 500, 500, 500, 500, 400, 400, 500, 500],\n    yData3: [400, 600, 700, 700, 1000, 400, 400, 600, 700],\n    yData4: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        const seriesArrData = [\n          {\n            name: this.seriesname[0],\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: this.echdata.yData\n          },\n          {\n            name: this.seriesname[1],\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#FC8B62',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: this.echdata.yData2\n          },\n          {\n            name: this.seriesname[2],\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#FF679F',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: this.echdata.yData3\n          },\n          {\n            name: this.seriesname[3],\n            type: 'line',\n            barWidth: '15%',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: this.echdata.yData4\n          }\n        ];\n        const options = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        //\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"0570":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        var option = {\n          title: {\n            text: this.titleText,\n            // subtext: '2023年6月8日',\n            // left: 'center',\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 14\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '-5',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              // color: 'red',\n              color: '#96C2FF',\n              fontSize: 10,\n              interval: 0,\n              rotate: 20\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                // color: 'red',\n                color: '#96C2FF',\n                fontSize: 12,\n                fontWeight: 100\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)',\n                  fontSize: 12\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              smooth: true,\n              barWidth: 6,\n              // showAllSymbol: true,\n              // symbol: 'circle',\n              // symbolSize: 6,\n              color: '#10D6FE',\n              lineStyle: {\n                width: 1,\n                type: 'dashed'\n              },\n              label: {\n                show: true,\n                color: '#fff',\n                fontSize: '12',\n                fontWeight: 600,\n                position: 'top',\n                formatter: function(params) {\n                  return params.value + '人';\n                }\n              },\n              areaStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\n                  ],\n                  globalCoord: false\n                }\n              },\n              data: this.echdata.yData\n            }\n          ]\n        };\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"08d7":function(n,t,e){"use strict";e("1f91")},"0b90":function(n,t,e){"use strict";e("9d4a")},"0beb":function(n,t,e){},"0c6a":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        let totalSum = 0; // 总数\n        for (var i = 0; i < this.echdata.yData.length; i++) {\n          totalSum += this.echdata.yData[i];\n        }\n        var option = {\n          title: {\n            text: this.titleText,\n            top: -4,\n            textStyle: {\n              color: '#2B9DF2',\n              fontSize: 14 // 字体大小\n              // fontWeight:  // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 14\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'line' // 默认为直线，可选为：'line' | 'shadow'\n            }\n            // formatter: function(params) {\n            //   console.log('鼠标', params);\n            //   var value = params.value;\n            //   // var total = params.data.total;\n            //   var percent = ((value / totalSum) * 100).toFixed(2); // 计算百分比\n            //   return params.name + ': ' + value + ' (' + percent + '%)'; // 格式化 tooltip 内容\n            // }\n            // formatter: '{c}%' // 显示比例（这是关键）\n            // formatter: `{b}: {c} ({c/${totalSum} * 100}%)`\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '-5',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              // color: 'red',\n              color: '#96C2FF',\n              fontSize: 10,\n              interval: 0,\n              rotate: 20\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                // color: 'red',\n                color: '#96C2FF',\n                fontSize: 12,\n                fontWeight: 100\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)',\n                  fontSize: 12\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              smooth: true,\n              barWidth: 6,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 6,\n              color: '#10D6FE',\n              lineStyle: {\n                width: 1,\n                type: 'dashed'\n              },\n              label: {\n                show: true,\n                color: '#fff',\n                fontSize: '12',\n                fontWeight: 600,\n                position: 'top',\n                // formatter: '{b}\\n{c}%', // 显示比例（这是关键）\n                formatter: function(params) {\n                  // console.log('比例饿', params);\n                  const percent = ((params.value / totalSum) * 100).toFixed(2) + '%';\n                  return percent;\n                }\n              },\n              areaStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\n                  ],\n                  globalCoord: false\n                }\n              },\n              data: this.echdata.yData\n            }\n          ]\n        };\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"0d59":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '',\n    name: '',\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.drainitEchartm();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n        this.onHanleClick();\n      });\n    },\n    methods: {\n      // echart 初始化\n      initEchart() {\n        var colorList = [\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ])\n        ];\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\n        var seriesBgData = [];\n        for (var i = 0; i < this.echdata.xData.length; i++) {\n          seriesBgData.push(barMax);\n        }\n        var option = {\n          title: {\n            text: this.titleText,\n            textStyle: {\n              color: '#fff', // 备用字体色 '#2B9DF2'\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            },\n            x: 'left'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n            // formatter: function(params) {\n            //   // return params[0].name + '<br>' + params[0].value + ' 万人'\n            //   return params[0].name + '<br>' + params[0].value;\n            // }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              top: '20px',\n              left: '10',\n              right: '10',\n              bottom: '-20',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false,\n              name: '万人',\n              nameTextStyle: {\n                align: 'right',\n                color: '#FFFFFF'\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 13,\n                color: '#FFFFFF'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              // name: '年龄',\n              triggerEvent: true,\n              inverse: false,\n              axisLine: {\n                show: false,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#96C2FF',\n                // color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              barCategoryGap: '100%',\n              data: this.echdata.xData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30\n              },\n              z: 91,\n              label: {\n                show: true,\n                distance: 15,\n                color: '#fff',\n                fontSize: '14',\n                fontWeight: 600,\n                position: 'right'\n              }\n            },\n            {\n              name: '进度条背景',\n              type: 'bar',\n              barGap: '-100%',\n              barCategoryGap: '200%',\n              data: this.echdata.xData.map(function(d) {\n                return barMax;\n              }),\n              barWidth: 10,\n              tooltip: {\n                show: false\n              },\n              itemStyle: {\n                normal: {\n                  barBorderRadius: 30,\n                  color: '#1c1d47',\n                  // color: '#204b86',\n                  barBorderColor: '#204b86', // 边框色\n                  barBorderWidth: 1, // 边框宽度\n                  label: {\n                    show: false,\n                    textStyle: {\n                      color: 'rgba(255,255,255,1)'\n                    },\n                    position: 'right',\n                    formatter: function(p) {\n                      return this.echdata.xData[p.dataIndex];\n                    }\n                  }\n                }\n              },\n              z: 90\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      // 点击事件\n      onHanleClick() {\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.getZr().on('click', params => {\n          console.log('点击饿了', params);\n          const pointInPixel = [params.offsetX, params.offsetY];\n          if (echartEle.containPixel('grid', pointInPixel)) {\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\n            console.log(xIndex);\n          }\n          // this.$router.push('/sy-chanyelian')\n          //\n          // var options = echartEle.getOption()\n          // console.log('options配置', options)\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"0f80":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [251, 282, 393, 454],\n    yData2: [221, 252, 373, 424],\n    yData3: [231, 282, 333, 434],\n    yData4: [241, 352, 343, 444]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        var options = {\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            // icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 13\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '0',\n              right: '0',\n              bottom: '0',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              color: 'rgba(255, 255, 255, .7)',\n              fontSize: 13,\n              interval: 0\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 14\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            },\n            {\n              type: 'value',\n              name: '',\n              show: false,\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 14\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: this.seriesname[0],\n              type: 'line',\n              yAxisIndex: 1,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 8,\n              color: '#10D6FE',\n              lineStyle: {\n                width: 1,\n                type: 'dashed'\n              },\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '%';\n                }\n              },\n              data: this.echdata.yData\n            },\n            {\n              name: this.seriesname[1],\n              type: 'line',\n              yAxisIndex: 1,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 8,\n              color: '#E7E626',\n              lineStyle: {\n                width: 1,\n                type: 'dashed'\n              },\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '%';\n                }\n              },\n              data: this.echdata.yData2\n            },\n            {\n              name: this.seriesname[2],\n              type: 'bar',\n              stack: 'Ad',\n              color: '#126DA6',\n              barWidth: 15,\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '万人';\n                }\n              },\n              data: this.echdata.yData3\n            },\n            {\n              name: this.seriesname[3],\n              type: 'bar',\n              stack: 'Ad',\n              color: '#0ED793',\n              barWidth: 15,\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '万人';\n                }\n              },\n              data: this.echdata.yData4\n            }\n          ]\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"12a0":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[400,400,300,500,300,400,400,400,300],yData2:[400,600,700,700,1e3,400,400,600,700],yData3:[400,500,500,500,500,400,400,500,500],yData4:[400,600,700,700,1e3,400,400,600,700]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){const n=[{name:this.seriesname[0],type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#9C9AFF",barBorderRadius:[12,12,0,0]}},data:this.echdata.yData},{name:this.seriesname[1],type:"line",barWidth:"15%",smooth:!0,itemStyle:{normal:{color:"#FFCA71",barBorderRadius:[12,12,0,0]}},data:this.echdata.yData2}],t={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},itemWidth:16,itemHeight:10,itemGap:5,data:[{name:this.seriesname[0],icon:"circle"},{name:this.seriesname[1],icon:"roundRect"}]},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:n};return t}}},c=l,d=(e("918f"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"09033619",null);t["default"]=h.exports},"152f":function(n,t,e){"use strict";e("9406")},"16a9":function(n,t,e){},"17d4":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 330, 400],\n    yData2: [110, 220, 300, 440]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        var options = {\n          legend: {\n            // 图例组件，颜色和名字\n            right: 0,\n            top: 0,\n            textStyle: {\n              color: '#fff',\n              fontStyle: 'normal',\n              fontFamily: '微软雅黑',\n              fontSize: 14\n            },\n            icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 14\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '0%',\n              bottom: '0',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              color: 'rgba(255, 255, 255, .7)',\n              fontSize: 13,\n              interval: 0\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: {\n            type: 'value',\n            name: '亿元',\n            nameTextStyle: {\n              color: 'rgba(255, 255, 255, .7)'\n            },\n            axisLabel: {\n              color: 'rgba(255, 255, 255, .7)',\n              fontSize: 13\n            },\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            splitLine: {\n              show: false\n            }\n          },\n          series: [\n            {\n              name: this.seriesname[0],\n              type: 'bar',\n              barWidth: 10,\n              itemStyle: {\n                color: '#50cbff'\n              },\n              label: {\n                show: true,\n                color: '#fff',\n                fontSize: '14',\n                position: 'top'\n              },\n              data: this.echdata.yData\n            },\n            {\n              name: this.seriesname[1],\n              type: 'bar',\n              barWidth: 10,\n              itemStyle: {\n                color: '#eecd3a'\n              },\n              label: {\n                show: true,\n                color: '#fff',\n                fontSize: '14',\n                position: 'top'\n              },\n              data: this.echdata.yData2\n            }\n          ]\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"18d5":function(n,t,e){var a={"./BarA1.vue":"f670","./BarA2.vue":"b463","./BarA3.vue":"a042","./BarA4.vue":"62d3","./BarA5.vue":"3b47","./BarA6.vue":"fc03","./BarA7.vue":"3910","./BarA8.vue":"f3de","./BarB1.vue":"2949","./BarB2.vue":"194e","./BarB3.vue":"c953","./BarB4.vue":"2936","./BarC1.vue":"12a0","./BarC2.vue":"7520","./BarC3.vue":"0112","./BarC4.vue":"d3fd","./BarC5.vue":"ed94","./BarC6.vue":"bfea","./BarC7.vue":"2b6e","./BarC8.vue":"89c6","./BarD1.vue":"d0a0","./BarD2.vue":"6e83","./BarD3.vue":"73e5","./BarD4.vue":"c6a5","./BarD5.vue":"617f","./BarD6.vue":"8714","./BarD7.vue":"be19","./BarD8.vue":"9cbb","./BarE1.vue":"8ca7","./BarE2.vue":"338a","./BarE3.vue":"e80e"};function i(n){var t=o(n);return e(t)}function o(n){if(!e.o(a,n)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return a[n]}i.keys=function(){return Object.keys(a)},i.resolve=o,n.exports=i,i.id="18d5"},"194e":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"备注：Y轴数据倒置",name:"",props:{echdata:{type:Object,default:()=>r},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"echartsLine"+Number(Math.random().toString().substr(3,3)+Date.now()).toString(36)}},watch:{echdata:{handler:function(){this.initEchart()},deep:!0}},created(){},mounted(){this.$echarts=o,this.$nextTick((function(){this.initEchart()}))},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));const t=[new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}])],e={title:{text:this.titleText,top:-4,textStyle:{color:"#fff",fontSize:14,fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{top:"20",left:"10",right:"20",bottom:"-20",containLabel:!0}],xAxis:[{show:!1,name:"人",nameTextStyle:{align:"right",color:"#FFFFFF"},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:16,color:"#FFFFFF"},splitLine:{show:!1},axisTick:{show:!1}}],yAxis:[{inverse:!0,triggerEvent:!0,nameTextStyle:{fontSize:14,color:"#FDFEFF",padding:[0,0,-10,-100]},axisLine:{show:!1,lineStyle:{color:"#fff",align:"left"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#96C2FF",interval:0,fontWeight:"normal",fontSize:13},data:this.echdata.yData,gridIndex:0}],series:[{name:"数量",type:"bar",barGap:"-100%",data:this.echdata.xData.map((n,e)=>{const a={color:e>3?t[3]:t[e]};return{value:n,itemStyle:a}}),barWidth:10,itemStyle:{barBorderRadius:30,normal:{label:{position:"right",show:!0,textStyle:{color:"#FDFEFF",fontWeight:600,fontSize:13}}}},z:91}]};n.setOption(e,!0),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(e("2a43"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"39797ae2",null);t["default"]=d.exports},"1f91":function(n,t,e){},"20b0":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [400, 400, 300, 500, 300, 400, 400, 400, 300],\n    yData2: [400, 600, 700, 700, 1000, 400, 400, 600, 700],\n    yData3: [400, 500, 500, 500, 500, 400, 400, 500, 500],\n    yData4: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        const seriesArrData = [\n          {\n            name: this.seriesname[0],\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                barBorderRadius: [12, 12, 0, 0],\n                label: {\n                  show: true,\n                  position: 'right',\n                  textStyle: {\n                    fontSize: 12,\n                    fontWeight: 400,\n                    color: '#9C9AFF' // 字体颜色\n                  }\n                }\n              }\n            },\n            data: this.echdata.yData\n          },\n          {\n            name: this.seriesname[1],\n            type: 'line',\n            barWidth: '15%',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                barBorderRadius: [12, 12, 0, 0],\n                label: {\n                  show: true,\n                  position: 'top',\n                  textStyle: {\n                    fontSize: 12,\n                    fontWeight: 400,\n                    color: '#FFCA71' // 字体颜色\n                  }\n                }\n              }\n            },\n            data: this.echdata.yData2\n          }\n        ];\n        const options = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            // icon: 'circle',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5,\n            data: [\n              // 针对每个系列设置 legend 样式\n              {\n                name: this.seriesname[0],\n                icon: 'circle'\n              },\n              {\n                name: this.seriesname[1],\n                icon: 'roundRect'\n              }\n            ]\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"24c1":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        var colorList = [\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#1277CC' },\n            { offset: 1, color: '#00E7FD' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#01C4BA' },\n            { offset: 1, color: '#1DEFA9' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#EF624A' },\n            { offset: 1, color: '#FF9482' }\n          ])\n        ];\n        var option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              left: '10',\n              right: '10',\n              bottom: '0',\n              top: '35',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              // name: '年龄',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 12\n              },\n              data: this.echdata.xData,\n              gridIndex: 0\n            }\n          ],\n          yAxis: [\n            {\n              show: true,\n              //   name: '万人',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 12,\n                color: '#fff'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          label: {\n            show: true,\n            position: 'top',\n            color: '#fff',\n            fontSize: 13,\n            fontWeight: 600\n          },\n          series: [\n            {\n              // name: '柱状图',\n              type: 'bar',\n              data: this.echdata.yData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30\n              }\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"25a7":function(n,t,e){"use strict";e("988b")},2936:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"备注：",name:"",props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36))}},watch:{echdata:{handler:function(){this.drainitEchartm()},deep:!0}},created(){},mounted(){this.$echarts=o,this.$nextTick((function(){this.initEchart(),this.onHanleClick()}))},methods:{initEchart(){var n=1.1*Math.max(...this.echdata.xData),t={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600},x:"left"},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{left:"10",right:"0",bottom:"-15",top:"30",containLabel:!0}],xAxis:[{show:!1}],yAxis:[{inverse:!1,axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#fff",interval:0,fontWeight:"normal",fontSize:13,formatter:function(n,t){return n.length>5?n.slice(0,5)+"...":n}},data:this.echdata.yData,gridIndex:0}],label:{show:!0,position:"right",color:"#fff",fontSize:13,fontWeight:600},series:[{name:"数量",type:"bar",barGap:"-100%",data:this.echdata.xData,barWidth:8,itemStyle:{barBorderRadius:30,color:new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#FAACA8"},{offset:1,color:"#FA709A"}])},z:91},{name:"进度条背景",type:"bar",barGap:"-100%",data:this.echdata.xData.map((function(t){return n})),barWidth:8,tooltip:{show:!1},itemStyle:{normal:{barBorderRadius:30,color:"#0A3069",barBorderColor:"#0A3069",barBorderWidth:1,label:{show:!1,textStyle:{color:"rgba(255,255,255,1)"},position:"right",formatter:function(n){return this.echdata.xData[n.dataIndex]}}}},z:90}]};let e=o["init"](document.getElementById(this.eleId));e.setOption(t,!0),window.addEventListener("resize",()=>{e.resize()})},getOptions(){var n="#30eee9";new o["graphic"].LinearGradient(0,1,0,0,[{offset:0,color:"rgba(7,44,90,0.3)"},{offset:1,color:"rgba(0,146,246,0.9)"}]),new o["graphic"].LinearGradient(0,1,0,0,[{offset:0,color:"rgba(7,44,90,0.3)"},{offset:1,color:"rgba(0,212,199,0.9)"}]),new o["graphic"].LinearGradient(0,1,0,0,[{offset:0,color:"rgba(7,44,90,0.3)"},{offset:1,color:"rgba(114,144,89,0.9)"}])},onHanleClick(){var n=this.$echarts.init(document.getElementById(this.eleId));n.getZr().on("click",t=>{console.log("点击饿了",t);const e=[t.offsetX,t.offsetY];if(n.containPixel("grid",e)){const e=n.convertFromPixel({seriesIndex:0},[t.offsetX,t.offsetY])[0];console.log(e)}})}}},l=s,c=(e("7da8"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"2c859109",null);t["default"]=d.exports},2949:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"",name:"",props:{echdata:{type:Object,default:()=>r},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"echartsLine"+Number(Math.random().toString().substr(3,3)+Date.now()).toString(36)}},watch:{echdata:{handler:function(){this.initEchart()},deep:!0}},created(){},mounted(){this.$echarts=o,this.$nextTick((function(){this.initEchart()}))},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));const t=[new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}])],e={title:{text:this.titleText,top:-4,textStyle:{color:"#fff",fontSize:14,fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{top:"20",left:"10",right:"20",bottom:"-20",containLabel:!0}],xAxis:[{show:!1,name:"人",nameTextStyle:{align:"right",color:"#FFFFFF"},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:16,color:"#FFFFFF"},splitLine:{show:!1},axisTick:{show:!1}}],yAxis:[{inverse:!1,triggerEvent:!0,nameTextStyle:{fontSize:14,color:"#FDFEFF",padding:[0,0,-10,-100]},axisLine:{show:!1,lineStyle:{color:"#fff",align:"left"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#96C2FF",interval:0,fontWeight:"normal",fontSize:13},data:this.echdata.yData,gridIndex:0}],series:[{name:"数量",type:"bar",barGap:"-100%",data:this.echdata.xData.map((n,e)=>{const a={color:e>3?t[3]:t[e]};return{value:n,itemStyle:a}}),barWidth:10,itemStyle:{barBorderRadius:30,normal:{label:{position:"right",show:!0,textStyle:{color:"#FDFEFF",fontWeight:600,fontSize:13}}}},z:91}]};n.setOption(e,!0),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(e("c70e"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"489e24e2",null);t["default"]=d.exports},"2a43":function(n,t,e){"use strict";e("a2c8")},"2b57":function(n,t,e){"use strict";e("c87a")},"2b6e":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[4.2,3.2,4.8,3.5],yData2:[4.8,3.5,2.9,2.8,3,5]},s=["手机销量","电脑销量"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){const n={title:{text:this.titleText,top:"left",left:"top",textStyle:{align:"left",color:"#fff",fontSize:14}},backgroundColor:"#0f375f",grid:{top:"50px",right:"30px",bottom:"20px"},tooltip:{trigger:"axis",axisPointer:{type:"shadow",label:{show:!0}}},legend:{data:["手机销量","笔记本销量"],top:"15%",textStyle:{color:"#ffffff"}},xAxis:{data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#01FCE3"}},axisTick:{show:!0},axisLabel:{show:!0,textStyle:{}}},yAxis:[{type:"value",name:"亿元",nameTextStyle:{color:"#ebf8ac"},splitLine:{show:!1},axisTick:{show:!0},axisLine:{show:!0,lineStyle:{color:"#FFFFFF"}},axisLabel:{show:!0,textStyle:{color:"#ebf8ac"}}},{type:"value",name:"同比",nameTextStyle:{color:"#ebf8ac"},position:"right",splitLine:{show:!1},axisTick:{show:!1},axisLine:{show:!1},axisLabel:{show:!0,formatter:"{value} %",textStyle:{color:"#ebf8ac"}}},{type:"value",gridIndex:0,min:50,max:100,splitNumber:8,splitLine:{show:!1},axisLine:{show:!1},axisTick:{show:!1},axisLabel:{show:!1},splitArea:{show:!0,areaStyle:{color:["rgba(250,250,250,0.0)","rgba(250,250,250,0.05)"]}}}],series:[{name:"手机销量",type:"line",yAxisIndex:1,smooth:!0,showAllSymbol:!0,symbol:"circle",symbolSize:10,itemStyle:{color:"#058cff"},lineStyle:{color:"#058cff"},areaStyle:{color:"rgba(5,140,255, 0.2)"},data:this.echdata.yData},{name:"笔记本销量",type:"bar",barWidth:10,itemStyle:{normal:{color:new o["graphic"].LinearGradient(0,0,0,1,[{offset:0,color:"#00FFE3"},{offset:1,color:"#4693EC"}])}},data:this.echdata.yData2}]};return n}}},c=l,d=(e("08d7"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"72bfd7b0",null);t["default"]=h.exports},"2c70":function(n,t,e){"use strict";e("f797")},"332b":function(n,t,e){},"338a":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticStyle:{color:"#fff"}},[n._v(" echart图 ")])},i=[],o={data(){return{}}},r=o,s=e("2877"),l=Object(s["a"])(r,a,i,!1,null,"23f41406",null);t["default"]=l.exports},"33ab":function(n,t,e){"use strict";e("383b")},"383b":function(n,t,e){},3910:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){var n=50;const t={backgroundColor:"#111c4e",color:["#3398DB"],tooltip:{trigger:"axis",axisPointer:{type:"line",lineStyle:{opacity:0}}},legend:{data:["直接访问","背景"],show:!1},grid:{left:"0%",right:"0%",bottom:"0%",top:"7%",containLabel:!0,z:22},xAxis:[{type:"category",gridIndex:0,data:this.echdata.xData,axisTick:{alignWithLabel:!0},axisLine:{lineStyle:{color:"#0c3b71"}},axisLabel:{show:!0,color:"rgb(170,170,170)",fontSize:12}}],yAxis:[{type:"value",gridIndex:0,splitLine:{show:!1},axisTick:{show:!1},axisLine:{lineStyle:{color:"#0c3b71"}},axisLabel:{color:"rgb(170,170,170)",formatter:"{value} 人"}},{type:"value",gridIndex:0,min:n,max:100,splitNumber:12,splitLine:{show:!1},axisLine:{show:!1},axisTick:{show:!1},axisLabel:{show:!1},splitArea:{show:!0,areaStyle:{color:["rgba(250,250,250,0.0)","rgba(250,250,250,0.05)"]}}}],series:[{name:"合格率",type:"bar",barWidth:"10",xAxisIndex:0,yAxisIndex:0,itemStyle:{normal:{barBorderRadius:30,color:new o["graphic"].LinearGradient(0,0,0,1,[{offset:0,color:"#00feff"},{offset:.5,color:"#027eff"},{offset:1,color:"#0286ff"}])}},data:this.echdata.yData,zlevel:11},{name:"背景",type:"bar",barWidth:"20",xAxisIndex:0,yAxisIndex:1,barGap:"-1.5px",data:[100,100,100,100,100,100,100],itemStyle:{normal:{color:"rgba(255,255,255,0.1)"}},zlevel:9}]};return t}}},c=l,d=(e("f5ca"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"6a1864b9",null);t["default"]=h.exports},"3b47":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){var n=[new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#1277CC"},{offset:1,color:"#00E7FD"}]),new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#01C4BA"},{offset:1,color:"#1DEFA9"}]),new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#EF624A"},{offset:1,color:"#FF9482"}])],t={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{left:"10",right:"10",bottom:"0",top:"35",containLabel:!0}],xAxis:[{axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#fff",interval:0,fontWeight:"normal",fontSize:12},data:this.echdata.xData,gridIndex:0}],yAxis:[{show:!0,axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:12,color:"#fff"},splitLine:{show:!1},axisTick:{show:!1}}],label:{show:!0,position:"top",color:"#fff",fontSize:13,fontWeight:600},series:[{type:"bar",data:this.echdata.yData.map((t,e)=>{const a={color:e>3?n[3]:n[e]};return{value:t,itemStyle:a}}),barWidth:10,itemStyle:{barBorderRadius:30}}]};let e=o["init"](document.getElementById(this.eleId));e.setOption(t),window.addEventListener("resize",()=>{e.resize()})}}},l=s,c=(e("401c"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"5a0ca71a",null);t["default"]=d.exports},"3b48":function(n,t,e){"use strict";e("dc23")},"401c":function(n,t,e){"use strict";e("e5cf")},4140:function(n,t,e){"use strict";e.r(t),t["default"]='<template>\n  <div class="" style="color:#fff">\n    echart图\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {};\n    }\n  };\n<\/script>\n\n<style lang="scss" scoped></style>\n'},"4d76":function(n,t,e){var a={"./BarA1":"753c","./BarA1.vue":"753c","./BarA2":"0570","./BarA2.vue":"0570","./BarA3":"7456","./BarA3.vue":"7456","./BarA4":"0c6a","./BarA4.vue":"0c6a","./BarA5":"24c1","./BarA5.vue":"24c1","./BarA6":"fcc8","./BarA6.vue":"fcc8","./BarA7":"d867","./BarA7.vue":"d867","./BarA8":"4140","./BarA8.vue":"4140","./BarB1":"5075","./BarB1.vue":"5075","./BarB2":"fcaf","./BarB2.vue":"fcaf","./BarB3":"0d59","./BarB3.vue":"0d59","./BarB4":"9d51","./BarB4.vue":"9d51","./BarC1":"c0ca","./BarC1.vue":"c0ca","./BarC2":"20b0","./BarC2.vue":"20b0","./BarC3":"d1b6","./BarC3.vue":"d1b6","./BarC4":"ec06","./BarC4.vue":"ec06","./BarC5":"b26a","./BarC5.vue":"b26a","./BarC6":"03e6","./BarC6.vue":"03e6","./BarC7":"4d77","./BarC7.vue":"4d77","./BarC8":"17d4","./BarC8.vue":"17d4","./BarD1":"0f80","./BarD1.vue":"0f80","./BarD2":"e200","./BarD2.vue":"e200","./BarD3":"af55","./BarD3.vue":"af55","./BarD4":"e831","./BarD4.vue":"e831","./BarD5":"5e6c","./BarD5.vue":"5e6c","./BarD6":"98e4","./BarD6.vue":"98e4","./BarD7":"c839","./BarD7.vue":"c839","./BarD8":"af39","./BarD8.vue":"af39","./BarE1":"d497","./BarE1.vue":"d497","./BarE2":"6598","./BarE2.vue":"6598","./BarE3":"9783","./BarE3.vue":"9783"};function i(n){var t=o(n);return e(t)}function o(n){if(!e.o(a,n)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return a[n]}i.keys=function(){return Object.keys(a)},i.resolve=o,n.exports=i,i.id="4d76"},"4d77":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [4.2, 3.2, 4.8, 3.5],\n    yData2: [4.8, 3.5, 2.9, 2.8, 3, 5]\n  };\n  const defaultSeriesName = ['手机销量', '电脑销量'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        const options = {\n          title: {\n            text: this.titleText,\n            top: 'left',\n            left: 'top',\n            textStyle: {\n              align: 'left',\n              color: '#fff',\n              fontSize: 14\n            }\n          },\n          backgroundColor: '#0f375f',\n          grid: {\n            top: '50px',\n            right: '30px',\n            bottom: '20px' //也可设置left和right设置距离来控制图表的大小\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow',\n              label: {\n                show: true\n              }\n            }\n          },\n          legend: {\n            data: ['手机销量', '笔记本销量'],\n            top: '15%',\n            textStyle: {\n              color: '#ffffff'\n            }\n          },\n          xAxis: {\n            data: this.echdata.xData,\n            axisLine: {\n              show: true, //隐藏X轴轴线\n              lineStyle: {\n                color: '#01FCE3'\n              }\n            },\n            axisTick: {\n              show: true //隐藏X轴刻度\n            },\n            axisLabel: {\n              show: true,\n              textStyle: {\n                // color: '#ebf8ac' //X轴文字颜色\n              }\n            }\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '亿元',\n              nameTextStyle: {\n                color: '#ebf8ac'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: true\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: '#FFFFFF'\n                }\n              },\n              axisLabel: {\n                show: true,\n                textStyle: {\n                  color: '#ebf8ac'\n                }\n              }\n            },\n            {\n              type: 'value',\n              name: '同比',\n              nameTextStyle: {\n                color: '#ebf8ac'\n              },\n              position: 'right',\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLine: {\n                show: false\n              },\n              axisLabel: {\n                show: true,\n                formatter: '{value} %', //右侧Y轴文字显示\n                textStyle: {\n                  color: '#ebf8ac'\n                }\n              }\n            },\n            {\n              type: 'value',\n              gridIndex: 0,\n              min: 50,\n              max: 100,\n              splitNumber: 8,\n              splitLine: {\n                show: false\n              },\n              axisLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                show: false\n              },\n              splitArea: {\n                show: true,\n                areaStyle: {\n                  color: ['rgba(250,250,250,0.0)', 'rgba(250,250,250,0.05)']\n                }\n              }\n            }\n          ],\n          series: [\n            {\n              name: '手机销量',\n              type: 'line',\n              yAxisIndex: 1, //使用的 y 轴的 index，在单个图表实例中存在多个 y轴的时候有用\n              smooth: true, //平滑曲线显示\n              showAllSymbol: true, //显示所有图形。\n              symbol: 'circle', //标记的图形为实心圆\n              symbolSize: 10, //标记的大小\n              itemStyle: {\n                //折线拐点标志的样式\n                color: '#058cff'\n              },\n              lineStyle: {\n                color: '#058cff'\n              },\n              areaStyle: {\n                color: 'rgba(5,140,255, 0.2)'\n              },\n              data: this.echdata.yData\n            },\n            {\n              name: '笔记本销量',\n              type: 'bar',\n              barWidth: 10,\n              itemStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: '#00FFE3'\n                    },\n                    {\n                      offset: 1,\n                      color: '#4693EC'\n                    }\n                  ])\n                }\n              },\n              data: this.echdata.yData2\n            }\n          ]\n        };\n        return options;\n      }\n      //\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},5075:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '',\n    name: '',\n    props: {\n      echdata: {\n        type: Object,\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `echartsLine${Number(\n          Math.random()\n            .toString()\n            .substr(3, 3) + Date.now()\n        ).toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.initEchart();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const colorList = [\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ])\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -4,\n            textStyle: {\n              // color: '#2992ff',\n              color: '#fff', // 备用字体色 '#2B9DF2'\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n            // formatter: function(params) {\n            //   return params[0].name + '<br>' + params[0].value;\n            // }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              top: '20',\n              left: '10',\n              right: '20',\n              bottom: '-20',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false,\n              name: '人',\n              nameTextStyle: {\n                align: 'right',\n                color: '#FFFFFF'\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 16,\n                color: '#FFFFFF'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              inverse: false, // 设置 Y 轴数据反向展示\n              triggerEvent: true,\n              nameTextStyle: {\n                fontSize: 14,\n                color: '#FDFEFF',\n                padding: [0, 0, -10, -100]\n              },\n              axisLine: {\n                show: false,\n                lineStyle: {\n                  color: '#fff',\n                  align: 'left'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#96C2FF',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30,\n                normal: {\n                  label: {\n                    position: 'right', // 在上方显示\n                    show: true, // 开启显示\n                    textStyle: {\n                      color: '#FDFEFF',\n                      fontWeight: 600,\n                      fontSize: 13\n                    }\n                  }\n                }\n              },\n              z: 91\n            }\n          ]\n        };\n\n        echartEle.setOption(option, true);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"567a":function(n,t,e){},"5d1d":function(n,t,e){"use strict";e("cad2")},"5e6c":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [251, 282, 393, 454],\n    yData2: [221, 252, 373, 424],\n    yData3: [231, 282, 333, 434],\n    yData4: [241, 352, 343, 444]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        var options = {\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            // icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 13\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '-10%',\n              bottom: '0',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              color: 'rgba(255, 255, 255, .7)',\n              fontSize: 13,\n              interval: 0\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 14\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            },\n            {\n              type: 'value',\n              name: '',\n              show: false,\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 14\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: this.seriesname[0],\n              type: 'pictorialBar',\n              symbol: 'rect',\n              color: '#50CAFF',\n              symbolSize: [20, 10],\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#50CAFF', '#3492F4']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: colorList[0][0]\n                    },\n                    {\n                      offset: 1,\n                      color: colorList[0][1]\n                    }\n                  ]);\n                }\n              },\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '亿元';\n                }\n              },\n              symbolRepeat: true,\n              data: this.echdata.yData\n            },\n            {\n              name: this.seriesname[1],\n              type: 'line',\n              yAxisIndex: 1,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 8,\n              color: '#FEA800',\n              lineStyle: {\n                width: 1,\n                type: 'dashed'\n              },\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '%';\n                }\n              },\n              data: this.echdata.yData2\n            }\n          ]\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"617f":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[251,282,393,454],yData2:[221,252,373,424],yData3:[231,282,333,434],yData4:[241,352,343,444]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){var n={legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:13},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"-10%",bottom:"0",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:13,interval:0},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}},{type:"value",name:"",show:!1,axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}}],series:[{name:this.seriesname[0],type:"pictorialBar",symbol:"rect",color:"#50CAFF",symbolSize:[20,10],itemStyle:{color:n=>{var t=[["#50CAFF","#3492F4"]];return new this.$echarts.graphic.LinearGradient(0,0,0,1,[{offset:0,color:t[0][0]},{offset:1,color:t[0][1]}])}},tooltip:{valueFormatter:function(n){return n+"亿元"}},symbolRepeat:!0,data:this.echdata.yData},{name:this.seriesname[1],type:"line",yAxisIndex:1,showAllSymbol:!0,symbol:"circle",symbolSize:8,color:"#FEA800",lineStyle:{width:1,type:"dashed"},tooltip:{valueFormatter:function(n){return n+"%"}},data:this.echdata.yData2}]};return n}}},c=l,d=(e("95da"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"7d48f86a",null);t["default"]=h.exports},"62ac":function(n,t,e){"use strict";e("8e55")},"62d3":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=0;for(var t=0;t<this.echdata.yData.length;t++)n+=this.echdata.yData[t];var e={title:{text:this.titleText,top:-4,textStyle:{color:"#2B9DF2",fontSize:14}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},icon:"roundRect",itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:14},axisPointer:{type:"line"}},grid:[{left:"3%",right:"3%",bottom:"-5",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"#96C2FF",fontSize:10,interval:0,rotate:20},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"#96C2FF",fontSize:12,fontWeight:100},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)",fontSize:12}},splitLine:{show:!1}}],series:[{name:"数量",type:"bar",smooth:!0,barWidth:6,showAllSymbol:!0,symbol:"circle",symbolSize:6,color:"#10D6FE",lineStyle:{width:1,type:"dashed"},label:{show:!0,color:"#fff",fontSize:"12",fontWeight:600,position:"top",formatter:function(t){const e=(t.value/n*100).toFixed(2)+"%";return e}},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(2, 251, 189, .2)"},{offset:1,color:"rgba(2, 251, 189, 0)"}],globalCoord:!1}},data:this.echdata.yData}]},a=this.$echarts.init(document.getElementById(this.eleId));a.setOption(e,!0),window.addEventListener("resize",()=>{a.resize()})}}},l=s,c=(e("82c5"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"15f6bb05",null);t["default"]=d.exports},6598:function(n,t,e){"use strict";e.r(t),t["default"]='<template>\n  <div class="" style="color:#fff">\n    echart图\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {};\n    }\n  };\n<\/script>\n\n<style lang="scss" scoped></style>\n'},"6e83":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[251,282,393,454],yData2:[221,252,373,424],yData3:[231,282,333,434],yData4:[241,352,343,444]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){var n={legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},icon:"roundRect",itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:13},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"3%",bottom:"0",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:13,interval:0},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",max:500,min:0,axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}}],series:[{name:this.seriesname[0],type:"line",showAllSymbol:!0,symbol:"circle",symbolSize:10,color:"#10D6FE",showBackground:!0,backgroundStyle:{color:"rgba(22,208,144,0.15)"},itemStyle:{color:"#10D6FE",shadowColor:"#10D6FE",shadowBlur:10},lineStyle:{width:1},tooltip:{valueFormatter:function(n){return n+"%"}},label:{show:!0,fontSize:16,color:"#fff",position:"top"},data:this.echdata.yData},{name:this.seriesname[1],type:"bar",show:!1,barWidth:15,showBackground:!0,backgroundStyle:{color:"#061E4A"},itemStyle:{color:"#367af1"},tooltip:{show:!1},data:this.echdata.yData2}]};return n}}},c=l,d=(e("9815"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"8a463cd6",null);t["default"]=h.exports},"73e5":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[251,282,393,454],yData2:[221,252,373,424],yData3:[231,282,333,434],yData4:[241,352,343,444]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){var n={legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:13},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"0",bottom:"0",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:13,interval:0},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}},{type:"value",name:"",show:!1,axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}}],series:[{name:this.seriesname[0],type:"bar",color:"#2D98DF",itemStyle:{color:n=>{var t=[["#2D98DF","#0B244C"]];return new this.$echarts.graphic.LinearGradient(0,0,0,1,[{offset:0,color:t[0][0]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][1]}])}},barWidth:15,tooltip:{valueFormatter:function(n){return n+"元"}},data:this.echdata.yData},{name:this.seriesname[1],type:"line",yAxisIndex:1,showAllSymbol:!0,symbol:"circle",symbolSize:8,color:"#0DD793",lineStyle:{width:1,type:"dashed"},tooltip:{valueFormatter:function(n){return n+"%"}},data:this.echdata.yData2}]};return n}}},c=l,d=(e("83d3"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"39f1cd26",null);t["default"]=h.exports},7456:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const seriesArrData = [\n          {\n            // 柱体1\n            name: '数量',\n            data: this.echdata.yData,\n            type: 'bar',\n            barMaxWidth: 'auto',\n            barWidth: '10',\n            showBackground: true,\n            backgroundStyle: {\n              color: 'rgba(20, 88, 168, 0.2)'\n            },\n            itemStyle: {\n              normal: {\n                color: function(params) {\n                  var colorList = ['#02AFD5', '#F3CB6B'];\n                  return colorList[params.dataIndex % colorList.length];\n                },\n                label: {\n                  position: 'top',\n                  show: true, // 开启显示\n                  formatter: ['{a|{c}}'].join(','),\n                  rich: {\n                    a: {\n                      color: '#fff',\n                      align: 'center',\n                      fontSize: '12px'\n                    }\n                  },\n                  // position: 'top', // 在上方显示\n                  textStyle: {\n                    // 数值样式\n                    color: '#FDFEFF',\n                    fontSize: 12\n                  }\n                }\n              }\n            },\n            zlevel: 2\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 备用字体色 '#2B9DF2' '#2992ff',\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},7520:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[400,400,300,500,300,400,400,400,300],yData2:[400,600,700,700,1e3,400,400,600,700],yData3:[400,500,500,500,500,400,400,500,500],yData4:[400,600,700,700,1e3,400,400,600,700]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){const n=[{name:this.seriesname[0],type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#9C9AFF",barBorderRadius:[12,12,0,0],label:{show:!0,position:"right",textStyle:{fontSize:12,fontWeight:400,color:"#9C9AFF"}}}},data:this.echdata.yData},{name:this.seriesname[1],type:"line",barWidth:"15%",smooth:!0,itemStyle:{normal:{color:"#FFCA71",barBorderRadius:[12,12,0,0],label:{show:!0,position:"top",textStyle:{fontSize:12,fontWeight:400,color:"#FFCA71"}}}},data:this.echdata.yData2}],t={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},itemWidth:16,itemHeight:10,itemGap:5,data:[{name:this.seriesname[0],icon:"circle"},{name:this.seriesname[1],icon:"roundRect"}]},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:n};return t}}},c=l,d=(e("ebd2"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"211195b9",null);t["default"]=h.exports},"753c":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        const options = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: [\n            {\n              // 柱体1\n              name: '数量',\n              data: this.echdata.yData,\n              type: 'bar',\n              barMaxWidth: 'auto',\n              barWidth: '10',\n              showBackground: true,\n              backgroundStyle: {\n                color: 'rgba(20, 88, 168, 0.2)'\n              },\n              itemStyle: {\n                normal: {\n                  color: params => {\n                    var colorList = [['#2D98DF', '#0B244C']];\n                    47;\n                    return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                      {\n                        offset: 0,\n                        color: colorList[0][0]\n                      },\n                      {\n                        offset: 0.5,\n                        color: colorList[0][0]\n                      },\n                      {\n                        offset: 1,\n                        color: colorList[0][1]\n                      }\n                    ]);\n                  },\n                  label: {\n                    show: true,\n                    position: 'top',\n                    textStyle: {\n                      fontSize: 14,\n                      fontWeight: 600,\n                      color: '#D1DBFF' // 字体颜色\n                    }\n                  }\n                },\n                barBorderRadius: 30\n              },\n              zlevel: 2\n            }\n          ]\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"7bbf":function(n,t,e){"use strict";e("c171")},"7da8":function(n,t,e){"use strict";e("8f11")},"82c5":function(n,t,e){"use strict";e("a360")},"83d3":function(n,t,e){"use strict";e("856b")},"856b":function(n,t,e){},8714:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2021年","2022年","2023年"],yData:[251,282,393,454],yData2:[221,252,373,424],yData3:[231,282,333,434],yData4:[241,352,343,444]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){var n={legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},selectedMode:!1,itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:13},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"3%",bottom:"0",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:13,interval:0},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}},{type:"value",name:"",show:!1,axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}}],series:[{name:this.seriesname[0],type:"bar",color:"#0ED793",barWidth:15,showBackground:!0,backgroundStyle:{color:"#0D273F"},itemStyle:{color:n=>{var t=[["#00CC8F","#2FF2B8"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][1]},{offset:.5,color:t[0][1]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}},tooltip:{valueFormatter:function(n){return n+"万人"}},data:this.echdata.yData},{z:2,type:"pictorialBar",tooltip:{show:!1},data:this.echdata.yData,symbol:"diamond",symbolOffset:["-9","50%"],symbolSize:[15,8],itemStyle:{color:n=>{var t=[["#00CC8F","#2FF2B8"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][1]},{offset:.5,color:t[0][1]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}}},{z:3,type:"pictorialBar",tooltip:{show:!1},symbolPosition:"end",data:this.echdata.yData1,symbol:"diamond",symbolOffset:["-9","-50%"],symbolSize:[15,8],itemStyle:{color:n=>{var t=[["#00CC8F","#2FF2B8"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][0]},{offset:.5,color:t[0][0]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}}},{name:this.seriesname[1],type:"bar",color:"#1984B0",barWidth:15,showBackground:!0,backgroundStyle:{color:"#072442"},itemStyle:{color:n=>{var t=[["#1984B0","#51CAFF"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][1]},{offset:.5,color:t[0][1]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}},tooltip:{valueFormatter:function(n){return n+"万人"}},data:this.echdata.yData2},{z:2,type:"pictorialBar",tooltip:{show:!1},data:this.echdata.yData2,symbol:"diamond",symbolOffset:["9","50%"],symbolSize:[15,8],itemStyle:{color:n=>{var t=[["#1984B0","#51CAFF"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][1]},{offset:.5,color:t[0][1]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}}},{z:3,type:"pictorialBar",tooltip:{show:!1},symbolPosition:"end",data:this.echdata.yData2,symbol:"diamond",symbolOffset:["9","-50%"],symbolSize:[15,8],itemStyle:{color:n=>{var t=[["#1984B0","#51CAFF"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][0]},{offset:.5,color:t[0][0]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}}}]};return n}}},c=l,d=(e("965a"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"cf632eec",null);t["default"]=h.exports},"89c6":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,330,400],yData2:[110,220,300,440]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();var t=this.$echarts.init(document.getElementById(this.eleId));t.setOption(n,!0),window.addEventListener("resize",()=>{t.resize()})},getOptions(){var n={legend:{right:0,top:0,textStyle:{color:"#fff",fontStyle:"normal",fontFamily:"微软雅黑",fontSize:14},icon:"roundRect",itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:14},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"0%",bottom:"0",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:13,interval:0},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:{type:"value",name:"亿元",nameTextStyle:{color:"rgba(255, 255, 255, .7)"},axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:13},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}},series:[{name:this.seriesname[0],type:"bar",barWidth:10,itemStyle:{color:"#50cbff"},label:{show:!0,color:"#fff",fontSize:"14",position:"top"},data:this.echdata.yData},{name:this.seriesname[1],type:"bar",barWidth:10,itemStyle:{color:"#eecd3a"},label:{show:!0,color:"#fff",fontSize:"14",position:"top"},data:this.echdata.yData2}]};return n}}},c=l,d=(e("3b48"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"2e4cff5c",null);t["default"]=h.exports},"8c05":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"page"},[t("div",{staticClass:"header"},[t("h3",{staticClass:"title"},[n._v("A柱状图· 基础")]),t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.echDefDataA,expression:"echDefDataA",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"rightCopy"},[n._v("复制数据")])]),t("section",{staticClass:"units-box"},[t("ul",{staticClass:"unit-list"},n._l(n.dynamicComponents_A,(function(e,a){return t("li",{key:a+"A",staticClass:"unit-item",attrs:{id:"itemCls"+a}},[t("div",{staticClass:"theUnit"},[t(n.dynamicComponents_A[a],{tag:"component",attrs:{titleText:"标题"+(a+1)}})],1),t("div",{staticClass:"title",attrs:{info:"tip提示"}},[n._v(n._s(n.getInfoTip(n.vueFiles["BarA"+(a+1)])))]),t("div",{staticClass:"btnBlock"},[t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles["BarA"+(a+1)],expression:"vueFiles[`BarA${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),t("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(t){return n.onPreview("BarA"+(a+1))}}}),t("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(t){return n.onHandleItem("BarA"+(a+1))}}})])])})),0)]),t("div",{staticClass:"header"},[t("h3",{staticClass:"title"},[n._v("B柱状图· 横向")]),t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.echDefDataB,expression:"echDefDataB",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"rightCopy"},[n._v("复制数据")])]),t("section",{staticClass:"units-box"},[t("ul",{staticClass:"unit-list"},n._l(n.dynamicComponents_B,(function(e,a){return t("li",{key:a+"B",staticClass:"unit-item",attrs:{id:"itemCls"+a}},[t("div",{staticClass:"theUnit"},[t(n.dynamicComponents_B[a],{tag:"component"})],1),t("div",{staticClass:"title",attrs:{info:"tip提示"}},[n._v(n._s(n.getInfoTip(n.vueFiles["BarB"+(a+1)])))]),t("div",{staticClass:"btnBlock"},[t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles["BarB"+(a+1)],expression:"vueFiles[`BarB${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),t("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(t){return n.onPreview("BarB"+(a+1))}}}),t("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(t){return n.onHandleItem("BarB"+(a+1))}}})])])})),0)]),t("div",{staticClass:"header"},[t("h3",{staticClass:"title"},[n._v("C柱状图· 多系列")]),t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.echDefDataC,expression:"echDefDataC",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"rightCopy"},[n._v("复制数据")])]),t("section",{staticClass:"units-box"},[t("ul",{staticClass:"unit-list"},n._l(n.dynamicComponents_C,(function(e,a){return t("li",{key:a+"C",staticClass:"unit-item",attrs:{id:"itemCls"+a}},[t("div",{staticClass:"theUnit"},[t(n.dynamicComponents_C[a],{tag:"component"})],1),t("div",{staticClass:"title",attrs:{info:"tip提示"}},[n._v(n._s(n.getInfoTip(n.vueFiles["BarC"+(a+1)])))]),t("div",{staticClass:"btnBlock"},[t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles["BarC"+(a+1)],expression:"vueFiles[`BarC${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),t("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(t){return n.onPreview("BarC"+(a+1))}}}),t("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(t){return n.onHandleItem("BarC"+(a+1))}}})])])})),0)]),t("div",{staticClass:"header"},[t("h3",{staticClass:"title"},[n._v("D柱状图· 多系列2")]),t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.echDefDataD,expression:"echDefDataD",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"rightCopy"},[n._v("复制数据")])]),t("section",{staticClass:"units-box"},[t("ul",{staticClass:"unit-list"},n._l(n.dynamicComponents_D,(function(e,a){return t("li",{key:a+"D",staticClass:"unit-item",attrs:{id:"itemCls"+a}},[t("div",{staticClass:"theUnit"},[t(n.dynamicComponents_D[a],{tag:"component"})],1),t("div",{staticClass:"title",attrs:{info:"tip提示"}},[n._v(n._s(n.getInfoTip(n.vueFiles["BarD"+(a+1)])))]),t("div",{staticClass:"btnBlock"},[t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles["BarD"+(a+1)],expression:"vueFiles[`BarD${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),t("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(t){return n.onPreview("BarD"+(a+1))}}}),t("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(t){return n.onHandleItem("BarD"+(a+1))}}})])])})),0)]),t("div",{staticClass:"header"},[t("h3",{staticClass:"title"},[n._v("E柱状图· 动态")]),t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.echDefDataD,expression:"echDefDataD",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"rightCopy"},[n._v("复制数据")])]),t("section",{staticClass:"units-box"},[t("ul",{staticClass:"unit-list"},n._l(n.dynamicComponents_E,(function(e,a){return t("li",{key:a+"E",staticClass:"unit-item",attrs:{id:"itemCls"+a}},[t("div",{staticClass:"theUnit"},[t(n.dynamicComponents_E[a],{tag:"component"})],1),t("div",{staticClass:"title",attrs:{info:"tip提示"}},[n._v(n._s(n.getInfoTip(n.vueFiles["BarE"+(a+1)])))]),t("div",{staticClass:"btnBlock"},[t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles["BarE"+(a+1)],expression:"vueFiles[`BarE${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),t("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(t){return n.onPreview("BarE"+(a+1))}}}),t("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(t){return n.onHandleItem("BarE"+(a+1))}}})])])})),0)]),n.isShowFullCode?t("FullScreenCodeNew",{attrs:{isshow:n.isShowFullCode,codecontent:n.codecontent},on:{"update:isshow":function(t){n.isShowFullCode=t},"update:codecontent":function(t){n.codecontent=t}}},[t(n.previewEchart,{tag:"component"})],1):n._e(),n.isShowFullPreview?t("FullScreenPreview",{attrs:{isshow:n.isShowFullPreview},on:{"update:isshow":function(t){n.isShowFullPreview=t}}},[t(n.previewEchart,{tag:"component"}),t("template",{slot:"btn"},[t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles[""+n.previewEchart],expression:"vueFiles[`${previewEchart}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"btnicon"},[n._v("复制")])])],2):n._e()],1)},i=[],o=(e("14d9"),e("2b0e")),r=e("00e9");let s={},l=[];function c(){const n=e("18d5");n.keys().forEach(t=>{const a=n(t),i=t.replace(/^\.\//,"").replace(/\.vue$/,"");o["default"].component(i,a.default||a);const r=t.replace(/\.\//,""),c=e("4d76")("./"+r),d=r.replace(".vue","");s[d]=c.default,l.push(d)})}c();var d={data(){return{isShowFullCode:!1,isShowFullPreview:!1,previewEchart:"",codecontent:"hello world",vueFiles:{},dynamicComponents_A:["BarA1"],dynamicComponents_B:["BarB1"],dynamicComponents_C:["BarC1"],dynamicComponents_D:["BarD1"],dynamicComponents_E:["BarE1"],dynamicComponents:["BarA1","BarA2"],echDefDataA:"{\n          xData: ['2020年', '2021年', '2022年', '2023年'], // X轴\n          yData: [101, 202, 303, 404] // Y轴\n        }",echDefDataB:"{\n          xData: [5, 75, 115, 52.65, 25.75],  // X轴\n          yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']  // Y轴\n        }",echDefDataC:"{\n          xData: ['2020年', '2021年', '2022年', '2023年'],\n          yData: [400, 400, 300, 500, 300, 400, 400, 400, 300],\n          yData2: [400, 600, 700, 700, 1000, 400, 400, 600, 700],\n          yData3: [400, 500, 500, 500, 500, 400, 400, 500, 500],\n          yData4: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n        }",echDefDataD:""}},mounted(){this.vueFiles=s,this.dynamicComponents_A=l.filter(n=>n.includes("BarA")),this.dynamicComponents_B=l.filter(n=>n.includes("BarB")),this.dynamicComponents_C=l.filter(n=>n.includes("BarC")),this.dynamicComponents_D=l.filter(n=>n.includes("BarD")),this.dynamicComponents_E=l.filter(n=>n.includes("BarE"))},methods:{onHandleItem(n){this.isShowFullCode=!0,this.previewEchart=n,this.codecontent=s[n]},clipboardSuccess(){Object(r["a"])()},onPreview(n){this.isShowFullPreview=!0,this.previewEchart=n},getInfoTip(n){if(!n)return;const t=/infoTip:\s*['"]([^'"]+)['"]/;if(!t)return;const e=n.match(t),a=e&&e[1]||"备注：";return a}}},h=d,f=(e("2b57"),e("2877")),p=Object(f["a"])(h,a,i,!1,null,"48509511",null);t["default"]=p.exports},"8ca7":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticStyle:{color:"#fff"}},[n._v(" echart图 ")])},i=[],o={data(){return{}}},r=o,s=e("2877"),l=Object(s["a"])(r,a,i,!1,null,"8417ea32",null);t["default"]=l.exports},"8da1":function(n,t,e){},"8e55":function(n,t,e){},"8f11":function(n,t,e){},"918f":function(n,t,e){"use strict";e("c0e1")},9406:function(n,t,e){},"95da":function(n,t,e){"use strict";e("a990")},"965a":function(n,t,e){"use strict";e("8da1")},9783:function(n,t,e){"use strict";e.r(t),t["default"]='<template>\n  <div class="" style="color:#fff">\n    echart图\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {};\n    }\n  };\n<\/script>\n\n<style lang="scss" scoped></style>\n'},9815:function(n,t,e){"use strict";e("0beb")},"988b":function(n,t,e){},"98e4":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2021年', '2022年', '2023年'],\n    yData: [251, 282, 393, 454],\n    yData2: [221, 252, 373, 424],\n    yData3: [231, 282, 333, 434],\n    yData4: [241, 352, 343, 444]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        var options = {\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            // icon: 'roundRect',\n            selectedMode: false, // 是否允许点击\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 13\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '0',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              color: 'rgba(255, 255, 255, .7)',\n              fontSize: 13,\n              interval: 0\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 14\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            },\n            {\n              type: 'value',\n              name: '',\n              show: false,\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 14\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: this.seriesname[0],\n              type: 'bar',\n              color: '#0ED793',\n              barWidth: 15,\n              showBackground: true,\n              backgroundStyle: {\n                color: '#0D273F'\n              },\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#00CC8F', '#2FF2B8']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              },\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '万人';\n                }\n              },\n              data: this.echdata.yData\n            },\n            {\n              z: 2,\n              type: 'pictorialBar',\n              tooltip: {\n                show: false\n              },\n              data: this.echdata.yData,\n              symbol: 'diamond',\n              symbolOffset: ['-9', '50%'],\n              symbolSize: [15, 8],\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#00CC8F', '#2FF2B8']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              }\n            },\n            {\n              z: 3,\n              type: 'pictorialBar',\n              tooltip: {\n                show: false\n              },\n              symbolPosition: 'end',\n              data: this.echdata.yData1,\n              symbol: 'diamond',\n              symbolOffset: ['-9', '-50%'],\n              symbolSize: [15, 8],\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#00CC8F', '#2FF2B8']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][0] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              }\n            },\n            {\n              name: this.seriesname[1],\n              type: 'bar',\n              color: '#1984B0',\n              barWidth: 15,\n              showBackground: true,\n              backgroundStyle: {\n                color: '#072442'\n              },\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#1984B0', '#51CAFF']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              },\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '万人';\n                }\n              },\n              data: this.echdata.yData2\n            },\n            {\n              z: 2,\n              type: 'pictorialBar',\n              tooltip: {\n                show: false\n              },\n              data: this.echdata.yData2,\n              symbol: 'diamond',\n              symbolOffset: ['9', '50%'],\n              symbolSize: [15, 8],\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#1984B0', '#51CAFF']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              }\n            },\n            {\n              z: 3,\n              type: 'pictorialBar',\n              tooltip: {\n                show: false\n              },\n              symbolPosition: 'end',\n              data: this.echdata.yData2,\n              symbol: 'diamond',\n              symbolOffset: ['9', '-50%'],\n              symbolSize: [15, 8],\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#1984B0', '#51CAFF']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][0] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              }\n            }\n          ]\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"9cbb":function(n,t,e){"use strict";e.r(t);var a,i,o=e("2877"),r={},s=Object(o["a"])(r,a,i,!1,null,null,null);t["default"]=s.exports},"9d4a":function(n,t,e){},"9d51":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '备注：',\n    name: '',\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.drainitEchartm();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n        this.onHanleClick();\n      });\n    },\n    methods: {\n      // echart 初始化\n      initEchart() {\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\n\n        var option = {\n          title: {\n            text: this.titleText,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            },\n            x: 'left'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              left: '10',\n              right: '0',\n              bottom: '-15',\n              top: '30',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false\n            }\n          ],\n          yAxis: [\n            {\n              // name: '年龄',\n              inverse: false,\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13,\n                formatter: function(value, index) {\n                  return value.length > 5 ? value.slice(0, 5) + '...' : value;\n                }\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          label: {\n            show: true,\n            position: 'right',\n            color: '#fff',\n            fontSize: 13,\n            fontWeight: 600\n          },\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData,\n              barWidth: 8,\n              itemStyle: {\n                barBorderRadius: 30,\n                color: new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n                  { offset: 0, color: '#FAACA8' },\n                  { offset: 1, color: '#FA709A' }\n                ])\n              },\n              z: 91\n            },\n            {\n              name: '进度条背景',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData.map(function(d) {\n                return barMax;\n              }),\n              barWidth: 8,\n              tooltip: {\n                show: false\n              },\n              itemStyle: {\n                normal: {\n                  barBorderRadius: 30,\n                  color: '#0A3069',\n                  barBorderColor: '#0A3069', // 边框色\n                  barBorderWidth: 1, // 边框宽度\n                  label: {\n                    show: false,\n                    textStyle: {\n                      color: 'rgba(255,255,255,1)'\n                    },\n                    position: 'right',\n                    formatter: function(p) {\n                      return this.echdata.xData[p.dataIndex];\n                    }\n                  }\n                }\n              },\n              z: 90\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        var fontColor = '#30eee9';\n        const options = {\n          backgroundColor: '#11183c',\n          grid: {\n            left: '5%',\n            right: '10%',\n            top: '20%',\n            bottom: '15%',\n            containLabel: true\n          },\n          tooltip: {\n            show: true,\n            trigger: 'item'\n          },\n          legend: {\n            show: true,\n            x: 'center',\n            y: '35',\n            icon: 'stack',\n            itemWidth: 10,\n            itemHeight: 10,\n            textStyle: {\n              color: '#1bb4f6'\n            },\n            data: ['已采纳', '已发布', '浏览量']\n          },\n          xAxis: [\n            {\n              type: 'category',\n              boundaryGap: false,\n              axisLabel: {\n                color: fontColor\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: '#397cbc'\n                }\n              },\n              axisTick: {\n                show: false\n              },\n              splitLine: {\n                show: true,\n                lineStyle: {\n                  color: '#195384'\n                }\n              },\n              data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value',\n              name: '信息量',\n              min: 0,\n              max: 1000,\n              axisLabel: {\n                formatter: '{value}',\n                textStyle: {\n                  color: '#2ad1d2'\n                }\n              },\n              axisLine: {\n                lineStyle: {\n                  color: '#27b4c2'\n                }\n              },\n              axisTick: {\n                show: false\n              },\n              splitLine: {\n                show: true,\n                lineStyle: {\n                  color: '#11366e'\n                }\n              }\n            },\n            {\n              type: 'value',\n              name: '浏览量',\n              min: 0,\n              max: 1000,\n              axisLabel: {\n                formatter: '{value} 人',\n                textStyle: {\n                  color: '#186afe'\n                }\n              },\n              axisLine: {\n                lineStyle: {\n                  color: '#186afe'\n                }\n              },\n              axisTick: {\n                show: false\n              },\n              splitLine: {\n                show: true,\n                lineStyle: {\n                  color: '#11366e'\n                }\n              }\n            }\n          ],\n          series: [\n            {\n              name: '已采纳',\n              type: 'line',\n              stack: '总量',\n              symbol: 'circle',\n              symbolSize: 8,\n              itemStyle: {\n                normal: {\n                  color: '#0092f6',\n                  lineStyle: {\n                    color: '#0092f6',\n                    width: 1\n                  },\n                  areaStyle: {\n                    //color: '#94C9EC'\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\n                      {\n                        offset: 0,\n                        color: 'rgba(7,44,90,0.3)'\n                      },\n                      {\n                        offset: 1,\n                        color: 'rgba(0,146,246,0.9)'\n                      }\n                    ])\n                  }\n                }\n              },\n              markPoint: {\n                itemStyle: {\n                  normal: {\n                    color: 'red'\n                  }\n                }\n              },\n              data: [120, 132, 101, 134, 90, 230, 210, 182, 191, 234, 290, 330]\n            },\n            {\n              name: '已发布',\n              type: 'line',\n              stack: '总量',\n              symbol: 'circle',\n              symbolSize: 8,\n\n              itemStyle: {\n                normal: {\n                  color: '#00d4c7',\n                  lineStyle: {\n                    color: '#00d4c7',\n                    width: 1\n                  },\n                  areaStyle: {\n                    //color: '#94C9EC'\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\n                      {\n                        offset: 0,\n                        color: 'rgba(7,44,90,0.3)'\n                      },\n                      {\n                        offset: 1,\n                        color: 'rgba(0,212,199,0.9)'\n                      }\n                    ])\n                  }\n                }\n              },\n              data: [220, 182, 191, 234, 290, 330, 310, 201, 154, 190, 330, 410]\n            },\n            {\n              name: '浏览量',\n              type: 'line',\n              stack: '总量',\n              symbol: 'circle',\n              symbolSize: 8,\n              itemStyle: {\n                normal: {\n                  color: '#aecb56',\n                  lineStyle: {\n                    color: '#aecb56',\n                    width: 1\n                  },\n                  areaStyle: {\n                    //color: '#94C9EC'\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\n                      {\n                        offset: 0,\n                        color: 'rgba(7,44,90,0.3)'\n                      },\n                      {\n                        offset: 1,\n                        color: 'rgba(114,144,89,0.9)'\n                      }\n                    ])\n                  }\n                }\n              },\n              data: [150, 232, 201, 154, 190, 330, 410, 150, 232, 201, 154, 190]\n            }\n          ]\n        };\n      },\n      // 点击事件\n      onHanleClick() {\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.getZr().on('click', params => {\n          console.log('点击饿了', params);\n          const pointInPixel = [params.offsetX, params.offsetY];\n          if (echartEle.containPixel('grid', pointInPixel)) {\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\n            console.log(xIndex);\n          }\n          // this.$router.push('/sy-chanyelian')\n          //\n          // var options = echartEle.getOption()\n          // console.log('options配置', options)\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},a042:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=[{name:"数量",data:this.echdata.yData,type:"bar",barMaxWidth:"auto",barWidth:"10",showBackground:!0,backgroundStyle:{color:"rgba(20, 88, 168, 0.2)"},itemStyle:{normal:{color:function(n){var t=["#02AFD5","#F3CB6B"];return t[n.dataIndex%t.length]},label:{position:"top",show:!0,formatter:["{a|{c}}"].join(","),rich:{a:{color:"#fff",align:"center",fontSize:"12px"}},textStyle:{color:"#FDFEFF",fontSize:12}}}},zlevel:2}],t={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:14,fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:n};let e=o["init"](document.getElementById(this.eleId));e.setOption(t,!0),window.addEventListener("resize",()=>{e.resize()})}}},l=s,c=(e("0b90"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"4bd8d17e",null);t["default"]=d.exports},a074:function(n,t,e){"use strict";e("16a9")},a2c8:function(n,t,e){},a360:function(n,t,e){},a990:function(n,t,e){},af39:function(n,t,e){"use strict";e.r(t),t["default"]=""},af55:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [251, 282, 393, 454],\n    yData2: [221, 252, 373, 424],\n    yData3: [231, 282, 333, 434],\n    yData4: [241, 352, 343, 444]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        var options = {\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            // icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 13\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '0',\n              bottom: '0',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              color: 'rgba(255, 255, 255, .7)',\n              fontSize: 13,\n              interval: 0\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 14\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            },\n            {\n              type: 'value',\n              name: '',\n              show: false,\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 14\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: this.seriesname[0],\n              type: 'bar',\n              color: '#2D98DF',\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#2D98DF', '#0B244C']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: colorList[0][0]\n                    },\n                    {\n                      offset: 0.5,\n                      color: colorList[0][0]\n                    },\n                    {\n                      offset: 1,\n                      color: colorList[0][1]\n                    }\n                  ]);\n                }\n              },\n              barWidth: 15,\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '元';\n                }\n              },\n              data: this.echdata.yData\n            },\n            {\n              name: this.seriesname[1],\n              type: 'line',\n              yAxisIndex: 1,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 8,\n              color: '#0DD793',\n              lineStyle: {\n                width: 1,\n                type: 'dashed'\n              },\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '%';\n                }\n              },\n              data: this.echdata.yData2\n            }\n          ]\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},b26a:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 330, 400],\n    yData2: [110, 220, 300, 440]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        var options = {\n          title: {\n            text: this.titleText,\n            // subtext: '2023年6月8日',\n            // left: 'center',\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 14\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '0',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              // color: 'red',\n              color: '#96C2FF',\n              fontSize: 12,\n              interval: 0\n              //   rotate: 20\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                // color: 'red',\n                color: '#96C2FF',\n                fontSize: 12,\n                fontWeight: 100\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)',\n                  fontSize: 12\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              // 柱体1\n              name: this.seriesname[0],\n              data: this.echdata.yData,\n              type: 'bar',\n              barMaxWidth: 'auto',\n              barWidth: '10%', // auto\n              itemStyle: {\n                normal: {\n                  color: {\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    type: 'linear',\n                    global: false,\n                    colorStops: [\n                      {\n                        offset: 0,\n                        color: '#11f1ea'\n                      },\n                      {\n                        offset: 1,\n                        color: '#11f1ea'\n                      }\n                    ]\n                  }\n                  //   label: {\n                  //     show: true,\n                  //     position: 'top',\n                  //     offset: [0, -10], // 柱子上方偏移\n                  //     textStyle: {\n                  //       fontSize: 12,\n                  //       fontWeight: 400,\n                  //       color: '#D1DBFF' // 字体颜色\n                  //     }\n                  //   }\n                }\n              }\n            },\n            {\n              // 柱体2\n              name: this.seriesname[1],\n              data: this.echdata.yData2,\n              type: 'bar',\n              barMaxWidth: 'auto',\n              barWidth: '10%', // auto\n              itemStyle: {\n                normal: {\n                  color: {\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    type: 'linear',\n                    global: false,\n                    colorStops: [\n                      {\n                        offset: 0,\n                        color: '#bdae20'\n                      },\n                      {\n                        offset: 1,\n                        color: '#bdae20'\n                      }\n                    ]\n                  }\n                  //   label: {\n                  //     show: true,\n                  //     position: 'right',\n                  //     textStyle: {\n                  //       fontSize: 12,\n                  //       fontWeight: 400,\n                  //       color: '#D1DBFF' // 字体颜色\n                  //     }\n                  //   }\n                }\n              }\n            },\n            {\n              // 柱体1\n              name: this.seriesname[2],\n              data: this.echdata.yData2,\n              type: 'bar',\n              barMaxWidth: 'auto',\n              barWidth: '15%', // auto\n              itemStyle: {\n                normal: {\n                  color: {\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    type: 'linear',\n                    global: false,\n                    colorStops: [\n                      {\n                        offset: 0,\n                        color: '#1c54a7'\n                      },\n                      {\n                        offset: 1,\n                        color: '#1c54a7'\n                      }\n                    ]\n                  }\n                  //   label: {\n                  //     show: true,\n                  //     position: 'top',\n                  //     offset: [0, -20], // 柱子上方偏移\n                  //     textStyle: {\n                  //       fontSize: 12,\n                  //       fontWeight: 400,\n                  //       color: '#1c54a7' // 字体颜色\n                  //     }\n                  //   }\n                }\n              }\n            }\n          ]\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},b463:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){var n={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},icon:"roundRect",itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:14},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"3%",bottom:"-5",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"#96C2FF",fontSize:10,interval:0,rotate:20},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"#96C2FF",fontSize:12,fontWeight:100},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)",fontSize:12}},splitLine:{show:!1}}],series:[{name:"数量",type:"bar",smooth:!0,barWidth:6,color:"#10D6FE",lineStyle:{width:1,type:"dashed"},label:{show:!0,color:"#fff",fontSize:"12",fontWeight:600,position:"top",formatter:function(n){return n.value+"人"}},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(2, 251, 189, .2)"},{offset:1,color:"rgba(2, 251, 189, 0)"}],globalCoord:!1}},data:this.echdata.yData}]},t=this.$echarts.init(document.getElementById(this.eleId));t.setOption(n,!0),window.addEventListener("resize",()=>{t.resize()})}}},l=s,c=(e("2c70"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"0edb0670",null);t["default"]=d.exports},bd97:function(n,t,e){},be19:function(n,t,e){"use strict";e.r(t);var a,i,o=e("2877"),r={},s=Object(o["a"])(r,a,i,!1,null,null,null);t["default"]=s.exports},bfea:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[400,400,300,300,300,400,400,400,300],yData2:[400,500,500,500,500,400,400,500,500],yData3:[400,600,700,700,1e3,400,400,600,700],yData4:[400,600,700,700,1e3,400,400,600,700]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){const n=[{name:this.seriesname[0],type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#9C9AFF",barBorderRadius:[12,12,0,0]}},data:this.echdata.yData},{name:this.seriesname[1],type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#FC8B62",barBorderRadius:[12,12,0,0]}},data:this.echdata.yData2},{name:this.seriesname[2],type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#FF679F",barBorderRadius:[12,12,0,0]}},data:this.echdata.yData3},{name:this.seriesname[3],type:"line",barWidth:"15%",smooth:!0,itemStyle:{normal:{color:"#FFCA71",barBorderRadius:[12,12,0,0]}},data:this.echdata.yData4}],t={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:n};return t}}},c=l,d=(e("25a7"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"69bb78f0",null);t["default"]=h.exports},c0ca:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [400, 400, 300, 500, 300, 400, 400, 400, 300],\n    yData2: [400, 600, 700, 700, 1000, 400, 400, 600, 700],\n    yData3: [400, 500, 500, 500, 500, 400, 400, 500, 500],\n    yData4: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        const seriesArrData = [\n          {\n            name: this.seriesname[0],\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: this.echdata.yData\n          },\n          {\n            name: this.seriesname[1],\n            type: 'line',\n            barWidth: '15%',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: this.echdata.yData2\n          }\n        ];\n        const options = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            // icon: 'circle',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5,\n            data: [\n              // 针对每个系列设置 legend 样式\n              {\n                name: this.seriesname[0],\n                icon: 'circle'\n              },\n              {\n                name: this.seriesname[1],\n                icon: 'roundRect'\n              }\n            ]\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},c0e1:function(n,t,e){},c171:function(n,t,e){},c6a5:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2021年","2022年","2023年"],yData:[251,282,393,454],yData2:[221,252,373,424],yData3:[231,282,333,434],yData4:[241,352,343,444]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){var n={legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},selectedMode:!1,itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:13},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"-10%",bottom:"00",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:13,interval:0},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:13},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}},{type:"value",name:"",show:!1,axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}}],series:[{name:this.seriesname[0],type:"line",yAxisIndex:1,showAllSymbol:!0,symbol:"circle",symbolSize:8,color:"#E7E626",lineStyle:{width:1,type:"dashed"},tooltip:{valueFormatter:function(n){return n+"%"}},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(254, 204, 62, .2)"},{offset:1,color:"rgba(254, 204, 62, 0)"}],globalCoord:!1}},data:this.echdata.yData},{name:this.seriesname[1],type:"bar",color:"#126DA6",barWidth:15,itemStyle:{color:n=>{var t=[["#1984B0","#51CAFF"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][1]},{offset:.5,color:t[0][1]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}},tooltip:{valueFormatter:function(n){return n+"万人"}},data:this.echdata.yData2},{z:2,type:"pictorialBar",tooltip:{show:!1},data:this.echdata.yData2,symbol:"diamond",symbolOffset:["-9","50%"],symbolSize:[15,8],itemStyle:{color:n=>{var t=[["#1984B0","#51CAFF"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][1]},{offset:.5,color:t[0][1]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}}},{z:3,type:"pictorialBar",tooltip:{show:!1},symbolPosition:"end",data:this.echdata.yData2,symbol:"diamond",symbolOffset:["-9","-50%"],symbolSize:[15,8],itemStyle:{color:n=>{var t=[["#1984B0","#51CAFF"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][0]},{offset:.5,color:t[0][0]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}}},{name:this.seriesname[2],type:"bar",color:"#0ED793",barWidth:15,itemStyle:{color:n=>{var t=[["#00CC8F","#2FF2B8"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][1]},{offset:.5,color:t[0][1]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}},tooltip:{valueFormatter:function(n){return n+"万人"}},data:this.echdata.yData3},{z:2,type:"pictorialBar",tooltip:{show:!1},data:this.echdata.yData3,symbol:"diamond",symbolOffset:["9","50%"],symbolSize:[15,8],itemStyle:{color:n=>{var t=[["#00CC8F","#2FF2B8"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][1]},{offset:.5,color:t[0][1]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}}},{z:3,type:"pictorialBar",tooltip:{show:!1},symbolPosition:"end",data:this.echdata.yData3,symbol:"diamond",symbolOffset:["9","-50%"],symbolSize:[15,8],itemStyle:{color:n=>{var t=[["#00CC8F","#2FF2B8"]];return{type:"linear",x:0,x2:1,y:0,y2:0,colorStops:[{offset:0,color:t[0][0]},{offset:.5,color:t[0][0]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][0]}]}}}}]};return n}}},c=l,d=(e("e01f"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"e9d34674",null);t["default"]=h.exports},c70e:function(n,t,e){"use strict";e("e812")},c839:function(n,t,e){"use strict";e.r(t),t["default"]=""},c87a:function(n,t,e){},c953:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=(e("14d9"),e("313e"));const r={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"",name:"",props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36))}},watch:{echdata:{handler:function(){this.drainitEchartm()},deep:!0}},created(){},mounted(){this.$echarts=o,this.$nextTick((function(){this.initEchart(),this.onHanleClick()}))},methods:{initEchart(){for(var n=[new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}])],t=1.1*Math.max(...this.echdata.xData),e=[],a=0;a<this.echdata.xData.length;a++)e.push(t);var i={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:14,fontWeight:600},x:"left"},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{top:"20px",left:"10",right:"10",bottom:"-20",containLabel:!0}],xAxis:[{show:!1,name:"万人",nameTextStyle:{align:"right",color:"#FFFFFF"},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:13,color:"#FFFFFF"},splitLine:{show:!1},axisTick:{show:!1}}],yAxis:[{triggerEvent:!0,inverse:!1,axisLine:{show:!1,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#96C2FF",interval:0,fontWeight:"normal",fontSize:13},data:this.echdata.yData,gridIndex:0}],series:[{name:"数量",type:"bar",barGap:"-100%",barCategoryGap:"100%",data:this.echdata.xData.map((t,e)=>{const a={color:e>3?n[3]:n[e]};return{value:t,itemStyle:a}}),barWidth:10,itemStyle:{barBorderRadius:30},z:91,label:{show:!0,distance:15,color:"#fff",fontSize:"14",fontWeight:600,position:"right"}},{name:"进度条背景",type:"bar",barGap:"-100%",barCategoryGap:"200%",data:this.echdata.xData.map((function(n){return t})),barWidth:10,tooltip:{show:!1},itemStyle:{normal:{barBorderRadius:30,color:"#1c1d47",barBorderColor:"#204b86",barBorderWidth:1,label:{show:!1,textStyle:{color:"rgba(255,255,255,1)"},position:"right",formatter:function(n){return this.echdata.xData[n.dataIndex]}}}},z:90}]};let r=o["init"](document.getElementById(this.eleId));r.setOption(i,!0),window.addEventListener("resize",()=>{r.resize()})},onHanleClick(){var n=this.$echarts.init(document.getElementById(this.eleId));n.getZr().on("click",t=>{console.log("点击饿了",t);const e=[t.offsetX,t.offsetY];if(n.containPixel("grid",e)){const e=n.convertFromPixel({seriesIndex:0},[t.offsetX,t.offsetY])[0];console.log(e)}})}}},l=s,c=(e("d858"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"599ff382",null);t["default"]=d.exports},cad2:function(n,t,e){},cce2:function(n,t,e){},d0a0:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[251,282,393,454],yData2:[221,252,373,424],yData3:[231,282,333,434],yData4:[241,352,343,444]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){var n={legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:13},axisPointer:{type:"shadow"}},grid:[{left:"0",right:"0",bottom:"0",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:13,interval:0},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}},{type:"value",name:"",show:!1,axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}}],series:[{name:this.seriesname[0],type:"line",yAxisIndex:1,showAllSymbol:!0,symbol:"circle",symbolSize:8,color:"#10D6FE",lineStyle:{width:1,type:"dashed"},tooltip:{valueFormatter:function(n){return n+"%"}},data:this.echdata.yData},{name:this.seriesname[1],type:"line",yAxisIndex:1,showAllSymbol:!0,symbol:"circle",symbolSize:8,color:"#E7E626",lineStyle:{width:1,type:"dashed"},tooltip:{valueFormatter:function(n){return n+"%"}},data:this.echdata.yData2},{name:this.seriesname[2],type:"bar",stack:"Ad",color:"#126DA6",barWidth:15,tooltip:{valueFormatter:function(n){return n+"万人"}},data:this.echdata.yData3},{name:this.seriesname[3],type:"bar",stack:"Ad",color:"#0ED793",barWidth:15,tooltip:{valueFormatter:function(n){return n+"万人"}},data:this.echdata.yData4}]};return n}}},c=l,d=(e("152f"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"26857e25",null);t["default"]=h.exports},d1b6:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [400, 400, 300, 500, 300, 400, 400, 400, 300],\n    yData2: [400, 450, 700, 500, 1000, 400, 400, 600, 700],\n    yData3: [400, 500, 500, 500, 500, 400, 400, 500, 500],\n    yData4: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        const seriesArrData = [\n          {\n            name: this.seriesname[0],\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                // barBorderRadius: [12, 12, 0, 0],// 柱状图圆角\n                label: {\n                  show: true,\n                  position: 'right',\n                  textStyle: {\n                    fontSize: 12,\n                    fontWeight: 400,\n                    color: '#9C9AFF' // 字体颜色\n                  }\n                }\n              }\n            },\n            data: this.echdata.yData\n          },\n          {\n            name: this.seriesname[1],\n            type: 'line',\n            barWidth: '15%',\n            // smooth: true, // 是否平滑\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                // barBorderRadius: [12, 12, 0, 0],// 折线图圆角\n                label: {\n                  show: true,\n                  position: 'top',\n                  textStyle: {\n                    fontSize: 12,\n                    fontWeight: 400,\n                    color: '#FFCA71' // 字体颜色\n                  }\n                }\n              }\n            },\n            data: this.echdata.yData2\n          }\n        ];\n        const options = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            // icon: 'circle',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5,\n            data: [\n              // 针对每个系列设置 legend 样式\n              {\n                name: this.seriesname[0],\n                icon: 'circle'\n              },\n              {\n                name: this.seriesname[1],\n                icon: 'roundRect'\n              }\n            ]\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},d3fd:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,330,400],yData2:[110,220,300,440]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();var t=this.$echarts.init(document.getElementById(this.eleId));t.setOption(n,!0),window.addEventListener("resize",()=>{t.resize()})},getOptions(){var n={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},icon:"roundRect",itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:14},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"3%",bottom:"0",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"#96C2FF",fontSize:12,interval:0},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"#96C2FF",fontSize:12,fontWeight:100},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)",fontSize:12}},splitLine:{show:!1}}],series:[{name:this.seriesname[0],data:this.echdata.yData,type:"bar",barMaxWidth:"auto",barWidth:"15%",itemStyle:{normal:{color:{x:0,y:0,x2:0,y2:1,type:"linear",global:!1,colorStops:[{offset:0,color:"#11f1ea"},{offset:1,color:"#11f1ea"}]},label:{show:!0,position:"top",offset:[0,-20],textStyle:{fontSize:12,fontWeight:400,color:"#D1DBFF"}}}}},{name:this.seriesname[1],data:this.echdata.yData2,type:"bar",barMaxWidth:"auto",barWidth:"15%",itemStyle:{normal:{color:{x:0,y:0,x2:0,y2:1,type:"linear",global:!1,colorStops:[{offset:0,color:"#bdae20"},{offset:1,color:"#bdae20"}]},label:{show:!0,position:"right",textStyle:{fontSize:12,fontWeight:400,color:"#D1DBFF"}}}}}]};return n}}},c=l,d=(e("7bbf"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"c6c2322e",null);t["default"]=h.exports},d497:function(n,t,e){"use strict";e.r(t),t["default"]='<template>\n  <div class="" style="color:#fff">\n    echart图\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {};\n    }\n  };\n<\/script>\n\n<style lang="scss" scoped></style>\n'},d858:function(n,t,e){"use strict";e("332b")},d867:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        var min = 50;\n        const options = {\n          backgroundColor: '#111c4e',\n          color: ['#3398DB'],\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'line',\n              lineStyle: {\n                opacity: 0\n              }\n            }\n            // formatter: function(prams) {\n            //   if (prams[0].data === min) {\n            //     return '合格率：0%';\n            //   } else {\n            //     return '合格率：' + prams[0].data + '%';\n            //   }\n            // }\n          },\n          legend: {\n            data: ['直接访问', '背景'],\n            show: false\n          },\n          grid: {\n            left: '0%',\n            right: '0%',\n            bottom: '0%',\n            top: '7%',\n            // height: '85%',\n            containLabel: true,\n            z: 22\n          },\n          xAxis: [\n            {\n              type: 'category',\n              gridIndex: 0,\n              data: this.echdata.xData,\n              axisTick: {\n                alignWithLabel: true\n              },\n              axisLine: {\n                lineStyle: {\n                  color: '#0c3b71'\n                }\n              },\n              axisLabel: {\n                show: true,\n                color: 'rgb(170,170,170)',\n                fontSize: 12\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value',\n              gridIndex: 0,\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              // min: min,\n              // max: 100,\n              axisLine: {\n                lineStyle: {\n                  color: '#0c3b71'\n                }\n              },\n              axisLabel: {\n                color: 'rgb(170,170,170)',\n                formatter: '{value} 人'\n              }\n            },\n            {\n              type: 'value',\n              gridIndex: 0,\n              min: min,\n              max: 100,\n              splitNumber: 12,\n              splitLine: {\n                show: false\n              },\n              axisLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                show: false\n              },\n              splitArea: {\n                show: true,\n                areaStyle: {\n                  color: ['rgba(250,250,250,0.0)', 'rgba(250,250,250,0.05)']\n                }\n              }\n            }\n          ],\n          series: [\n            {\n              name: '合格率',\n              type: 'bar',\n              barWidth: '10',\n              xAxisIndex: 0,\n              yAxisIndex: 0,\n              itemStyle: {\n                normal: {\n                  barBorderRadius: 30,\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: '#00feff'\n                    },\n                    {\n                      offset: 0.5,\n                      color: '#027eff'\n                    },\n                    {\n                      offset: 1,\n                      color: '#0286ff'\n                    }\n                  ])\n                }\n              },\n              data: this.echdata.yData,\n              zlevel: 11\n            },\n            {\n              name: '背景',\n              type: 'bar',\n              barWidth: '20',\n              xAxisIndex: 0,\n              yAxisIndex: 1,\n              // barGap: '-135%',\n              barGap: '-1.5px',\n              data: [100, 100, 100, 100, 100, 100, 100],\n              itemStyle: {\n                normal: {\n                  color: 'rgba(255,255,255,0.1)'\n                }\n              },\n              zlevel: 9\n            }\n          ]\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},dc23:function(n,t,e){},e01f:function(n,t,e){"use strict";e("567a")},e200:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [251, 282, 393, 454],\n    yData2: [221, 252, 373, 424],\n    yData3: [231, 282, 333, 434],\n    yData4: [241, 352, 343, 444]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        var options = {\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 13\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '0',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              color: 'rgba(255, 255, 255, .7)',\n              fontSize: 13,\n              interval: 0\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              max: 500,\n              min: 0,\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 14\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: this.seriesname[0],\n              type: 'line',\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 10,\n              color: '#10D6FE',\n              showBackground: true,\n              backgroundStyle: {\n                color: 'rgba(22,208,144,0.15)'\n              },\n              itemStyle: {\n                color: '#10D6FE',\n                shadowColor: '#10D6FE',\n                shadowBlur: 10\n              },\n              lineStyle: {\n                width: 1\n                // type: 'dashed'\n              },\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '%';\n                }\n              },\n              label: {\n                show: true,\n                fontSize: 16,\n                color: '#fff',\n                position: 'top'\n              },\n              data: this.echdata.yData\n            },\n            {\n              name: this.seriesname[1],\n              type: 'bar',\n              show: false,\n              barWidth: 15,\n              showBackground: true,\n              backgroundStyle: {\n                color: '#061E4A' // 做这个设置柱子的背景色无效？？？\n              },\n              itemStyle: {\n                // color: 'lightblue' // 设置柱子的背景色\n                color: '#367af1' // 设置柱子的背景色\n              },\n              tooltip: {\n                show: false\n              },\n              data: this.echdata.yData2\n            }\n          ]\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},e5cf:function(n,t,e){},e80e:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticStyle:{color:"#fff"}},[n._v(" echart图 ")])},i=[],o={data(){return{}}},r=o,s=e("2877"),l=Object(s["a"])(r,a,i,!1,null,"ec17c5b6",null);t["default"]=l.exports},e812:function(n,t,e){},e831:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2021年', '2022年', '2023年'],\n    yData: [251, 282, 393, 454],\n    yData2: [221, 252, 373, 424],\n    yData3: [231, 282, 333, 434],\n    yData4: [241, 352, 343, 444]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        var options = {\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            // icon: 'roundRect',\n            selectedMode: false, // 是否允许点击\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 13\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '-10%',\n              bottom: '00',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              color: 'rgba(255, 255, 255, .7)',\n              fontSize: 13,\n              interval: 0\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 13\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            },\n            {\n              type: 'value',\n              name: '',\n              show: false,\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 14\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: this.seriesname[0],\n              type: 'line',\n              yAxisIndex: 1,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 8,\n              color: '#E7E626',\n              lineStyle: {\n                width: 1,\n                type: 'dashed'\n              },\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '%';\n                }\n              },\n              areaStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    { offset: 0, color: 'rgba(254, 204, 62, .2)' },\n                    { offset: 1, color: 'rgba(254, 204, 62, 0)' }\n                  ],\n                  globalCoord: false\n                }\n              },\n              data: this.echdata.yData\n            },\n            {\n              name: this.seriesname[1],\n              type: 'bar',\n              color: '#126DA6',\n              barWidth: 15,\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#1984B0', '#51CAFF']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              },\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '万人';\n                }\n              },\n              data: this.echdata.yData2\n            },\n            {\n              z: 2,\n              type: 'pictorialBar',\n              tooltip: {\n                show: false\n              },\n              data: this.echdata.yData2,\n              symbol: 'diamond',\n              symbolOffset: ['-9', '50%'],\n              symbolSize: [15, 8],\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#1984B0', '#51CAFF']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              }\n            },\n            {\n              z: 3,\n              type: 'pictorialBar',\n              tooltip: {\n                show: false\n              },\n              symbolPosition: 'end',\n              data: this.echdata.yData2,\n              symbol: 'diamond',\n              symbolOffset: ['-9', '-50%'],\n              symbolSize: [15, 8],\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#1984B0', '#51CAFF']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][0] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              }\n            },\n            {\n              name: this.seriesname[2],\n              type: 'bar',\n              color: '#0ED793',\n              barWidth: 15,\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#00CC8F', '#2FF2B8']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              },\n              tooltip: {\n                valueFormatter: function(value) {\n                  return value + '万人';\n                }\n              },\n              data: this.echdata.yData3\n            },\n            {\n              z: 2,\n              type: 'pictorialBar',\n              tooltip: {\n                show: false\n              },\n              data: this.echdata.yData3,\n              symbol: 'diamond',\n              symbolOffset: ['9', '50%'],\n              symbolSize: [15, 8],\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#00CC8F', '#2FF2B8']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][1] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              }\n            },\n            {\n              z: 3,\n              type: 'pictorialBar',\n              tooltip: {\n                show: false\n              },\n              symbolPosition: 'end',\n              data: this.echdata.yData3,\n              symbol: 'diamond',\n              symbolOffset: ['9', '-50%'],\n              symbolSize: [15, 8],\n              itemStyle: {\n                color: params => {\n                  var colorList = [['#00CC8F', '#2FF2B8']];\n                  // var index = params.dataIndex\n                  // if (params.dataIndex >= colorList.length) {\n                  //   index = params.dataIndex - colorList.length\n                  // }\n                  return {\n                    type: 'linear',\n                    x: 0,\n                    x2: 1,\n                    y: 0,\n                    y2: 0,\n                    colorStops: [\n                      { offset: 0, color: colorList[0][0] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 0.5, color: colorList[0][0] },\n                      { offset: 1, color: colorList[0][0] }\n                    ]\n                  };\n                }\n              }\n            }\n          ]\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},ebd2:function(n,t,e){"use strict";e("cce2")},ec06:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 330, 400],\n    yData2: [110, 220, 300, 440]\n  };\n  const defaultSeriesName = ['手机', 'iPad', '电脑', '相机'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        var options = {\n          title: {\n            text: this.titleText,\n            // subtext: '2023年6月8日',\n            // left: 'center',\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 14\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '0',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              // color: 'red',\n              color: '#96C2FF',\n              fontSize: 12,\n              interval: 0\n              //   rotate: 20\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                // color: 'red',\n                color: '#96C2FF',\n                fontSize: 12,\n                fontWeight: 100\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)',\n                  fontSize: 12\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              // 柱体1\n              name: this.seriesname[0],\n              data: this.echdata.yData,\n              type: 'bar',\n              barMaxWidth: 'auto',\n              barWidth: '15%', // auto\n              itemStyle: {\n                normal: {\n                  color: {\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    type: 'linear',\n                    global: false,\n                    colorStops: [\n                      {\n                        offset: 0,\n                        color: '#11f1ea'\n                      },\n                      {\n                        offset: 1,\n                        color: '#11f1ea'\n                      }\n                    ]\n                  },\n                  label: {\n                    show: true,\n                    position: 'top',\n                    offset: [0, -20], // 柱子上方偏移\n                    textStyle: {\n                      fontSize: 12,\n                      fontWeight: 400,\n                      color: '#D1DBFF' // 字体颜色\n                    }\n                  }\n                }\n              }\n            },\n            {\n              // 柱体2\n              name: this.seriesname[1],\n              data: this.echdata.yData2,\n              type: 'bar',\n              barMaxWidth: 'auto',\n              barWidth: '15%', // auto\n              itemStyle: {\n                normal: {\n                  color: {\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    type: 'linear',\n                    global: false,\n                    colorStops: [\n                      {\n                        offset: 0,\n                        color: '#bdae20'\n                      },\n                      {\n                        offset: 1,\n                        color: '#bdae20'\n                      }\n                    ]\n                  },\n                  label: {\n                    show: true,\n                    position: 'right',\n                    textStyle: {\n                      fontSize: 12,\n                      fontWeight: 400,\n                      color: '#D1DBFF' // 字体颜色\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        };\n        return options;\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},ed94:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,330,400],yData2:[110,220,300,440]},s=["手机","iPad","电脑","相机"];var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();var t=this.$echarts.init(document.getElementById(this.eleId));t.setOption(n,!0),window.addEventListener("resize",()=>{t.resize()})},getOptions(){var n={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},icon:"roundRect",itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:14},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"3%",bottom:"0",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"#96C2FF",fontSize:12,interval:0},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"#96C2FF",fontSize:12,fontWeight:100},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)",fontSize:12}},splitLine:{show:!1}}],series:[{name:this.seriesname[0],data:this.echdata.yData,type:"bar",barMaxWidth:"auto",barWidth:"10%",itemStyle:{normal:{color:{x:0,y:0,x2:0,y2:1,type:"linear",global:!1,colorStops:[{offset:0,color:"#11f1ea"},{offset:1,color:"#11f1ea"}]}}}},{name:this.seriesname[1],data:this.echdata.yData2,type:"bar",barMaxWidth:"auto",barWidth:"10%",itemStyle:{normal:{color:{x:0,y:0,x2:0,y2:1,type:"linear",global:!1,colorStops:[{offset:0,color:"#bdae20"},{offset:1,color:"#bdae20"}]}}}},{name:this.seriesname[2],data:this.echdata.yData2,type:"bar",barMaxWidth:"auto",barWidth:"15%",itemStyle:{normal:{color:{x:0,y:0,x2:0,y2:1,type:"linear",global:!1,colorStops:[{offset:0,color:"#1c54a7"},{offset:1,color:"#1c54a7"}]}}}}]};return n}}},c=l,d=(e("5d1d"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"092c86fd",null);t["default"]=h.exports},f3de:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticStyle:{color:"#fff"}},[n._v(" echart图 ")])},i=[],o={data(){return{}}},r=o,s=e("2877"),l=Object(s["a"])(r,a,i,!1,null,"1fefdfbc",null);t["default"]=l.exports},f5ca:function(n,t,e){"use strict";e("bd97")},f670:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let t=o["init"](document.getElementById(this.eleId));t.setOption(n),window.addEventListener("resize",()=>{t.resize()})},getOptions(){const n={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:[{name:"数量",data:this.echdata.yData,type:"bar",barMaxWidth:"auto",barWidth:"10",showBackground:!0,backgroundStyle:{color:"rgba(20, 88, 168, 0.2)"},itemStyle:{normal:{color:n=>{var t=[["#2D98DF","#0B244C"]];return new this.$echarts.graphic.LinearGradient(0,0,0,1,[{offset:0,color:t[0][0]},{offset:.5,color:t[0][0]},{offset:1,color:t[0][1]}])},label:{show:!0,position:"top",textStyle:{fontSize:14,fontWeight:600,color:"#D1DBFF"}}},barBorderRadius:30},zlevel:2}]};return n}}},l=s,c=(e("a074"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"1d1478d3",null);t["default"]=d.exports},f797:function(n,t,e){},fc03:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){var n=[new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#EF624A"},{offset:1,color:"#FF9482"}]),new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#1277CC"},{offset:1,color:"#00E7FD"}])],t={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600},x:"left"},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{left:"10",right:"10",bottom:"0",top:"35",containLabel:!0}],xAxis:[{axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#fff",interval:0,fontWeight:"normal",fontSize:12},data:this.echdata.xData,gridIndex:0}],yAxis:[{show:!0,axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:12,color:"#fff"},splitLine:{show:!1},axisTick:{show:!1}}],label:{show:!0,position:"top",color:"#fff",fontSize:13,fontWeight:600},series:[{type:"bar",data:this.echdata.yData.map((t,e)=>{const a={color:e%2===1?n[0]:n[1]};return{value:t,itemStyle:a}}),barWidth:15}]};let e=o["init"](document.getElementById(this.eleId));e.setOption(t),window.addEventListener("resize",()=>{e.resize()})}}},l=s,c=(e("33ab"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"08759bc4",null);t["default"]=d.exports},fcaf:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '备注：Y轴数据倒置',\n    name: '',\n    props: {\n      echdata: {\n        type: Object,\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `echartsLine${Number(\n          Math.random()\n            .toString()\n            .substr(3, 3) + Date.now()\n        ).toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.initEchart();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const colorList = [\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ])\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -4,\n            textStyle: {\n              // color: '#2992ff',\n              color: '#fff', // 备用字体色 '#2B9DF2'\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n            // formatter: function(params) {\n            //   return params[0].name + '<br>' + params[0].value;\n            // }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              top: '20',\n              left: '10',\n              right: '20',\n              bottom: '-20',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false,\n              name: '人',\n              nameTextStyle: {\n                align: 'right',\n                color: '#FFFFFF'\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 16,\n                color: '#FFFFFF'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              inverse: true, // 设置 Y 轴数据反向展示\n              triggerEvent: true,\n              nameTextStyle: {\n                fontSize: 14,\n                color: '#FDFEFF',\n                padding: [0, 0, -10, -100]\n              },\n              axisLine: {\n                show: false,\n                lineStyle: {\n                  color: '#fff',\n                  align: 'left'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#96C2FF',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30,\n                normal: {\n                  label: {\n                    position: 'right', // 在上方显示\n                    show: true, // 开启显示\n                    textStyle: {\n                      color: '#FDFEFF',\n                      fontWeight: 600,\n                      fontSize: 13\n                    }\n                  }\n                }\n              },\n              z: 91\n            }\n          ]\n        };\n\n        echartEle.setOption(option, true);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},fcc8:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        var colorList = [\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#EF624A' },\n            { offset: 1, color: '#FF9482' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#1277CC' },\n            { offset: 1, color: '#00E7FD' }\n          ])\n        ];\n        var option = {\n          title: {\n            text: this.titleText,\n            textStyle: {\n              color: '#fff', // 字体颜色\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            },\n            x: 'left'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              left: '10',\n              right: '10',\n              bottom: '0',\n              top: '35',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              // name: '年龄',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 12\n              },\n              data: this.echdata.xData,\n              gridIndex: 0\n            }\n          ],\n          yAxis: [\n            {\n              show: true,\n              //   name: '万人',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 12,\n                color: '#fff'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          label: {\n            show: true,\n            position: 'top',\n            color: '#fff',\n            fontSize: 13,\n            fontWeight: 600\n          },\n          series: [\n            {\n              // name: '柱状图',\n              type: 'bar',\n              data: this.echdata.yData.map((item, i) => {\n                const itemStyle = {\n                  color: i % 2 === 1 ? colorList[0] : colorList[1]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 15\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"}}]);