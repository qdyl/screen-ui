{"version":3,"sources":["webpack:///./src/views/EchartUnit/Bar/components/BarA2.vue?0570","webpack:///./src/views/EchartUnit/Bar/components/BarA1.vue?dd62","webpack:///./src/views/EchartUnit/Bar/components/BarA3.vue?aa19","webpack:///./src/views/EchartUnit/Bar/components/BarA4.vue?0c6a","webpack:///./src/views/EchartUnit/Bar/components/BarB3.vue?0d59","webpack:///./src/views/EchartUnit/Bar/components/BarC1.vue","webpack:///src/views/EchartUnit/Bar/components/BarC1.vue","webpack:///./src/views/EchartUnit/Bar/components/BarC1.vue?c38d","webpack:///./src/views/EchartUnit/Bar/components/BarC1.vue?8844","webpack:///./src/views/EchartUnit/Bar/components sync \\.vue$","webpack:///./src/views/EchartUnit/Bar/components/BarB2.vue","webpack:///src/views/EchartUnit/Bar/components/BarB2.vue","webpack:///./src/views/EchartUnit/Bar/components/BarB2.vue?ee52","webpack:///./src/views/EchartUnit/Bar/components/BarB2.vue?4f65","webpack:///./src/views/EchartUnit/Bar/components/BarC2.vue?20b0","webpack:///./src/views/EchartUnit/Bar/components/BarA5.vue?24c1","webpack:///./src/views/EchartUnit/Bar/components/BarC2.vue?7548","webpack:///./src/views/EchartUnit/Bar/components/BarB4.vue","webpack:///src/views/EchartUnit/Bar/components/BarB4.vue","webpack:///./src/views/EchartUnit/Bar/components/BarB4.vue?6148","webpack:///./src/views/EchartUnit/Bar/components/BarB4.vue?792d","webpack:///./src/views/EchartUnit/Bar/components/BarB1.vue","webpack:///src/views/EchartUnit/Bar/components/BarB1.vue","webpack:///./src/views/EchartUnit/Bar/components/BarB1.vue?51fc","webpack:///./src/views/EchartUnit/Bar/components/BarB1.vue?27eb","webpack:///./src/views/EchartUnit/Bar/components/BarB2.vue?6ea2","webpack:///./src/views/EchartUnit/Bar/components/BarA6.vue?921d","webpack:///./src/views/EchartUnit/Bar/components/BarA7.vue","webpack:///src/views/EchartUnit/Bar/components/BarA7.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA7.vue?f7f3","webpack:///./src/views/EchartUnit/Bar/components/BarA7.vue?5818","webpack:///./src/views/EchartUnit/Bar/components/BarA5.vue","webpack:///src/views/EchartUnit/Bar/components/BarA5.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA5.vue?3a29","webpack:///./src/views/EchartUnit/Bar/components/BarA5.vue?9067","webpack:///./src/views/EchartUnit/Bar/components/BarA5.vue?1b3b","webpack:///./src/views/EchartUnit/Bar/components/BarA8.vue?4140","webpack:///./src/views/EchartUnit/Bar/components/BarA2.vue?acce","webpack:///./node_modules/raw-loader/dist/cjs.js ^\\.\\/.*$?ecfa","webpack:///./src/views/EchartUnit/Bar/components/BarB1.vue?5075","webpack:///./src/views/EchartUnit/Bar/components/BarA4.vue","webpack:///src/views/EchartUnit/Bar/components/BarA4.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA4.vue?8584","webpack:///./src/views/EchartUnit/Bar/components/BarA4.vue?fe4e","webpack:///./src/views/EchartUnit/Bar/components/BarA3.vue?7456","webpack:///./src/views/EchartUnit/Bar/components/BarC2.vue","webpack:///src/views/EchartUnit/Bar/components/BarC2.vue","webpack:///./src/views/EchartUnit/Bar/components/BarC2.vue?ee4c","webpack:///./src/views/EchartUnit/Bar/components/BarC2.vue?4262","webpack:///./src/views/EchartUnit/Bar/components/BarA1.vue?753c","webpack:///./src/views/EchartUnit/Bar/components/BarB4.vue?789d","webpack:///./src/views/EchartUnit/Bar/index.vue","webpack:///src/views/EchartUnit/Bar/index.vue","webpack:///./src/views/EchartUnit/Bar/index.vue?854a","webpack:///./src/views/EchartUnit/Bar/index.vue?65a1","webpack:///./src/views/EchartUnit/Bar/components/BarB4.vue?9d51","webpack:///./src/views/EchartUnit/Bar/index.vue?0f56","webpack:///./src/views/EchartUnit/Bar/components/BarA3.vue","webpack:///src/views/EchartUnit/Bar/components/BarA3.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA3.vue?e5ad","webpack:///./src/views/EchartUnit/Bar/components/BarA3.vue?ab35","webpack:///./src/views/EchartUnit/Bar/components/BarA2.vue","webpack:///src/views/EchartUnit/Bar/components/BarA2.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA2.vue?a78a","webpack:///./src/views/EchartUnit/Bar/components/BarA2.vue?38e1","webpack:///./src/views/EchartUnit/Bar/components/BarC1.vue?c0ca","webpack:///./src/views/EchartUnit/Bar/components/BarB1.vue?da60","webpack:///./src/views/EchartUnit/Bar/components/BarB3.vue","webpack:///src/views/EchartUnit/Bar/components/BarB3.vue","webpack:///./src/views/EchartUnit/Bar/components/BarB3.vue?21ca","webpack:///./src/views/EchartUnit/Bar/components/BarB3.vue?07ab","webpack:///./src/views/EchartUnit/Bar/components/BarA4.vue?c68e","webpack:///./src/views/EchartUnit/Bar/components/BarB3.vue?1506","webpack:///./src/views/EchartUnit/Bar/components/BarA7.vue?d867","webpack:///./src/views/EchartUnit/Bar/components/BarC1.vue?c541","webpack:///./src/views/EchartUnit/Bar/components/BarA8.vue","webpack:///src/views/EchartUnit/Bar/components/BarA8.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA8.vue?2876","webpack:///./src/views/EchartUnit/Bar/components/BarA8.vue?ba6f","webpack:///./src/views/EchartUnit/Bar/components/BarA1.vue","webpack:///src/views/EchartUnit/Bar/components/BarA1.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA1.vue?a4be","webpack:///./src/views/EchartUnit/Bar/components/BarA1.vue?49f6","webpack:///./src/views/EchartUnit/Bar/components/BarA6.vue","webpack:///src/views/EchartUnit/Bar/components/BarA6.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA6.vue?dd6c","webpack:///./src/views/EchartUnit/Bar/components/BarA6.vue?f4be","webpack:///./src/views/EchartUnit/Bar/components/BarB2.vue?fcaf","webpack:///./src/views/EchartUnit/Bar/components/BarA6.vue?fcc8"],"names":["render","_vm","this","_c","_self","staticClass","attrs","eleId","_v","staticRenderFns","defaultEchdata","xData","yData","yData2","yData3","props","echdata","type","Object","Array","default","titleText","String","data","Math","random","toString","substring","Date","now","chart","mounted","$echarts","echarts","$nextTick","initEchart","methods","seriesArrData","name","barWidth","itemStyle","normal","color","barBorderRadius","smooth","option","title","text","top","textStyle","fontSize","fontWeight","tooltip","trigger","axisPointer","grid","right","left","bottom","containLabel","xAxis","axisLine","show","lineStyle","axisLabel","axisTick","yAxis","splitLine","series","echartEle","document","getElementById","setOption","window","addEventListener","resize","component","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports","infoTip","Number","substr","watch","handler","deep","created","colorList","graphic","LinearGradient","offset","legend","nameTextStyle","align","inverse","triggerEvent","padding","interval","gridIndex","barGap","item","i","value","label","position","z","drainitEchartm","onHanleClick","barMax","max","x","formatter","index","length","slice","d","barBorderColor","barBorderWidth","p","dataIndex","init","getZr","on","params","console","log","pointInPixel","offsetX","offsetY","containPixel","xIndex","convertFromPixel","seriesIndex","staticStyle","totalSum","icon","itemWidth","itemHeight","itemGap","backgroundColor","borderColor","rotate","showAllSymbol","symbol","symbolSize","width","percent","toFixed","areaStyle","y","x2","y2","colorStops","globalCoord","directives","rawName","echDefDataA","expression","arg","clipboardSuccess","_l","dynamicComponents_A","key","tag","_s","getInfoTip","vueFiles","$event","onHandleItem","onPreview","echDefDataB","dynamicComponents_B","dynamicComponents_C","isShowFullCode","codecontent","_e","isShowFullPreview","previewEchart","slot","dynamicComponents_All","batchInit","files","require","forEach","fileName","componentConfig","componentName","replace","Vue","_fileName","fileContent","fileKey","push","dynamicComponents_D","dynamicComponents","filter","val","includes","pop","str","vueFileStr","nameRegex","nameMatch","match","nameValue","barMaxWidth","showBackground","backgroundStyle","join","rich","a","zlevel","seriesBgData","barCategoryGap","distance"],"mappings":"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","file":"assets/js/chunk-acf89b7c.38e04857.js","sourcesContent":["export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\n    yData: [101, 202, 303, 404]\\n  };\\n\\n  export default {\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '标题'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`,\\n        chart: null\\n      };\\n    },\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(() => {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        var option = {\\n          title: {\\n            text: this.titleText,\\n            top: -4,\\n            textStyle: {\\n              color: '#2B9DF2',\\n              fontSize: 14 // 字体大小\\n              // fontWeight:  // 字体粗细\\n            }\\n          },\\n          legend: {\\n            // 图例组件，颜色和名字\\n            top: 0,\\n            right: 0,\\n            textStyle: {\\n              color: 'rgba(255, 255, 255, .5)',\\n              fontSize: 14\\n            },\\n            icon: 'roundRect',\\n            itemWidth: 16,\\n            itemHeight: 10,\\n            itemGap: 5\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            backgroundColor: 'rgba(0, 0, 0, .8)',\\n            borderColor: 'rgba(0, 0, 0, .8)',\\n            textStyle: {\\n              color: '#fff',\\n              fontSize: 14\\n            },\\n            axisPointer: {\\n              // 坐标轴指示器，坐标轴触发有效\\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\\n            }\\n          },\\n          grid: [\\n            {\\n              left: '3%',\\n              right: '3%',\\n              bottom: '-5',\\n              top: '20%',\\n              containLabel: true\\n            }\\n          ],\\n          xAxis: {\\n            type: 'category',\\n            axisLabel: {\\n              // color: 'red',\\n              color: '#96C2FF',\\n              fontSize: 10,\\n              interval: 0,\\n              rotate: 20\\n            },\\n            axisLine: {\\n              lineStyle: {\\n                color: 'rgba(209, 209, 209, .3)'\\n              }\\n            },\\n            data: this.echdata.xData\\n          },\\n          yAxis: [\\n            {\\n              type: 'value',\\n              name: '',\\n              axisLabel: {\\n                // color: 'red',\\n                color: '#96C2FF',\\n                fontSize: 12,\\n                fontWeight: 100\\n              },\\n              axisLine: {\\n                show: true,\\n                lineStyle: {\\n                  color: 'rgba(209, 209, 209, .3)',\\n                  fontSize: 12\\n                }\\n              },\\n              splitLine: {\\n                show: false\\n              }\\n            }\\n          ],\\n          series: [\\n            {\\n              name: '数量',\\n              type: 'bar',\\n              smooth: true,\\n              barWidth: 6,\\n              // showAllSymbol: true,\\n              // symbol: 'circle',\\n              // symbolSize: 6,\\n              color: '#10D6FE',\\n              lineStyle: {\\n                width: 1,\\n                type: 'dashed'\\n              },\\n              label: {\\n                show: true,\\n                color: '#fff',\\n                fontSize: '12',\\n                fontWeight: 600,\\n                position: 'top',\\n                formatter: function(params) {\\n                  return params.value + '人';\\n                }\\n              },\\n              areaStyle: {\\n                color: {\\n                  type: 'linear',\\n                  x: 0,\\n                  y: 0,\\n                  x2: 0,\\n                  y2: 1,\\n                  colorStops: [\\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\\n                  ],\\n                  globalCoord: false\\n                }\\n              },\\n              data: this.echdata.yData\\n            }\\n          ]\\n        };\\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option, true);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA1.vue?vue&type=style&index=0&id=76cbb846&prod&lang=scss&scoped=true\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA3.vue?vue&type=style&index=0&id=4bd8d17e&prod&lang=scss&scoped=true\"","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\n    yData: [101, 202, 303, 404]\\n  };\\n\\n  export default {\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '标题'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`,\\n        chart: null\\n      };\\n    },\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(() => {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        let totalSum = 0; // 总数\\n        for (var i = 0; i < this.echdata.yData.length; i++) {\\n          totalSum += this.echdata.yData[i];\\n        }\\n        var option = {\\n          title: {\\n            text: this.titleText,\\n            top: -4,\\n            textStyle: {\\n              color: '#2B9DF2',\\n              fontSize: 14 // 字体大小\\n              // fontWeight:  // 字体粗细\\n            }\\n          },\\n          legend: {\\n            // 图例组件，颜色和名字\\n            top: 0,\\n            right: 0,\\n            textStyle: {\\n              color: 'rgba(255, 255, 255, .5)',\\n              fontSize: 14\\n            },\\n            icon: 'roundRect',\\n            itemWidth: 16,\\n            itemHeight: 10,\\n            itemGap: 5\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            backgroundColor: 'rgba(0, 0, 0, .8)',\\n            borderColor: 'rgba(0, 0, 0, .8)',\\n            textStyle: {\\n              color: '#fff',\\n              fontSize: 14\\n            },\\n            axisPointer: {\\n              // 坐标轴指示器，坐标轴触发有效\\n              type: 'line' // 默认为直线，可选为：'line' | 'shadow'\\n            }\\n            // formatter: function(params) {\\n            //   console.log('鼠标', params);\\n            //   var value = params.value;\\n            //   // var total = params.data.total;\\n            //   var percent = ((value / totalSum) * 100).toFixed(2); // 计算百分比\\n            //   return params.name + ': ' + value + ' (' + percent + '%)'; // 格式化 tooltip 内容\\n            // }\\n            // formatter: '{c}%' // 显示比例（这是关键）\\n            // formatter: `{b}: {c} ({c/${totalSum} * 100}%)`\\n          },\\n          grid: [\\n            {\\n              left: '3%',\\n              right: '3%',\\n              bottom: '-5',\\n              top: '20%',\\n              containLabel: true\\n            }\\n          ],\\n          xAxis: {\\n            type: 'category',\\n            axisLabel: {\\n              // color: 'red',\\n              color: '#96C2FF',\\n              fontSize: 10,\\n              interval: 0,\\n              rotate: 20\\n            },\\n            axisLine: {\\n              lineStyle: {\\n                color: 'rgba(209, 209, 209, .3)'\\n              }\\n            },\\n            data: this.echdata.xData\\n          },\\n          yAxis: [\\n            {\\n              type: 'value',\\n              name: '',\\n              axisLabel: {\\n                // color: 'red',\\n                color: '#96C2FF',\\n                fontSize: 12,\\n                fontWeight: 100\\n              },\\n              axisLine: {\\n                show: true,\\n                lineStyle: {\\n                  color: 'rgba(209, 209, 209, .3)',\\n                  fontSize: 12\\n                }\\n              },\\n              splitLine: {\\n                show: false\\n              }\\n            }\\n          ],\\n          series: [\\n            {\\n              name: '数量',\\n              type: 'bar',\\n              smooth: true,\\n              barWidth: 6,\\n              showAllSymbol: true,\\n              symbol: 'circle',\\n              symbolSize: 6,\\n              color: '#10D6FE',\\n              lineStyle: {\\n                width: 1,\\n                type: 'dashed'\\n              },\\n              label: {\\n                show: true,\\n                color: '#fff',\\n                fontSize: '12',\\n                fontWeight: 600,\\n                position: 'top',\\n                // formatter: '{b}\\\\n{c}%', // 显示比例（这是关键）\\n                formatter: function(params) {\\n                  console.log('比例饿', params);\\n                  const percent = ((params.value / totalSum) * 100).toFixed(2) + '%';\\n                  return percent;\\n                }\\n              },\\n              areaStyle: {\\n                color: {\\n                  type: 'linear',\\n                  x: 0,\\n                  y: 0,\\n                  x2: 0,\\n                  y2: 1,\\n                  colorStops: [\\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\\n                  ],\\n                  globalCoord: false\\n                }\\n              },\\n              data: this.echdata.yData\\n            }\\n          ]\\n        };\\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option, true);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\" />\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: [5, 75, 115, 52.65, 25.75],\\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\\n  };\\n\\n  export default {\\n    infoTip: '',\\n    name: '',\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '年龄分布(单位：万人)'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`\\n      };\\n    },\\n    watch: {\\n      echdata: {\\n        handler: function() {\\n          this.drainitEchartm();\\n        },\\n        deep: true\\n      }\\n    },\\n    created() {},\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(function() {\\n        this.initEchart();\\n        this.onHanleClick();\\n      });\\n    },\\n    methods: {\\n      // echart 初始化\\n      initEchart() {\\n        var colorList = [\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ])\\n        ];\\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\\n        var seriesBgData = [];\\n        for (var i = 0; i < this.echdata.xData.length; i++) {\\n          seriesBgData.push(barMax);\\n        }\\n        var option = {\\n          title: {\\n            text: this.titleText,\\n            textStyle: {\\n              color: '#fff', // 备用字体色 '#2B9DF2'\\n              fontSize: 14, // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            },\\n            x: 'left'\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow'\\n            }\\n            // formatter: function(params) {\\n            //   // return params[0].name + '<br>' + params[0].value + ' 万人'\\n            //   return params[0].name + '<br>' + params[0].value;\\n            // }\\n          },\\n          legend: {\\n            show: false\\n          },\\n          grid: [\\n            {\\n              top: '20px',\\n              left: '10',\\n              right: '10',\\n              bottom: '-20',\\n              containLabel: true\\n            }\\n          ],\\n          xAxis: [\\n            {\\n              show: false,\\n              name: '万人',\\n              nameTextStyle: {\\n                align: 'right',\\n                color: '#FFFFFF'\\n              },\\n              axisLine: {\\n                show: true,\\n                lineStyle: {\\n                  color: 'rgba(209, 209, 209, .3)'\\n                }\\n              },\\n              axisLabel: {\\n                fontSize: 13,\\n                color: '#FFFFFF'\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              }\\n            }\\n          ],\\n          yAxis: [\\n            {\\n              // name: '年龄',\\n              triggerEvent: true,\\n              inverse: false,\\n              axisLine: {\\n                show: false,\\n                lineStyle: {\\n                  color: 'rgba(209, 209, 209, .3)'\\n                }\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              },\\n              axisLabel: {\\n                color: '#96C2FF',\\n                // color: '#fff',\\n                interval: 0,\\n                fontWeight: 'normal',\\n                fontSize: 13\\n              },\\n              data: this.echdata.yData,\\n              gridIndex: 0\\n            }\\n          ],\\n          series: [\\n            {\\n              name: '数量',\\n              type: 'bar',\\n              barGap: '-100%',\\n              barCategoryGap: '100%',\\n              data: this.echdata.xData.map((item, i) => {\\n                const itemStyle = {\\n                  color: i > 3 ? colorList[3] : colorList[i]\\n                };\\n                return {\\n                  value: item,\\n                  itemStyle: itemStyle\\n                };\\n              }),\\n              barWidth: 10,\\n              itemStyle: {\\n                barBorderRadius: 30\\n              },\\n              z: 91,\\n              label: {\\n                show: true,\\n                distance: 15,\\n                color: '#fff',\\n                fontSize: '14',\\n                fontWeight: 600,\\n                position: 'right'\\n              }\\n            },\\n            {\\n              name: '进度条背景',\\n              type: 'bar',\\n              barGap: '-100%',\\n              barCategoryGap: '200%',\\n              data: this.echdata.xData.map(function(d) {\\n                return barMax;\\n              }),\\n              barWidth: 10,\\n              tooltip: {\\n                show: false\\n              },\\n              itemStyle: {\\n                normal: {\\n                  barBorderRadius: 30,\\n                  color: '#1c1d47',\\n                  // color: '#204b86',\\n                  barBorderColor: '#204b86', // 边框色\\n                  barBorderWidth: 1, // 边框宽度\\n                  label: {\\n                    show: false,\\n                    textStyle: {\\n                      color: 'rgba(255,255,255,1)'\\n                    },\\n                    position: 'right',\\n                    formatter: function(p) {\\n                      return this.echdata.xData[p.dataIndex];\\n                    }\\n                  }\\n                }\\n              },\\n              z: 90\\n            }\\n          ]\\n        };\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option, true);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      },\\n      // 点击事件\\n      onHanleClick() {\\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\\n        echartEle.getZr().on('click', params => {\\n          console.log('点击饿了', params);\\n          const pointInPixel = [params.offsetX, params.offsetY];\\n          if (echartEle.containPixel('grid', pointInPixel)) {\\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\\n            console.log(xIndex);\\n          }\\n          // this.$router.push('/sy-chanyelian')\\n          //\\n          // var options = echartEle.getOption()\\n          // console.log('options配置', options)\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404],\n    yData2: [110, 220, 333, 444],\n    yData3: [131, 252, 363, 484]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        // var data1 = this.echdata.xData;\n        const seriesArrData = [\n          {\n            name: '用户总数',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\n          },\n          {\n            name: '其它',\n            type: 'line',\n            barWidth: '15%',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        //\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC1.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC1.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarC1.vue?vue&type=template&id=7d30ec4e&scoped=true\"\nimport script from \"./BarC1.vue?vue&type=script&lang=js\"\nexport * from \"./BarC1.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarC1.vue?vue&type=style&index=0&id=7d30ec4e&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7d30ec4e\",\n  null\n  \n)\n\nexport default component.exports","var map = {\n\t\"./BarA1.vue\": \"f670\",\n\t\"./BarA2.vue\": \"b463\",\n\t\"./BarA3.vue\": \"a042\",\n\t\"./BarA4.vue\": \"62d3\",\n\t\"./BarA5.vue\": \"3b47\",\n\t\"./BarA6.vue\": \"fc03\",\n\t\"./BarA7.vue\": \"3910\",\n\t\"./BarA8.vue\": \"f3de\",\n\t\"./BarB1.vue\": \"2949\",\n\t\"./BarB2.vue\": \"194e\",\n\t\"./BarB3.vue\": \"c953\",\n\t\"./BarB4.vue\": \"2936\",\n\t\"./BarC1.vue\": \"12a0\",\n\t\"./BarC2.vue\": \"7520\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"18d5\";","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '备注：Y轴数据倒置',\n    name: '',\n    props: {\n      echdata: {\n        type: Object,\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `echartsLine${Number(\n          Math.random()\n            .toString()\n            .substr(3, 3) + Date.now()\n        ).toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.initEchart();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const colorList = [\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ])\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -4,\n            textStyle: {\n              // color: '#2992ff',\n              color: '#fff', // 备用字体色 '#2B9DF2'\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n            // formatter: function(params) {\n            //   return params[0].name + '<br>' + params[0].value;\n            // }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              top: '20',\n              left: '10',\n              right: '20',\n              bottom: '-20',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false,\n              name: '人',\n              nameTextStyle: {\n                align: 'right',\n                color: '#FFFFFF'\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 16,\n                color: '#FFFFFF'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              inverse: true, // 设置 Y 轴数据反向展示\n              triggerEvent: true,\n              nameTextStyle: {\n                fontSize: 14,\n                color: '#FDFEFF',\n                padding: [0, 0, -10, -100]\n              },\n              axisLine: {\n                show: false,\n                lineStyle: {\n                  color: '#fff',\n                  align: 'left'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#96C2FF',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30,\n                normal: {\n                  label: {\n                    position: 'right', // 在上方显示\n                    show: true, // 开启显示\n                    textStyle: {\n                      color: '#FDFEFF',\n                      fontWeight: 600,\n                      fontSize: 13\n                    }\n                  }\n                }\n              },\n              z: 91\n            }\n          ]\n        };\n\n        echartEle.setOption(option, true);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB2.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB2.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarB2.vue?vue&type=template&id=39797ae2&scoped=true\"\nimport script from \"./BarB2.vue?vue&type=script&lang=js\"\nexport * from \"./BarB2.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarB2.vue?vue&type=style&index=0&id=39797ae2&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"39797ae2\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\n    yData: [101, 202, 303, 404],\\n    yData2: [110, 220, 333, 444],\\n    yData3: [131, 252, 363, 484]\\n  };\\n\\n  export default {\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '标题'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`,\\n        chart: null\\n      };\\n    },\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(() => {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        // var data1 = this.echdata.xData;\\n        const seriesArrData = [\\n          {\\n            name: '用户总数',\\n            type: 'bar',\\n            barWidth: '15%',\\n            itemStyle: {\\n              normal: {\\n                color: '#9C9AFF',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\\n          },\\n          {\\n            name: '新增会员',\\n            type: 'bar',\\n            barWidth: '15%',\\n            itemStyle: {\\n              normal: {\\n                color: '#FC8B62',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 500, 500, 500, 500, 400, 400, 500, 500]\\n          },\\n          {\\n            name: '用户',\\n            type: 'bar',\\n            barWidth: '15%',\\n            itemStyle: {\\n              normal: {\\n                color: '#FF679F',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\\n          },\\n          {\\n            name: '其它',\\n            type: 'line',\\n            barWidth: '15%',\\n            smooth: true,\\n            itemStyle: {\\n              normal: {\\n                color: '#FFCA71',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\\n          }\\n        ];\\n        const option = {\\n          title: {\\n            text: this.titleText,\\n            top: -2,\\n            textStyle: {\\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\\n              fontSize: '14px', // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            }\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\\n            }\\n          },\\n          grid: {\\n            right: '5%',\\n            left: '5',\\n            bottom: '0',\\n            top: '30',\\n            containLabel: true\\n          },\\n          xAxis: {\\n            type: 'category',\\n            data: this.echdata.xData,\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            axisTick: {\\n              show: false\\n            }\\n          },\\n          yAxis: {\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            // 分格线\\n            splitLine: {\\n              show: false,\\n              lineStyle: {\\n                color: '#4784e8'\\n              }\\n            }\\n          },\\n          series: seriesArrData\\n        };\\n        //\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\n    yData: [101, 202, 303, 404]\\n  };\\n\\n  export default {\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '标题'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`,\\n        chart: null\\n      };\\n    },\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(() => {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        var colorList = [\\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\\n            { offset: 0, color: '#1277CC' },\\n            { offset: 1, color: '#00E7FD' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\\n            { offset: 0, color: '#01C4BA' },\\n            { offset: 1, color: '#1DEFA9' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\\n            { offset: 0, color: '#EF624A' },\\n            { offset: 1, color: '#FF9482' }\\n          ])\\n        ];\\n        var option = {\\n          title: {\\n            text: this.titleText,\\n            top: -2,\\n            textStyle: {\\n              color: '#fff', // 字体颜色\\n              fontSize: '14px', // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            }\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow'\\n            }\\n          },\\n          legend: {\\n            show: false\\n          },\\n          grid: [\\n            {\\n              left: '10',\\n              right: '10',\\n              bottom: '0',\\n              top: '35',\\n              containLabel: true\\n            }\\n          ],\\n          xAxis: [\\n            {\\n              // name: '年龄',\\n              axisLine: {\\n                show: true,\\n                lineStyle: {\\n                  color: 'rgba(209, 209, 209, .3)'\\n                }\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              },\\n              axisLabel: {\\n                color: '#fff',\\n                interval: 0,\\n                fontWeight: 'normal',\\n                fontSize: 12\\n              },\\n              data: this.echdata.xData,\\n              gridIndex: 0\\n            }\\n          ],\\n          yAxis: [\\n            {\\n              show: true,\\n              //   name: '万人',\\n              axisLine: {\\n                show: true,\\n                lineStyle: {\\n                  color: 'rgba(209, 209, 209, .3)'\\n                }\\n              },\\n              axisLabel: {\\n                fontSize: 12,\\n                color: '#fff'\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              }\\n            }\\n          ],\\n          label: {\\n            show: true,\\n            position: 'top',\\n            color: '#fff',\\n            fontSize: 13,\\n            fontWeight: 600\\n          },\\n          series: [\\n            {\\n              // name: '柱状图',\\n              type: 'bar',\\n              data: this.echdata.yData.map((item, i) => {\\n                const itemStyle = {\\n                  color: i > 3 ? colorList[3] : colorList[i]\\n                };\\n                return {\\n                  value: item,\\n                  itemStyle: itemStyle\\n                };\\n              }),\\n              barWidth: 10,\\n              itemStyle: {\\n                barBorderRadius: 30\\n              }\\n            }\\n          ]\\n        };\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC2.vue?vue&type=style&index=0&id=3737eff4&prod&lang=scss&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '备注：',\n    name: '',\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.drainitEchartm();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n        this.onHanleClick();\n      });\n    },\n    methods: {\n      // echart 初始化\n      initEchart() {\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\n\n        var option = {\n          title: {\n            text: this.titleText,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            },\n            x: 'left'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              left: '10',\n              right: '0',\n              bottom: '-15',\n              top: '30',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false\n            }\n          ],\n          yAxis: [\n            {\n              // name: '年龄',\n              inverse: false,\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13,\n                formatter: function(value, index) {\n                  return value.length > 5 ? value.slice(0, 5) + '...' : value;\n                }\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          label: {\n            show: true,\n            position: 'right',\n            color: '#fff',\n            fontSize: 13,\n            fontWeight: 600\n          },\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData,\n              barWidth: 8,\n              itemStyle: {\n                barBorderRadius: 30,\n                color: new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n                  { offset: 0, color: '#FAACA8' },\n                  { offset: 1, color: '#FA709A' }\n                ])\n              },\n              z: 91\n            },\n            {\n              name: '进度条背景',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData.map(function(d) {\n                return barMax;\n              }),\n              barWidth: 8,\n              tooltip: {\n                show: false\n              },\n              itemStyle: {\n                normal: {\n                  barBorderRadius: 30,\n                  color: '#0A3069',\n                  barBorderColor: '#0A3069', // 边框色\n                  barBorderWidth: 1, // 边框宽度\n                  label: {\n                    show: false,\n                    textStyle: {\n                      color: 'rgba(255,255,255,1)'\n                    },\n                    position: 'right',\n                    formatter: function(p) {\n                      return this.echdata.xData[p.dataIndex];\n                    }\n                  }\n                }\n              },\n              z: 90\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      // 点击事件\n      onHanleClick() {\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.getZr().on('click', params => {\n          console.log('点击饿了', params);\n          const pointInPixel = [params.offsetX, params.offsetY];\n          if (echartEle.containPixel('grid', pointInPixel)) {\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\n            console.log(xIndex);\n          }\n          // this.$router.push('/sy-chanyelian')\n          //\n          // var options = echartEle.getOption()\n          // console.log('options配置', options)\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB4.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB4.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarB4.vue?vue&type=template&id=a4e58a18&scoped=true\"\nimport script from \"./BarB4.vue?vue&type=script&lang=js\"\nexport * from \"./BarB4.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarB4.vue?vue&type=style&index=0&id=a4e58a18&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a4e58a18\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '',\n    name: '',\n    props: {\n      echdata: {\n        type: Object,\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `echartsLine${Number(\n          Math.random()\n            .toString()\n            .substr(3, 3) + Date.now()\n        ).toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.initEchart();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const colorList = [\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ])\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -4,\n            textStyle: {\n              // color: '#2992ff',\n              color: '#fff', // 备用字体色 '#2B9DF2'\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n            // formatter: function(params) {\n            //   return params[0].name + '<br>' + params[0].value;\n            // }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              top: '20',\n              left: '10',\n              right: '20',\n              bottom: '-20',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false,\n              name: '人',\n              nameTextStyle: {\n                align: 'right',\n                color: '#FFFFFF'\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 16,\n                color: '#FFFFFF'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              inverse: false, // 设置 Y 轴数据反向展示\n              triggerEvent: true,\n              nameTextStyle: {\n                fontSize: 14,\n                color: '#FDFEFF',\n                padding: [0, 0, -10, -100]\n              },\n              axisLine: {\n                show: false,\n                lineStyle: {\n                  color: '#fff',\n                  align: 'left'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#96C2FF',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30,\n                normal: {\n                  label: {\n                    position: 'right', // 在上方显示\n                    show: true, // 开启显示\n                    textStyle: {\n                      color: '#FDFEFF',\n                      fontWeight: 600,\n                      fontSize: 13\n                    }\n                  }\n                }\n              },\n              z: 91\n            }\n          ]\n        };\n\n        echartEle.setOption(option, true);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB1.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB1.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarB1.vue?vue&type=template&id=489e24e2&scoped=true\"\nimport script from \"./BarB1.vue?vue&type=script&lang=js\"\nexport * from \"./BarB1.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarB1.vue?vue&type=style&index=0&id=489e24e2&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"489e24e2\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB2.vue?vue&type=style&index=0&id=39797ae2&prod&lang=scss&scoped=true\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA6.vue?vue&type=style&index=0&id=08759bc4&prod&lang=scss&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"color\":\"#fff\"}},[_vm._v(\" echart图 \")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"\" style=\"color:#fff\">\n    echart图\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {};\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA7.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA7.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA7.vue?vue&type=template&id=8c2052c6&scoped=true\"\nimport script from \"./BarA7.vue?vue&type=script&lang=js\"\nexport * from \"./BarA7.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8c2052c6\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        var colorList = [\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#1277CC' },\n            { offset: 1, color: '#00E7FD' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#01C4BA' },\n            { offset: 1, color: '#1DEFA9' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#EF624A' },\n            { offset: 1, color: '#FF9482' }\n          ])\n        ];\n        var option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              left: '10',\n              right: '10',\n              bottom: '0',\n              top: '35',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              // name: '年龄',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 12\n              },\n              data: this.echdata.xData,\n              gridIndex: 0\n            }\n          ],\n          yAxis: [\n            {\n              show: true,\n              //   name: '万人',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 12,\n                color: '#fff'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          label: {\n            show: true,\n            position: 'top',\n            color: '#fff',\n            fontSize: 13,\n            fontWeight: 600\n          },\n          series: [\n            {\n              // name: '柱状图',\n              type: 'bar',\n              data: this.echdata.yData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30\n              }\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA5.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA5.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA5.vue?vue&type=template&id=5a0ca71a&scoped=true\"\nimport script from \"./BarA5.vue?vue&type=script&lang=js\"\nexport * from \"./BarA5.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA5.vue?vue&type=style&index=0&id=5a0ca71a&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5a0ca71a\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA5.vue?vue&type=style&index=0&id=5a0ca71a&prod&lang=scss&scoped=true\"","export default \"<template>\\n  <div class=\\\"\\\" style=\\\"color:#fff\\\">\\n    echart图\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {};\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped></style>\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA2.vue?vue&type=style&index=0&id=d2609ffa&prod&lang=scss&scoped=true\"","var map = {\n\t\"./BarA1\": \"753c\",\n\t\"./BarA1.vue\": \"753c\",\n\t\"./BarA2\": \"0570\",\n\t\"./BarA2.vue\": \"0570\",\n\t\"./BarA3\": \"7456\",\n\t\"./BarA3.vue\": \"7456\",\n\t\"./BarA4\": \"0c6a\",\n\t\"./BarA4.vue\": \"0c6a\",\n\t\"./BarA5\": \"24c1\",\n\t\"./BarA5.vue\": \"24c1\",\n\t\"./BarA6\": \"fcc8\",\n\t\"./BarA6.vue\": \"fcc8\",\n\t\"./BarA7\": \"d867\",\n\t\"./BarA7.vue\": \"d867\",\n\t\"./BarA8\": \"4140\",\n\t\"./BarA8.vue\": \"4140\",\n\t\"./BarB1\": \"5075\",\n\t\"./BarB1.vue\": \"5075\",\n\t\"./BarB2\": \"fcaf\",\n\t\"./BarB2.vue\": \"fcaf\",\n\t\"./BarB3\": \"0d59\",\n\t\"./BarB3.vue\": \"0d59\",\n\t\"./BarB4\": \"9d51\",\n\t\"./BarB4.vue\": \"9d51\",\n\t\"./BarC1\": \"c0ca\",\n\t\"./BarC1.vue\": \"c0ca\",\n\t\"./BarC2\": \"20b0\",\n\t\"./BarC2.vue\": \"20b0\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4d76\";","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\" />\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: [5, 75, 115, 52.65, 25.75],\\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\\n  };\\n\\n  export default {\\n    infoTip: '',\\n    name: '',\\n    props: {\\n      echdata: {\\n        type: Object,\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '年龄分布(单位：万人)'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `echartsLine${Number(\\n          Math.random()\\n            .toString()\\n            .substr(3, 3) + Date.now()\\n        ).toString(36)}`\\n      };\\n    },\\n    watch: {\\n      echdata: {\\n        handler: function() {\\n          this.initEchart();\\n        },\\n        deep: true\\n      }\\n    },\\n    created() {},\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(function() {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        const colorList = [\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ])\\n        ];\\n        const option = {\\n          title: {\\n            text: this.titleText,\\n            top: -4,\\n            textStyle: {\\n              // color: '#2992ff',\\n              color: '#fff', // 备用字体色 '#2B9DF2'\\n              fontSize: 14, // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            }\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow'\\n            }\\n            // formatter: function(params) {\\n            //   return params[0].name + '<br>' + params[0].value;\\n            // }\\n          },\\n          legend: {\\n            show: false\\n          },\\n          grid: [\\n            {\\n              top: '20',\\n              left: '10',\\n              right: '20',\\n              bottom: '-20',\\n              containLabel: true\\n            }\\n          ],\\n          xAxis: [\\n            {\\n              show: false,\\n              name: '人',\\n              nameTextStyle: {\\n                align: 'right',\\n                color: '#FFFFFF'\\n              },\\n              axisLine: {\\n                show: true,\\n                lineStyle: {\\n                  color: 'rgba(209, 209, 209, .3)'\\n                }\\n              },\\n              axisLabel: {\\n                fontSize: 16,\\n                color: '#FFFFFF'\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              }\\n            }\\n          ],\\n          yAxis: [\\n            {\\n              inverse: false, // 设置 Y 轴数据反向展示\\n              triggerEvent: true,\\n              nameTextStyle: {\\n                fontSize: 14,\\n                color: '#FDFEFF',\\n                padding: [0, 0, -10, -100]\\n              },\\n              axisLine: {\\n                show: false,\\n                lineStyle: {\\n                  color: '#fff',\\n                  align: 'left'\\n                }\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              },\\n              axisLabel: {\\n                color: '#96C2FF',\\n                interval: 0,\\n                fontWeight: 'normal',\\n                fontSize: 13\\n              },\\n              data: this.echdata.yData,\\n              gridIndex: 0\\n            }\\n          ],\\n          series: [\\n            {\\n              name: '数量',\\n              type: 'bar',\\n              barGap: '-100%',\\n              data: this.echdata.xData.map((item, i) => {\\n                const itemStyle = {\\n                  color: i > 3 ? colorList[3] : colorList[i]\\n                };\\n                return {\\n                  value: item,\\n                  itemStyle: itemStyle\\n                };\\n              }),\\n              barWidth: 10,\\n              itemStyle: {\\n                barBorderRadius: 30,\\n                normal: {\\n                  label: {\\n                    position: 'right', // 在上方显示\\n                    show: true, // 开启显示\\n                    textStyle: {\\n                      color: '#FDFEFF',\\n                      fontWeight: 600,\\n                      fontSize: 13\\n                    }\\n                  }\\n                }\\n              },\\n              z: 91\\n            }\\n          ]\\n        };\\n\\n        echartEle.setOption(option, true);\\n        // 实时缩放\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        let totalSum = 0; // 总数\n        for (var i = 0; i < this.echdata.yData.length; i++) {\n          totalSum += this.echdata.yData[i];\n        }\n        var option = {\n          title: {\n            text: this.titleText,\n            top: -4,\n            textStyle: {\n              color: '#2B9DF2',\n              fontSize: 14 // 字体大小\n              // fontWeight:  // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 14\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'line' // 默认为直线，可选为：'line' | 'shadow'\n            }\n            // formatter: function(params) {\n            //   console.log('鼠标', params);\n            //   var value = params.value;\n            //   // var total = params.data.total;\n            //   var percent = ((value / totalSum) * 100).toFixed(2); // 计算百分比\n            //   return params.name + ': ' + value + ' (' + percent + '%)'; // 格式化 tooltip 内容\n            // }\n            // formatter: '{c}%' // 显示比例（这是关键）\n            // formatter: `{b}: {c} ({c/${totalSum} * 100}%)`\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '-5',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              // color: 'red',\n              color: '#96C2FF',\n              fontSize: 10,\n              interval: 0,\n              rotate: 20\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                // color: 'red',\n                color: '#96C2FF',\n                fontSize: 12,\n                fontWeight: 100\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)',\n                  fontSize: 12\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              smooth: true,\n              barWidth: 6,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 6,\n              color: '#10D6FE',\n              lineStyle: {\n                width: 1,\n                type: 'dashed'\n              },\n              label: {\n                show: true,\n                color: '#fff',\n                fontSize: '12',\n                fontWeight: 600,\n                position: 'top',\n                // formatter: '{b}\\n{c}%', // 显示比例（这是关键）\n                formatter: function(params) {\n                  console.log('比例饿', params);\n                  const percent = ((params.value / totalSum) * 100).toFixed(2) + '%';\n                  return percent;\n                }\n              },\n              areaStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\n                  ],\n                  globalCoord: false\n                }\n              },\n              data: this.echdata.yData\n            }\n          ]\n        };\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA4.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA4.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA4.vue?vue&type=template&id=0a66cabf&scoped=true\"\nimport script from \"./BarA4.vue?vue&type=script&lang=js\"\nexport * from \"./BarA4.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA4.vue?vue&type=style&index=0&id=0a66cabf&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0a66cabf\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\n    yData: [101, 202, 303, 404]\\n  };\\n\\n  export default {\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '标题'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`,\\n        chart: null\\n      };\\n    },\\n    mounted() {\\n      this.$nextTick(() => {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        const seriesArrData = [\\n          {\\n            // 柱体1\\n            name: '数量',\\n            data: this.echdata.yData,\\n            type: 'bar',\\n            barMaxWidth: 'auto',\\n            barWidth: '10',\\n            showBackground: true,\\n            backgroundStyle: {\\n              color: 'rgba(20, 88, 168, 0.2)'\\n            },\\n            itemStyle: {\\n              normal: {\\n                color: function(params) {\\n                  var colorList = ['#02AFD5', '#F3CB6B'];\\n                  return colorList[params.dataIndex % colorList.length];\\n                },\\n                label: {\\n                  position: 'top',\\n                  show: true, // 开启显示\\n                  formatter: ['{a|{c}}'].join(','),\\n                  rich: {\\n                    a: {\\n                      color: '#fff',\\n                      align: 'center',\\n                      fontSize: '12px'\\n                    }\\n                  },\\n                  // position: 'top', // 在上方显示\\n                  textStyle: {\\n                    // 数值样式\\n                    color: '#FDFEFF',\\n                    fontSize: 12\\n                  }\\n                }\\n              }\\n            },\\n            zlevel: 2\\n          }\\n        ];\\n        const option = {\\n          title: {\\n            text: this.titleText,\\n            top: -2,\\n            textStyle: {\\n              color: '#fff', // 备用字体色 '#2B9DF2' '#2992ff',\\n              fontSize: 14, // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            }\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              // 坐标轴指示器，坐标轴触发有效\\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\\n            }\\n          },\\n          grid: {\\n            right: '5%',\\n            left: '5',\\n            bottom: '0',\\n            top: '30',\\n            containLabel: true\\n          },\\n          xAxis: {\\n            type: 'category',\\n            data: this.echdata.xData,\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            axisTick: {\\n              show: false\\n            }\\n          },\\n          yAxis: {\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            // 分格线\\n            splitLine: {\\n              show: false,\\n              lineStyle: {\\n                color: '#4784e8'\\n              }\\n            }\\n          },\\n          series: seriesArrData\\n        };\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option, true);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404],\n    yData2: [110, 220, 333, 444],\n    yData3: [131, 252, 363, 484]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        // var data1 = this.echdata.xData;\n        const seriesArrData = [\n          {\n            name: '用户总数',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\n          },\n          {\n            name: '新增会员',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#FC8B62',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 500, 500, 500, 500, 400, 400, 500, 500]\n          },\n          {\n            name: '用户',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#FF679F',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          },\n          {\n            name: '其它',\n            type: 'line',\n            barWidth: '15%',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        //\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC2.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC2.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarC2.vue?vue&type=template&id=3737eff4&scoped=true\"\nimport script from \"./BarC2.vue?vue&type=script&lang=js\"\nexport * from \"./BarC2.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarC2.vue?vue&type=style&index=0&id=3737eff4&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3737eff4\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\n    yData: [101, 202, 303, 404]\\n  };\\n\\n  export default {\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '标题'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`,\\n        chart: null\\n      };\\n    },\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(() => {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        // var data1 = this.echdata.xData;\\n        const seriesArrData = [\\n          {\\n            // 柱体1\\n            name: '数量',\\n            data: this.echdata.yData,\\n            type: 'bar',\\n            barMaxWidth: 'auto',\\n            barWidth: '10',\\n            showBackground: true,\\n            backgroundStyle: {\\n              color: 'rgba(20, 88, 168, 0.2)'\\n            },\\n            itemStyle: {\\n              normal: {\\n                color: params => {\\n                  var colorList = [['#2D98DF', '#0B244C']];\\n                  47;\\n                  return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\\n                    {\\n                      offset: 0,\\n                      color: colorList[0][0]\\n                    },\\n                    {\\n                      offset: 0.5,\\n                      color: colorList[0][0]\\n                    },\\n                    {\\n                      offset: 1,\\n                      color: colorList[0][1]\\n                    }\\n                  ]);\\n                },\\n                label: {\\n                  show: true,\\n                  position: 'top',\\n                  textStyle: {\\n                    fontSize: 14,\\n                    fontWeight: 600,\\n                    color: '#D1DBFF' // 字体颜色\\n                  }\\n                }\\n              },\\n              barBorderRadius: 30\\n            },\\n            zlevel: 2\\n          }\\n        ];\\n        const option = {\\n          title: {\\n            text: this.titleText,\\n            top: -2,\\n            textStyle: {\\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\\n              fontSize: '14px', // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            }\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\\n            }\\n          },\\n          grid: {\\n            right: '5%',\\n            left: '5',\\n            bottom: '0',\\n            top: '30',\\n            containLabel: true\\n          },\\n          xAxis: {\\n            type: 'category',\\n            data: this.echdata.xData,\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            axisTick: {\\n              show: false\\n            }\\n          },\\n          yAxis: {\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            // 分格线\\n            splitLine: {\\n              show: false,\\n              lineStyle: {\\n                color: '#4784e8'\\n              }\\n            }\\n          },\\n          series: seriesArrData\\n        };\\n        //\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB4.vue?vue&type=style&index=0&id=a4e58a18&prod&lang=scss&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"page\"},[_c('div',{staticClass:\"header\"},[_c('h3',{staticClass:\"title\"},[_vm._v(\"柱状图·基础\")]),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.echDefDataA),expression:\"echDefDataA\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"rightCopy\"},[_vm._v(\"复制数据\")])]),_c('section',{staticClass:\"units-box\"},[_c('ul',{staticClass:\"unit-list\"},_vm._l((_vm.dynamicComponents_A),function(item,i){return _c('li',{key:i + 'A',staticClass:\"unit-item\",attrs:{\"id\":'itemCls' + i}},[_c('div',{staticClass:\"theUnit\"},[_c(_vm.dynamicComponents_A[i],{tag:\"component\",attrs:{\"titleText\":`标题${i + 1}`}})],1),_c('div',{staticClass:\"title\",attrs:{\"info\":\"tip提示\"}},[_vm._v(_vm._s(_vm.getInfoTip(_vm.vueFiles[`BarA${i + 1}`])))]),_c('div',{staticClass:\"btnBlock\"},[_c('span',{staticClass:\"iconfont icon-bianji\",attrs:{\"title\":\"编辑\"},on:{\"click\":function($event){return _vm.onHandleItem(`BarA${i + 1}`)}}}),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.vueFiles[`BarA${i + 1}`]),expression:\"vueFiles[`BarA${i + 1}`]\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"iconfont icon-fuzhi\",attrs:{\"title\":\"复制\"}}),_c('span',{staticClass:\"iconfont icon-yulan\",attrs:{\"title\":\"预览\"},on:{\"click\":function($event){return _vm.onPreview(`BarA${i + 1}`)}}})])])}),0)]),_c('div',{staticClass:\"header\"},[_c('h3',{staticClass:\"title\"},[_vm._v(\"柱状图·横向\")]),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.echDefDataB),expression:\"echDefDataB\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"rightCopy\"},[_vm._v(\"复制数据\")])]),_c('section',{staticClass:\"units-box\"},[_c('ul',{staticClass:\"unit-list\"},_vm._l((_vm.dynamicComponents_B),function(item,i){return _c('li',{key:i + 'B',staticClass:\"unit-item\",attrs:{\"id\":'itemCls' + i}},[_c('div',{staticClass:\"theUnit\"},[_c(_vm.dynamicComponents_B[i],{tag:\"component\"})],1),_c('div',{staticClass:\"title\",attrs:{\"info\":\"tip提示\"}},[_vm._v(_vm._s(_vm.getInfoTip(_vm.vueFiles[`BarB${i + 1}`])))]),_c('div',{staticClass:\"btnBlock\"},[_c('span',{staticClass:\"iconfont icon-bianji\",attrs:{\"title\":\"编辑\"},on:{\"click\":function($event){return _vm.onHandleItem(`BarB${i + 1}`)}}}),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.vueFiles[`BarB${i + 1}`]),expression:\"vueFiles[`BarB${i + 1}`]\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"iconfont icon-fuzhi\",attrs:{\"title\":\"复制\"}}),_c('span',{staticClass:\"iconfont icon-yulan\",attrs:{\"title\":\"预览\"},on:{\"click\":function($event){return _vm.onPreview(`BarB${i + 1}`)}}})])])}),0)]),_c('div',{staticClass:\"header\"},[_c('h3',{staticClass:\"title\"},[_vm._v(\"柱状图·横向\")]),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.echDefDataB),expression:\"echDefDataB\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"rightCopy\"},[_vm._v(\"复制数据\")])]),_c('section',{staticClass:\"units-box\"},[_c('ul',{staticClass:\"unit-list\"},_vm._l((_vm.dynamicComponents_C),function(item,i){return _c('li',{key:i + 'C',staticClass:\"unit-item\",attrs:{\"id\":'itemCls' + i}},[_c('div',{staticClass:\"theUnit\"},[_c(_vm.dynamicComponents_C[i],{tag:\"component\"})],1),_c('div',{staticClass:\"title\",attrs:{\"info\":\"tip提示\"}},[_vm._v(_vm._s(_vm.getInfoTip(_vm.vueFiles[`BarC${i + 1}`])))]),_c('div',{staticClass:\"btnBlock\"},[_c('span',{staticClass:\"iconfont icon-bianji\",attrs:{\"title\":\"编辑\"},on:{\"click\":function($event){return _vm.onHandleItem(`BarC${i + 1}`)}}}),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.vueFiles[`BarC${i + 1}`]),expression:\"vueFiles[`BarC${i + 1}`]\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"iconfont icon-fuzhi\",attrs:{\"title\":\"复制\"}}),_c('span',{staticClass:\"iconfont icon-yulan\",attrs:{\"title\":\"预览\"},on:{\"click\":function($event){return _vm.onPreview(`BarC${i + 1}`)}}})])])}),0)]),(_vm.isShowFullCode)?_c('FullScreenCodeNew',{attrs:{\"isshow\":_vm.isShowFullCode,\"codecontent\":_vm.codecontent},on:{\"update:isshow\":function($event){_vm.isShowFullCode=$event},\"update:codecontent\":function($event){_vm.codecontent=$event}}}):_vm._e(),(_vm.isShowFullPreview)?_c('FullScreenPreview',{attrs:{\"isshow\":_vm.isShowFullPreview},on:{\"update:isshow\":function($event){_vm.isShowFullPreview=$event}}},[_c(_vm.previewEchart,{tag:\"component\"}),_c('template',{slot:\"btn\"},[_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.vueFiles[`${_vm.previewEchart}`]),expression:\"vueFiles[`${previewEchart}`]\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"btnicon\"},[_vm._v(\"复制\")])])],2):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"page\">\n    <!-- 1 -->\n    <div class=\"header\">\n      <h3 class=\"title\">柱状图·基础</h3>\n      <span class=\"rightCopy\" v-clipboard:copy=\"echDefDataA\" v-clipboard:success=\"clipboardSuccess\">复制数据</span>\n    </div>\n    <section class=\"units-box\">\n      <ul class=\"unit-list\">\n        <li class=\"unit-item\" v-for=\"(item, i) in dynamicComponents_A\" :key=\"i + 'A'\" :id=\"'itemCls' + i\">\n          <div class=\"theUnit\"><component :is=\"dynamicComponents_A[i]\" :titleText=\"`标题${i + 1}`\"></component></div>\n          <div class=\"title\" info=\"tip提示\">{{ getInfoTip(vueFiles[`BarA${i + 1}`]) }}</div>\n          <div class=\"btnBlock\">\n            <span class=\"iconfont icon-bianji\" title=\"编辑\" @click=\"onHandleItem(`BarA${i + 1}`)\"></span>\n            <span class=\"iconfont icon-fuzhi\" title=\"复制\" v-clipboard:copy=\"vueFiles[`BarA${i + 1}`]\" v-clipboard:success=\"clipboardSuccess\"></span>\n            <span class=\"iconfont icon-yulan\" title=\"预览\" @click=\"onPreview(`BarA${i + 1}`)\"></span>\n            <!-- <span class=\"iconfont icon-code-line\" title=\"显示代码\" @click=\"onTest(`BarA${i + 1}`)\"></span> -->\n          </div>\n        </li>\n      </ul>\n    </section>\n    <!-- 2 -->\n    <div class=\"header\">\n      <h3 class=\"title\">柱状图·横向</h3>\n      <span class=\"rightCopy\" v-clipboard:copy=\"echDefDataB\" v-clipboard:success=\"clipboardSuccess\">复制数据</span>\n    </div>\n    <section class=\"units-box\">\n      <ul class=\"unit-list\">\n        <li class=\"unit-item\" v-for=\"(item, i) in dynamicComponents_B\" :key=\"i + 'B'\" :id=\"'itemCls' + i\">\n          <div class=\"theUnit\"><component :is=\"dynamicComponents_B[i]\"></component></div>\n          <div class=\"title\" info=\"tip提示\">{{ getInfoTip(vueFiles[`BarB${i + 1}`]) }}</div>\n          <div class=\"btnBlock\">\n            <span class=\"iconfont icon-bianji\" title=\"编辑\" @click=\"onHandleItem(`BarB${i + 1}`)\"></span>\n            <span class=\"iconfont icon-fuzhi\" title=\"复制\" v-clipboard:copy=\"vueFiles[`BarB${i + 1}`]\" v-clipboard:success=\"clipboardSuccess\"></span>\n            <span class=\"iconfont icon-yulan\" title=\"预览\" @click=\"onPreview(`BarB${i + 1}`)\"></span>\n            <!-- <span class=\"iconfont icon-code-line\" title=\"显示代码\" @click=\"onTest(`BarA${i + 1}`)\"></span> -->\n          </div>\n        </li>\n      </ul>\n    </section>\n    <!-- 3 -->\n    <div class=\"header\">\n      <h3 class=\"title\">柱状图·横向</h3>\n      <span class=\"rightCopy\" v-clipboard:copy=\"echDefDataB\" v-clipboard:success=\"clipboardSuccess\">复制数据</span>\n    </div>\n    <section class=\"units-box\">\n      <ul class=\"unit-list\">\n        <li class=\"unit-item\" v-for=\"(item, i) in dynamicComponents_C\" :key=\"i + 'C'\" :id=\"'itemCls' + i\">\n          <div class=\"theUnit\"><component :is=\"dynamicComponents_C[i]\"></component></div>\n          <div class=\"title\" info=\"tip提示\">{{ getInfoTip(vueFiles[`BarC${i + 1}`]) }}</div>\n          <div class=\"btnBlock\">\n            <span class=\"iconfont icon-bianji\" title=\"编辑\" @click=\"onHandleItem(`BarC${i + 1}`)\"></span>\n            <span class=\"iconfont icon-fuzhi\" title=\"复制\" v-clipboard:copy=\"vueFiles[`BarC${i + 1}`]\" v-clipboard:success=\"clipboardSuccess\"></span>\n            <span class=\"iconfont icon-yulan\" title=\"预览\" @click=\"onPreview(`BarC${i + 1}`)\"></span>\n            <!-- <span class=\"iconfont icon-code-line\" title=\"显示代码\" @click=\"onTest(`BarA${i + 1}`)\"></span> -->\n          </div>\n        </li>\n      </ul>\n    </section>\n    <!-- 组件 -->\n    <FullScreenCodeNew v-if=\"isShowFullCode\" :isshow.sync=\"isShowFullCode\" :codecontent.sync=\"codecontent\"></FullScreenCodeNew>\n    <!-- 预览 -->\n    <FullScreenPreview v-if=\"isShowFullPreview\" :isshow.sync=\"isShowFullPreview\">\n      <component :is=\"previewEchart\"></component>\n      <template slot=\"btn\">\n        <span class=\"btnicon\" v-clipboard:copy=\"vueFiles[`${previewEchart}`]\" v-clipboard:success=\"clipboardSuccess\">复制</span>\n      </template>\n    </FullScreenPreview>\n  </div>\n</template>\n\n<script>\n  import Vue from 'vue';\n  import { pop } from '@/utils/pop/index.js';\n  let vueFiles = {}; // components目录下的所有.vue 单文件原始内容放在这里\n  let dynamicComponents_All = [];\n\n  batchInit();\n  function batchInit() {\n    const files = require.context('./components/', true, /\\.vue$/);\n    files.keys().forEach(fileName => {\n      // 批量注册组件（组件名就是 vue文件名）\n      const componentConfig = files(fileName);\n      const componentName = fileName.replace(/^\\.\\//, '').replace(/\\.vue$/, '');\n      Vue.component(componentName, componentConfig.default || componentConfig);\n      // 批量引入.vue原始文件内容\n      const _fileName = fileName.replace(/\\.\\//, '');\n      const fileContent = require(`!!raw-loader!./components/${_fileName}`); // 批量获取.vue 单文件的内容，使用require\n      const fileKey = _fileName.replace('.vue', '');\n      vueFiles[fileKey] = fileContent.default;\n      dynamicComponents_All.push(fileKey);\n    });\n  }\n  export default {\n    data() {\n      return {\n        isShowFullCode: false,\n        isShowFullPreview: false,\n        previewEchart: '', // 预览的echart 组件\n        codecontent: 'hello world',\n        //\n        vueFiles: {},\n        //\n        dynamicComponents_A: ['BarA1'],\n        dynamicComponents_B: ['BarB1'],\n        dynamicComponents_C: ['BarC1'],\n        dynamicComponents_D: ['BarD1'],\n        dynamicComponents: ['BarA1', 'BarA2'],\n        // 数据结构\n        echDefDataA: `{\n          xData: ['2020年', '2021年', '2022年', '2023年'], // X轴\n          yData: [101, 202, 303, 404] // Y轴\n        }`,\n        echDefDataB: `{\n          xData: [5, 75, 115, 52.65, 25.75],  // X轴\n          yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']  // Y轴\n        }`\n        //\n      };\n    },\n    mounted() {\n      this.vueFiles = vueFiles;\n      //\n      this.dynamicComponents_A = dynamicComponents_All.filter(val => val.includes('BarA'));\n      this.dynamicComponents_B = dynamicComponents_All.filter(val => val.includes('BarB'));\n      this.dynamicComponents_C = dynamicComponents_All.filter(val => val.includes('BarC'));\n      this.dynamicComponents_D = dynamicComponents_All.filter(val => val.includes('BarD'));\n      console.log('this.dynamicComponents_B', this.dynamicComponents_B);\n      //\n    },\n    methods: {\n      onHandleItem(key) {\n        // this.isShowFullScreen = true;\n        // this.codecontent = vueFiles[key];\n        this.isShowFullCode = true;\n        this.codecontent = vueFiles[key];\n      },\n      // 复制\n      clipboardSuccess() {\n        pop();\n      },\n      onPreview(str) {\n        this.isShowFullPreview = true;\n        this.previewEchart = str;\n      },\n      // 备注信息\n      getInfoTip(vueFileStr) {\n        if (!vueFileStr) return;\n        const nameRegex = /infoTip:\\s*['\"]([^'\"]+)['\"]/;\n        if (!nameRegex) return;\n        const nameMatch = vueFileStr.match(nameRegex);\n        const nameValue = (nameMatch && nameMatch[1]) || '备注：';\n        // console.log('name', nameValue);\n        return nameValue;\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  @import '@/views/EchartUnit/_comconfig/commonPage.scss';\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=72366da4&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=72366da4&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"72366da4\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\" />\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: [5, 75, 115, 52.65, 25.75],\\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\\n  };\\n\\n  export default {\\n    infoTip: '备注：',\\n    name: '',\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '年龄分布(单位：万人)'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`\\n      };\\n    },\\n    watch: {\\n      echdata: {\\n        handler: function() {\\n          this.drainitEchartm();\\n        },\\n        deep: true\\n      }\\n    },\\n    created() {},\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(function() {\\n        this.initEchart();\\n        this.onHanleClick();\\n      });\\n    },\\n    methods: {\\n      // echart 初始化\\n      initEchart() {\\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\\n\\n        var option = {\\n          title: {\\n            text: this.titleText,\\n            textStyle: {\\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\\n              fontSize: '14px', // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            },\\n            x: 'left'\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow'\\n            }\\n          },\\n          legend: {\\n            show: false\\n          },\\n          grid: [\\n            {\\n              left: '10',\\n              right: '0',\\n              bottom: '-15',\\n              top: '30',\\n              containLabel: true\\n            }\\n          ],\\n          xAxis: [\\n            {\\n              show: false\\n            }\\n          ],\\n          yAxis: [\\n            {\\n              // name: '年龄',\\n              inverse: false,\\n              axisLine: {\\n                show: true,\\n                lineStyle: {\\n                  color: 'rgba(209, 209, 209, .3)'\\n                }\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              },\\n              axisLabel: {\\n                color: '#fff',\\n                interval: 0,\\n                fontWeight: 'normal',\\n                fontSize: 13,\\n                formatter: function(value, index) {\\n                  return value.length > 5 ? value.slice(0, 5) + '...' : value;\\n                }\\n              },\\n              data: this.echdata.yData,\\n              gridIndex: 0\\n            }\\n          ],\\n          label: {\\n            show: true,\\n            position: 'right',\\n            color: '#fff',\\n            fontSize: 13,\\n            fontWeight: 600\\n          },\\n          series: [\\n            {\\n              name: '数量',\\n              type: 'bar',\\n              barGap: '-100%',\\n              data: this.echdata.xData,\\n              barWidth: 8,\\n              itemStyle: {\\n                barBorderRadius: 30,\\n                color: new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n                  { offset: 0, color: '#FAACA8' },\\n                  { offset: 1, color: '#FA709A' }\\n                ])\\n              },\\n              z: 91\\n            },\\n            {\\n              name: '进度条背景',\\n              type: 'bar',\\n              barGap: '-100%',\\n              data: this.echdata.xData.map(function(d) {\\n                return barMax;\\n              }),\\n              barWidth: 8,\\n              tooltip: {\\n                show: false\\n              },\\n              itemStyle: {\\n                normal: {\\n                  barBorderRadius: 30,\\n                  color: '#0A3069',\\n                  barBorderColor: '#0A3069', // 边框色\\n                  barBorderWidth: 1, // 边框宽度\\n                  label: {\\n                    show: false,\\n                    textStyle: {\\n                      color: 'rgba(255,255,255,1)'\\n                    },\\n                    position: 'right',\\n                    formatter: function(p) {\\n                      return this.echdata.xData[p.dataIndex];\\n                    }\\n                  }\\n                }\\n              },\\n              z: 90\\n            }\\n          ]\\n        };\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option, true);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      },\\n      // 点击事件\\n      onHanleClick() {\\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\\n        echartEle.getZr().on('click', params => {\\n          console.log('点击饿了', params);\\n          const pointInPixel = [params.offsetX, params.offsetY];\\n          if (echartEle.containPixel('grid', pointInPixel)) {\\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\\n            console.log(xIndex);\\n          }\\n          // this.$router.push('/sy-chanyelian')\\n          //\\n          // var options = echartEle.getOption()\\n          // console.log('options配置', options)\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=72366da4&prod&lang=scss&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const seriesArrData = [\n          {\n            // 柱体1\n            name: '数量',\n            data: this.echdata.yData,\n            type: 'bar',\n            barMaxWidth: 'auto',\n            barWidth: '10',\n            showBackground: true,\n            backgroundStyle: {\n              color: 'rgba(20, 88, 168, 0.2)'\n            },\n            itemStyle: {\n              normal: {\n                color: function(params) {\n                  var colorList = ['#02AFD5', '#F3CB6B'];\n                  return colorList[params.dataIndex % colorList.length];\n                },\n                label: {\n                  position: 'top',\n                  show: true, // 开启显示\n                  formatter: ['{a|{c}}'].join(','),\n                  rich: {\n                    a: {\n                      color: '#fff',\n                      align: 'center',\n                      fontSize: '12px'\n                    }\n                  },\n                  // position: 'top', // 在上方显示\n                  textStyle: {\n                    // 数值样式\n                    color: '#FDFEFF',\n                    fontSize: 12\n                  }\n                }\n              }\n            },\n            zlevel: 2\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 备用字体色 '#2B9DF2' '#2992ff',\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA3.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA3.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA3.vue?vue&type=template&id=4bd8d17e&scoped=true\"\nimport script from \"./BarA3.vue?vue&type=script&lang=js\"\nexport * from \"./BarA3.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA3.vue?vue&type=style&index=0&id=4bd8d17e&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4bd8d17e\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        var option = {\n          title: {\n            text: this.titleText,\n            top: -4,\n            textStyle: {\n              color: '#2B9DF2',\n              fontSize: 14 // 字体大小\n              // fontWeight:  // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 14\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '-5',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              // color: 'red',\n              color: '#96C2FF',\n              fontSize: 10,\n              interval: 0,\n              rotate: 20\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                // color: 'red',\n                color: '#96C2FF',\n                fontSize: 12,\n                fontWeight: 100\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)',\n                  fontSize: 12\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              smooth: true,\n              barWidth: 6,\n              // showAllSymbol: true,\n              // symbol: 'circle',\n              // symbolSize: 6,\n              color: '#10D6FE',\n              lineStyle: {\n                width: 1,\n                type: 'dashed'\n              },\n              label: {\n                show: true,\n                color: '#fff',\n                fontSize: '12',\n                fontWeight: 600,\n                position: 'top',\n                formatter: function(params) {\n                  return params.value + '人';\n                }\n              },\n              areaStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\n                  ],\n                  globalCoord: false\n                }\n              },\n              data: this.echdata.yData\n            }\n          ]\n        };\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA2.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA2.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA2.vue?vue&type=template&id=d2609ffa&scoped=true\"\nimport script from \"./BarA2.vue?vue&type=script&lang=js\"\nexport * from \"./BarA2.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA2.vue?vue&type=style&index=0&id=d2609ffa&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d2609ffa\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\n    yData: [101, 202, 303, 404],\\n    yData2: [110, 220, 333, 444],\\n    yData3: [131, 252, 363, 484]\\n  };\\n\\n  export default {\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '标题'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`,\\n        chart: null\\n      };\\n    },\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(() => {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        // var data1 = this.echdata.xData;\\n        const seriesArrData = [\\n          {\\n            name: '用户总数',\\n            type: 'bar',\\n            barWidth: '15%',\\n            itemStyle: {\\n              normal: {\\n                color: '#9C9AFF',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\\n          },\\n          {\\n            name: '其它',\\n            type: 'line',\\n            barWidth: '15%',\\n            smooth: true,\\n            itemStyle: {\\n              normal: {\\n                color: '#FFCA71',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\\n          }\\n        ];\\n        const option = {\\n          title: {\\n            text: this.titleText,\\n            top: -2,\\n            textStyle: {\\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\\n              fontSize: '14px', // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            }\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\\n            }\\n          },\\n          grid: {\\n            right: '5%',\\n            left: '5',\\n            bottom: '0',\\n            top: '30',\\n            containLabel: true\\n          },\\n          xAxis: {\\n            type: 'category',\\n            data: this.echdata.xData,\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            axisTick: {\\n              show: false\\n            }\\n          },\\n          yAxis: {\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            // 分格线\\n            splitLine: {\\n              show: false,\\n              lineStyle: {\\n                color: '#4784e8'\\n              }\\n            }\\n          },\\n          series: seriesArrData\\n        };\\n        //\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB1.vue?vue&type=style&index=0&id=489e24e2&prod&lang=scss&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '',\n    name: '',\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.drainitEchartm();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n        this.onHanleClick();\n      });\n    },\n    methods: {\n      // echart 初始化\n      initEchart() {\n        var colorList = [\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ])\n        ];\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\n        var seriesBgData = [];\n        for (var i = 0; i < this.echdata.xData.length; i++) {\n          seriesBgData.push(barMax);\n        }\n        var option = {\n          title: {\n            text: this.titleText,\n            textStyle: {\n              color: '#fff', // 备用字体色 '#2B9DF2'\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            },\n            x: 'left'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n            // formatter: function(params) {\n            //   // return params[0].name + '<br>' + params[0].value + ' 万人'\n            //   return params[0].name + '<br>' + params[0].value;\n            // }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              top: '20px',\n              left: '10',\n              right: '10',\n              bottom: '-20',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false,\n              name: '万人',\n              nameTextStyle: {\n                align: 'right',\n                color: '#FFFFFF'\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 13,\n                color: '#FFFFFF'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              // name: '年龄',\n              triggerEvent: true,\n              inverse: false,\n              axisLine: {\n                show: false,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#96C2FF',\n                // color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              barCategoryGap: '100%',\n              data: this.echdata.xData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30\n              },\n              z: 91,\n              label: {\n                show: true,\n                distance: 15,\n                color: '#fff',\n                fontSize: '14',\n                fontWeight: 600,\n                position: 'right'\n              }\n            },\n            {\n              name: '进度条背景',\n              type: 'bar',\n              barGap: '-100%',\n              barCategoryGap: '200%',\n              data: this.echdata.xData.map(function(d) {\n                return barMax;\n              }),\n              barWidth: 10,\n              tooltip: {\n                show: false\n              },\n              itemStyle: {\n                normal: {\n                  barBorderRadius: 30,\n                  color: '#1c1d47',\n                  // color: '#204b86',\n                  barBorderColor: '#204b86', // 边框色\n                  barBorderWidth: 1, // 边框宽度\n                  label: {\n                    show: false,\n                    textStyle: {\n                      color: 'rgba(255,255,255,1)'\n                    },\n                    position: 'right',\n                    formatter: function(p) {\n                      return this.echdata.xData[p.dataIndex];\n                    }\n                  }\n                }\n              },\n              z: 90\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      // 点击事件\n      onHanleClick() {\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.getZr().on('click', params => {\n          console.log('点击饿了', params);\n          const pointInPixel = [params.offsetX, params.offsetY];\n          if (echartEle.containPixel('grid', pointInPixel)) {\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\n            console.log(xIndex);\n          }\n          // this.$router.push('/sy-chanyelian')\n          //\n          // var options = echartEle.getOption()\n          // console.log('options配置', options)\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB3.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB3.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarB3.vue?vue&type=template&id=599ff382&scoped=true\"\nimport script from \"./BarB3.vue?vue&type=script&lang=js\"\nexport * from \"./BarB3.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarB3.vue?vue&type=style&index=0&id=599ff382&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"599ff382\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA4.vue?vue&type=style&index=0&id=0a66cabf&prod&lang=scss&scoped=true\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB3.vue?vue&type=style&index=0&id=599ff382&prod&lang=scss&scoped=true\"","export default \"<template>\\n  <div class=\\\"\\\" style=\\\"color:#fff\\\">\\n    echart图\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {};\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped></style>\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC1.vue?vue&type=style&index=0&id=7d30ec4e&prod&lang=scss&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"color\":\"#fff\"}},[_vm._v(\" echart图 \")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"\" style=\"color:#fff\">\n    echart图\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {};\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA8.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA8.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA8.vue?vue&type=template&id=1fefdfbc&scoped=true\"\nimport script from \"./BarA8.vue?vue&type=script&lang=js\"\nexport * from \"./BarA8.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1fefdfbc\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        // var data1 = this.echdata.xData;\n        const seriesArrData = [\n          {\n            // 柱体1\n            name: '数量',\n            data: this.echdata.yData,\n            type: 'bar',\n            barMaxWidth: 'auto',\n            barWidth: '10',\n            showBackground: true,\n            backgroundStyle: {\n              color: 'rgba(20, 88, 168, 0.2)'\n            },\n            itemStyle: {\n              normal: {\n                color: params => {\n                  var colorList = [['#2D98DF', '#0B244C']];\n                  47;\n                  return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: colorList[0][0]\n                    },\n                    {\n                      offset: 0.5,\n                      color: colorList[0][0]\n                    },\n                    {\n                      offset: 1,\n                      color: colorList[0][1]\n                    }\n                  ]);\n                },\n                label: {\n                  show: true,\n                  position: 'top',\n                  textStyle: {\n                    fontSize: 14,\n                    fontWeight: 600,\n                    color: '#D1DBFF' // 字体颜色\n                  }\n                }\n              },\n              barBorderRadius: 30\n            },\n            zlevel: 2\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        //\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA1.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA1.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA1.vue?vue&type=template&id=76cbb846&scoped=true\"\nimport script from \"./BarA1.vue?vue&type=script&lang=js\"\nexport * from \"./BarA1.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA1.vue?vue&type=style&index=0&id=76cbb846&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"76cbb846\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        var colorList = [\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#EF624A' },\n            { offset: 1, color: '#FF9482' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#1277CC' },\n            { offset: 1, color: '#00E7FD' }\n          ])\n        ];\n        var option = {\n          title: {\n            text: this.titleText,\n            textStyle: {\n              color: '#fff', // 字体颜色\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            },\n            x: 'left'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              left: '10',\n              right: '10',\n              bottom: '0',\n              top: '35',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              // name: '年龄',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 12\n              },\n              data: this.echdata.xData,\n              gridIndex: 0\n            }\n          ],\n          yAxis: [\n            {\n              show: true,\n              //   name: '万人',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 12,\n                color: '#fff'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          label: {\n            show: true,\n            position: 'top',\n            color: '#fff',\n            fontSize: 13,\n            fontWeight: 600\n          },\n          series: [\n            {\n              // name: '柱状图',\n              type: 'bar',\n              data: this.echdata.yData.map((item, i) => {\n                const itemStyle = {\n                  color: i % 2 === 1 ? colorList[0] : colorList[1]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 15\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA6.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA6.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA6.vue?vue&type=template&id=08759bc4&scoped=true\"\nimport script from \"./BarA6.vue?vue&type=script&lang=js\"\nexport * from \"./BarA6.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA6.vue?vue&type=style&index=0&id=08759bc4&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"08759bc4\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\" />\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: [5, 75, 115, 52.65, 25.75],\\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\\n  };\\n\\n  export default {\\n    infoTip: '备注：Y轴数据倒置',\\n    name: '',\\n    props: {\\n      echdata: {\\n        type: Object,\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '年龄分布(单位：万人)'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `echartsLine${Number(\\n          Math.random()\\n            .toString()\\n            .substr(3, 3) + Date.now()\\n        ).toString(36)}`\\n      };\\n    },\\n    watch: {\\n      echdata: {\\n        handler: function() {\\n          this.initEchart();\\n        },\\n        deep: true\\n      }\\n    },\\n    created() {},\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(function() {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        const colorList = [\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\n            { offset: 0, color: '#395CFE' },\\n            { offset: 1, color: '#2EC7CF' }\\n          ])\\n        ];\\n        const option = {\\n          title: {\\n            text: this.titleText,\\n            top: -4,\\n            textStyle: {\\n              // color: '#2992ff',\\n              color: '#fff', // 备用字体色 '#2B9DF2'\\n              fontSize: 14, // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            }\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow'\\n            }\\n            // formatter: function(params) {\\n            //   return params[0].name + '<br>' + params[0].value;\\n            // }\\n          },\\n          legend: {\\n            show: false\\n          },\\n          grid: [\\n            {\\n              top: '20',\\n              left: '10',\\n              right: '20',\\n              bottom: '-20',\\n              containLabel: true\\n            }\\n          ],\\n          xAxis: [\\n            {\\n              show: false,\\n              name: '人',\\n              nameTextStyle: {\\n                align: 'right',\\n                color: '#FFFFFF'\\n              },\\n              axisLine: {\\n                show: true,\\n                lineStyle: {\\n                  color: 'rgba(209, 209, 209, .3)'\\n                }\\n              },\\n              axisLabel: {\\n                fontSize: 16,\\n                color: '#FFFFFF'\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              }\\n            }\\n          ],\\n          yAxis: [\\n            {\\n              inverse: true, // 设置 Y 轴数据反向展示\\n              triggerEvent: true,\\n              nameTextStyle: {\\n                fontSize: 14,\\n                color: '#FDFEFF',\\n                padding: [0, 0, -10, -100]\\n              },\\n              axisLine: {\\n                show: false,\\n                lineStyle: {\\n                  color: '#fff',\\n                  align: 'left'\\n                }\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              },\\n              axisLabel: {\\n                color: '#96C2FF',\\n                interval: 0,\\n                fontWeight: 'normal',\\n                fontSize: 13\\n              },\\n              data: this.echdata.yData,\\n              gridIndex: 0\\n            }\\n          ],\\n          series: [\\n            {\\n              name: '数量',\\n              type: 'bar',\\n              barGap: '-100%',\\n              data: this.echdata.xData.map((item, i) => {\\n                const itemStyle = {\\n                  color: i > 3 ? colorList[3] : colorList[i]\\n                };\\n                return {\\n                  value: item,\\n                  itemStyle: itemStyle\\n                };\\n              }),\\n              barWidth: 10,\\n              itemStyle: {\\n                barBorderRadius: 30,\\n                normal: {\\n                  label: {\\n                    position: 'right', // 在上方显示\\n                    show: true, // 开启显示\\n                    textStyle: {\\n                      color: '#FDFEFF',\\n                      fontWeight: 600,\\n                      fontSize: 13\\n                    }\\n                  }\\n                }\\n              },\\n              z: 91\\n            }\\n          ]\\n        };\\n\\n        echartEle.setOption(option, true);\\n        // 实时缩放\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\n    yData: [101, 202, 303, 404]\\n  };\\n\\n  export default {\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '标题'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`,\\n        chart: null\\n      };\\n    },\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(() => {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        var colorList = [\\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\\n            { offset: 0, color: '#EF624A' },\\n            { offset: 1, color: '#FF9482' }\\n          ]),\\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\\n            { offset: 0, color: '#1277CC' },\\n            { offset: 1, color: '#00E7FD' }\\n          ])\\n        ];\\n        var option = {\\n          title: {\\n            text: this.titleText,\\n            textStyle: {\\n              color: '#fff', // 字体颜色\\n              fontSize: '14px', // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            },\\n            x: 'left'\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow'\\n            }\\n          },\\n          legend: {\\n            show: false\\n          },\\n          grid: [\\n            {\\n              left: '10',\\n              right: '10',\\n              bottom: '0',\\n              top: '35',\\n              containLabel: true\\n            }\\n          ],\\n          xAxis: [\\n            {\\n              // name: '年龄',\\n              axisLine: {\\n                show: true,\\n                lineStyle: {\\n                  color: 'rgba(209, 209, 209, .3)'\\n                }\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              },\\n              axisLabel: {\\n                color: '#fff',\\n                interval: 0,\\n                fontWeight: 'normal',\\n                fontSize: 12\\n              },\\n              data: this.echdata.xData,\\n              gridIndex: 0\\n            }\\n          ],\\n          yAxis: [\\n            {\\n              show: true,\\n              //   name: '万人',\\n              axisLine: {\\n                show: true,\\n                lineStyle: {\\n                  color: 'rgba(209, 209, 209, .3)'\\n                }\\n              },\\n              axisLabel: {\\n                fontSize: 12,\\n                color: '#fff'\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              }\\n            }\\n          ],\\n          label: {\\n            show: true,\\n            position: 'top',\\n            color: '#fff',\\n            fontSize: 13,\\n            fontWeight: 600\\n          },\\n          series: [\\n            {\\n              // name: '柱状图',\\n              type: 'bar',\\n              data: this.echdata.yData.map((item, i) => {\\n                const itemStyle = {\\n                  color: i % 2 === 1 ? colorList[0] : colorList[1]\\n                };\\n                return {\\n                  value: item,\\n                  itemStyle: itemStyle\\n                };\\n              }),\\n              barWidth: 15\\n            }\\n          ]\\n        };\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";"],"sourceRoot":""}