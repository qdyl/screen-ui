(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-acf89b7c"],{"0570":function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        var option = {\n          title: {\n            text: this.titleText,\n            top: -4,\n            textStyle: {\n              color: '#2B9DF2',\n              fontSize: 14 // 字体大小\n              // fontWeight:  // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 14\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '-5',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              // color: 'red',\n              color: '#96C2FF',\n              fontSize: 10,\n              interval: 0,\n              rotate: 20\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                // color: 'red',\n                color: '#96C2FF',\n                fontSize: 12,\n                fontWeight: 100\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)',\n                  fontSize: 12\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              smooth: true,\n              barWidth: 6,\n              // showAllSymbol: true,\n              // symbol: 'circle',\n              // symbolSize: 6,\n              color: '#10D6FE',\n              lineStyle: {\n                width: 1,\n                type: 'dashed'\n              },\n              label: {\n                show: true,\n                color: '#fff',\n                fontSize: '12',\n                fontWeight: 600,\n                position: 'top',\n                formatter: function(params) {\n                  return params.value + '人';\n                }\n              },\n              areaStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\n                  ],\n                  globalCoord: false\n                }\n              },\n              data: this.echdata.yData\n            }\n          ]\n        };\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"07b2":function(t,n,e){"use strict";e("c645")},"0b90":function(t,n,e){"use strict";e("9d4a")},"0c6a":function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        let totalSum = 0; // 总数\n        for (var i = 0; i < this.echdata.yData.length; i++) {\n          totalSum += this.echdata.yData[i];\n        }\n        var option = {\n          title: {\n            text: this.titleText,\n            top: -4,\n            textStyle: {\n              color: '#2B9DF2',\n              fontSize: 14 // 字体大小\n              // fontWeight:  // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 14\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'line' // 默认为直线，可选为：'line' | 'shadow'\n            }\n            // formatter: function(params) {\n            //   console.log('鼠标', params);\n            //   var value = params.value;\n            //   // var total = params.data.total;\n            //   var percent = ((value / totalSum) * 100).toFixed(2); // 计算百分比\n            //   return params.name + ': ' + value + ' (' + percent + '%)'; // 格式化 tooltip 内容\n            // }\n            // formatter: '{c}%' // 显示比例（这是关键）\n            // formatter: `{b}: {c} ({c/${totalSum} * 100}%)`\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '-5',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              // color: 'red',\n              color: '#96C2FF',\n              fontSize: 10,\n              interval: 0,\n              rotate: 20\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                // color: 'red',\n                color: '#96C2FF',\n                fontSize: 12,\n                fontWeight: 100\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)',\n                  fontSize: 12\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              smooth: true,\n              barWidth: 6,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 6,\n              color: '#10D6FE',\n              lineStyle: {\n                width: 1,\n                type: 'dashed'\n              },\n              label: {\n                show: true,\n                color: '#fff',\n                fontSize: '12',\n                fontWeight: 600,\n                position: 'top',\n                // formatter: '{b}\\n{c}%', // 显示比例（这是关键）\n                formatter: function(params) {\n                  console.log('比例饿', params);\n                  const percent = ((params.value / totalSum) * 100).toFixed(2) + '%';\n                  return percent;\n                }\n              },\n              areaStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\n                  ],\n                  globalCoord: false\n                }\n              },\n              data: this.echdata.yData\n            }\n          ]\n        };\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"0d59":function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '',\n    name: '',\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.drainitEchartm();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n        this.onHanleClick();\n      });\n    },\n    methods: {\n      // echart 初始化\n      initEchart() {\n        var colorList = [\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ])\n        ];\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\n        var seriesBgData = [];\n        for (var i = 0; i < this.echdata.xData.length; i++) {\n          seriesBgData.push(barMax);\n        }\n        var option = {\n          title: {\n            text: this.titleText,\n            textStyle: {\n              color: '#fff', // 备用字体色 '#2B9DF2'\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            },\n            x: 'left'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n            // formatter: function(params) {\n            //   // return params[0].name + '<br>' + params[0].value + ' 万人'\n            //   return params[0].name + '<br>' + params[0].value;\n            // }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              top: '20px',\n              left: '10',\n              right: '10',\n              bottom: '-20',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false,\n              name: '万人',\n              nameTextStyle: {\n                align: 'right',\n                color: '#FFFFFF'\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 13,\n                color: '#FFFFFF'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              // name: '年龄',\n              triggerEvent: true,\n              inverse: false,\n              axisLine: {\n                show: false,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#96C2FF',\n                // color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              barCategoryGap: '100%',\n              data: this.echdata.xData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30\n              },\n              z: 91,\n              label: {\n                show: true,\n                distance: 15,\n                color: '#fff',\n                fontSize: '14',\n                fontWeight: 600,\n                position: 'right'\n              }\n            },\n            {\n              name: '进度条背景',\n              type: 'bar',\n              barGap: '-100%',\n              barCategoryGap: '200%',\n              data: this.echdata.xData.map(function(d) {\n                return barMax;\n              }),\n              barWidth: 10,\n              tooltip: {\n                show: false\n              },\n              itemStyle: {\n                normal: {\n                  barBorderRadius: 30,\n                  color: '#1c1d47',\n                  // color: '#204b86',\n                  barBorderColor: '#204b86', // 边框色\n                  barBorderWidth: 1, // 边框宽度\n                  label: {\n                    show: false,\n                    textStyle: {\n                      color: 'rgba(255,255,255,1)'\n                    },\n                    position: 'right',\n                    formatter: function(p) {\n                      return this.echdata.xData[p.dataIndex];\n                    }\n                  }\n                }\n              },\n              z: 90\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      // 点击事件\n      onHanleClick() {\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.getZr().on('click', params => {\n          console.log('点击饿了', params);\n          const pointInPixel = [params.offsetX, params.offsetY];\n          if (echartEle.containPixel('grid', pointInPixel)) {\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\n            console.log(xIndex);\n          }\n          // this.$router.push('/sy-chanyelian')\n          //\n          // var options = echartEle.getOption()\n          // console.log('options配置', options)\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"12a0":function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}},[t._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404],yData2:[110,220,333,444],yData3:[131,252,363,484]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const t=[{name:"用户总数",type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#9C9AFF",barBorderRadius:[12,12,0,0]}},data:[400,400,300,300,300,400,400,400,300]},{name:"其它",type:"line",barWidth:"15%",smooth:!0,itemStyle:{normal:{color:"#FFCA71",barBorderRadius:[12,12,0,0]}},data:[400,600,700,700,1e3,400,400,600,700]}],n={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:t};let e=o["init"](document.getElementById(this.eleId));e.setOption(n),window.addEventListener("resize",()=>{e.resize()})}}},l=s,c=(e("dbc2"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"7d30ec4e",null);n["default"]=h.exports},"18d5":function(t,n,e){var a={"./BarA1.vue":"f670","./BarA2.vue":"b463","./BarA3.vue":"a042","./BarA4.vue":"62d3","./BarA5.vue":"3b47","./BarA6.vue":"fc03","./BarA7.vue":"3910","./BarA8.vue":"f3de","./BarB1.vue":"2949","./BarB2.vue":"194e","./BarB3.vue":"c953","./BarB4.vue":"2936","./BarC1.vue":"12a0","./BarC2.vue":"7520"};function i(t){var n=o(t);return e(n)}function o(t){if(!e.o(a,t)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return a[t]}i.keys=function(){return Object.keys(a)},i.resolve=o,t.exports=i,i.id="18d5"},"194e":function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}})},i=[],o=e("313e");const r={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"备注：Y轴数据倒置",name:"",props:{echdata:{type:Object,default:()=>r},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"echartsLine"+Number(Math.random().toString().substr(3,3)+Date.now()).toString(36)}},watch:{echdata:{handler:function(){this.initEchart()},deep:!0}},created(){},mounted(){this.$echarts=o,this.$nextTick((function(){this.initEchart()}))},methods:{initEchart(){let t=o["init"](document.getElementById(this.eleId));const n=[new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}])],e={title:{text:this.titleText,top:-4,textStyle:{color:"#fff",fontSize:14,fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{top:"20",left:"10",right:"20",bottom:"-20",containLabel:!0}],xAxis:[{show:!1,name:"人",nameTextStyle:{align:"right",color:"#FFFFFF"},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:16,color:"#FFFFFF"},splitLine:{show:!1},axisTick:{show:!1}}],yAxis:[{inverse:!0,triggerEvent:!0,nameTextStyle:{fontSize:14,color:"#FDFEFF",padding:[0,0,-10,-100]},axisLine:{show:!1,lineStyle:{color:"#fff",align:"left"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#96C2FF",interval:0,fontWeight:"normal",fontSize:13},data:this.echdata.yData,gridIndex:0}],series:[{name:"数量",type:"bar",barGap:"-100%",data:this.echdata.xData.map((t,e)=>{const a={color:e>3?n[3]:n[e]};return{value:t,itemStyle:a}}),barWidth:10,itemStyle:{barBorderRadius:30,normal:{label:{position:"right",show:!0,textStyle:{color:"#FDFEFF",fontWeight:600,fontSize:13}}}},z:91}]};t.setOption(e,!0),window.addEventListener("resize",()=>{t.resize()})}}},l=s,c=(e("2a43"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"39797ae2",null);n["default"]=h.exports},"20b0":function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404],\n    yData2: [110, 220, 333, 444],\n    yData3: [131, 252, 363, 484]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        // var data1 = this.echdata.xData;\n        const seriesArrData = [\n          {\n            name: '用户总数',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\n          },\n          {\n            name: '新增会员',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#FC8B62',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 500, 500, 500, 500, 400, 400, 500, 500]\n          },\n          {\n            name: '用户',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#FF679F',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          },\n          {\n            name: '其它',\n            type: 'line',\n            barWidth: '15%',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        //\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"24c1":function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        var colorList = [\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#1277CC' },\n            { offset: 1, color: '#00E7FD' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#01C4BA' },\n            { offset: 1, color: '#1DEFA9' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#EF624A' },\n            { offset: 1, color: '#FF9482' }\n          ])\n        ];\n        var option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              left: '10',\n              right: '10',\n              bottom: '0',\n              top: '35',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              // name: '年龄',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 12\n              },\n              data: this.echdata.xData,\n              gridIndex: 0\n            }\n          ],\n          yAxis: [\n            {\n              show: true,\n              //   name: '万人',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 12,\n                color: '#fff'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          label: {\n            show: true,\n            position: 'top',\n            color: '#fff',\n            fontSize: 13,\n            fontWeight: 600\n          },\n          series: [\n            {\n              // name: '柱状图',\n              type: 'bar',\n              data: this.echdata.yData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30\n              }\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"25d7":function(t,n,e){"use strict";e("50a8")},2936:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}})},i=[],o=e("313e");const r={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"备注：",name:"",props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36))}},watch:{echdata:{handler:function(){this.drainitEchartm()},deep:!0}},created(){},mounted(){this.$echarts=o,this.$nextTick((function(){this.initEchart(),this.onHanleClick()}))},methods:{initEchart(){var t=1.1*Math.max(...this.echdata.xData),n={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600},x:"left"},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{left:"10",right:"0",bottom:"-15",top:"30",containLabel:!0}],xAxis:[{show:!1}],yAxis:[{inverse:!1,axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#fff",interval:0,fontWeight:"normal",fontSize:13,formatter:function(t,n){return t.length>5?t.slice(0,5)+"...":t}},data:this.echdata.yData,gridIndex:0}],label:{show:!0,position:"right",color:"#fff",fontSize:13,fontWeight:600},series:[{name:"数量",type:"bar",barGap:"-100%",data:this.echdata.xData,barWidth:8,itemStyle:{barBorderRadius:30,color:new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#FAACA8"},{offset:1,color:"#FA709A"}])},z:91},{name:"进度条背景",type:"bar",barGap:"-100%",data:this.echdata.xData.map((function(n){return t})),barWidth:8,tooltip:{show:!1},itemStyle:{normal:{barBorderRadius:30,color:"#0A3069",barBorderColor:"#0A3069",barBorderWidth:1,label:{show:!1,textStyle:{color:"rgba(255,255,255,1)"},position:"right",formatter:function(t){return this.echdata.xData[t.dataIndex]}}}},z:90}]};let e=o["init"](document.getElementById(this.eleId));e.setOption(n,!0),window.addEventListener("resize",()=>{e.resize()})},onHanleClick(){var t=this.$echarts.init(document.getElementById(this.eleId));t.getZr().on("click",n=>{console.log("点击饿了",n);const e=[n.offsetX,n.offsetY];if(t.containPixel("grid",e)){const e=t.convertFromPixel({seriesIndex:0},[n.offsetX,n.offsetY])[0];console.log(e)}})}}},l=s,c=(e("7ac6"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"a4e58a18",null);n["default"]=h.exports},2949:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}})},i=[],o=e("313e");const r={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"",name:"",props:{echdata:{type:Object,default:()=>r},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"echartsLine"+Number(Math.random().toString().substr(3,3)+Date.now()).toString(36)}},watch:{echdata:{handler:function(){this.initEchart()},deep:!0}},created(){},mounted(){this.$echarts=o,this.$nextTick((function(){this.initEchart()}))},methods:{initEchart(){let t=o["init"](document.getElementById(this.eleId));const n=[new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}])],e={title:{text:this.titleText,top:-4,textStyle:{color:"#fff",fontSize:14,fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{top:"20",left:"10",right:"20",bottom:"-20",containLabel:!0}],xAxis:[{show:!1,name:"人",nameTextStyle:{align:"right",color:"#FFFFFF"},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:16,color:"#FFFFFF"},splitLine:{show:!1},axisTick:{show:!1}}],yAxis:[{inverse:!1,triggerEvent:!0,nameTextStyle:{fontSize:14,color:"#FDFEFF",padding:[0,0,-10,-100]},axisLine:{show:!1,lineStyle:{color:"#fff",align:"left"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#96C2FF",interval:0,fontWeight:"normal",fontSize:13},data:this.echdata.yData,gridIndex:0}],series:[{name:"数量",type:"bar",barGap:"-100%",data:this.echdata.xData.map((t,e)=>{const a={color:e>3?n[3]:n[e]};return{value:t,itemStyle:a}}),barWidth:10,itemStyle:{barBorderRadius:30,normal:{label:{position:"right",show:!0,textStyle:{color:"#FDFEFF",fontWeight:600,fontSize:13}}}},z:91}]};t.setOption(e,!0),window.addEventListener("resize",()=>{t.resize()})}}},l=s,c=(e("c70e"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"489e24e2",null);n["default"]=h.exports},"2a43":function(t,n,e){"use strict";e("a2c8")},"332b":function(t,n,e){},"33ab":function(t,n,e){"use strict";e("383b")},"383b":function(t,n,e){},3910:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticStyle:{color:"#fff"}},[t._v(" echart图 ")])},i=[],o={data(){return{}}},r=o,s=e("2877"),l=Object(s["a"])(r,a,i,!1,null,"8c2052c6",null);n["default"]=l.exports},"3b47":function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}},[t._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){var t=[new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#1277CC"},{offset:1,color:"#00E7FD"}]),new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#01C4BA"},{offset:1,color:"#1DEFA9"}]),new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#EF624A"},{offset:1,color:"#FF9482"}])],n={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{left:"10",right:"10",bottom:"0",top:"35",containLabel:!0}],xAxis:[{axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#fff",interval:0,fontWeight:"normal",fontSize:12},data:this.echdata.xData,gridIndex:0}],yAxis:[{show:!0,axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:12,color:"#fff"},splitLine:{show:!1},axisTick:{show:!1}}],label:{show:!0,position:"top",color:"#fff",fontSize:13,fontWeight:600},series:[{type:"bar",data:this.echdata.yData.map((n,e)=>{const a={color:e>3?t[3]:t[e]};return{value:n,itemStyle:a}}),barWidth:10,itemStyle:{barBorderRadius:30}}]};let e=o["init"](document.getElementById(this.eleId));e.setOption(n),window.addEventListener("resize",()=>{e.resize()})}}},l=s,c=(e("401c"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"5a0ca71a",null);n["default"]=h.exports},"401c":function(t,n,e){"use strict";e("e5cf")},4140:function(t,n,e){"use strict";e.r(n),n["default"]='<template>\n  <div class="" style="color:#fff">\n    echart图\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {};\n    }\n  };\n<\/script>\n\n<style lang="scss" scoped></style>\n'},"470f":function(t,n,e){"use strict";e("7aa9")},"4d76":function(t,n,e){var a={"./BarA1":"753c","./BarA1.vue":"753c","./BarA2":"0570","./BarA2.vue":"0570","./BarA3":"7456","./BarA3.vue":"7456","./BarA4":"0c6a","./BarA4.vue":"0c6a","./BarA5":"24c1","./BarA5.vue":"24c1","./BarA6":"fcc8","./BarA6.vue":"fcc8","./BarA7":"d867","./BarA7.vue":"d867","./BarA8":"4140","./BarA8.vue":"4140","./BarB1":"5075","./BarB1.vue":"5075","./BarB2":"fcaf","./BarB2.vue":"fcaf","./BarB3":"0d59","./BarB3.vue":"0d59","./BarB4":"9d51","./BarB4.vue":"9d51","./BarC1":"c0ca","./BarC1.vue":"c0ca","./BarC2":"20b0","./BarC2.vue":"20b0"};function i(t){var n=o(t);return e(n)}function o(t){if(!e.o(a,t)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return a[t]}i.keys=function(){return Object.keys(a)},i.resolve=o,t.exports=i,i.id="4d76"},5075:function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '',\n    name: '',\n    props: {\n      echdata: {\n        type: Object,\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `echartsLine${Number(\n          Math.random()\n            .toString()\n            .substr(3, 3) + Date.now()\n        ).toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.initEchart();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const colorList = [\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ])\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -4,\n            textStyle: {\n              // color: '#2992ff',\n              color: '#fff', // 备用字体色 '#2B9DF2'\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n            // formatter: function(params) {\n            //   return params[0].name + '<br>' + params[0].value;\n            // }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              top: '20',\n              left: '10',\n              right: '20',\n              bottom: '-20',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false,\n              name: '人',\n              nameTextStyle: {\n                align: 'right',\n                color: '#FFFFFF'\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 16,\n                color: '#FFFFFF'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              inverse: false, // 设置 Y 轴数据反向展示\n              triggerEvent: true,\n              nameTextStyle: {\n                fontSize: 14,\n                color: '#FDFEFF',\n                padding: [0, 0, -10, -100]\n              },\n              axisLine: {\n                show: false,\n                lineStyle: {\n                  color: '#fff',\n                  align: 'left'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#96C2FF',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30,\n                normal: {\n                  label: {\n                    position: 'right', // 在上方显示\n                    show: true, // 开启显示\n                    textStyle: {\n                      color: '#FDFEFF',\n                      fontWeight: 600,\n                      fontSize: 13\n                    }\n                  }\n                }\n              },\n              z: 91\n            }\n          ]\n        };\n\n        echartEle.setOption(option, true);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"50a8":function(t,n,e){},"62b2":function(t,n,e){},"62d3":function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}},[t._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let t=0;for(var n=0;n<this.echdata.yData.length;n++)t+=this.echdata.yData[n];var e={title:{text:this.titleText,top:-4,textStyle:{color:"#2B9DF2",fontSize:14}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},icon:"roundRect",itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:14},axisPointer:{type:"line"}},grid:[{left:"3%",right:"3%",bottom:"-5",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"#96C2FF",fontSize:10,interval:0,rotate:20},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"#96C2FF",fontSize:12,fontWeight:100},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)",fontSize:12}},splitLine:{show:!1}}],series:[{name:"数量",type:"bar",smooth:!0,barWidth:6,showAllSymbol:!0,symbol:"circle",symbolSize:6,color:"#10D6FE",lineStyle:{width:1,type:"dashed"},label:{show:!0,color:"#fff",fontSize:"12",fontWeight:600,position:"top",formatter:function(n){console.log("比例饿",n);const e=(n.value/t*100).toFixed(2)+"%";return e}},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(2, 251, 189, .2)"},{offset:1,color:"rgba(2, 251, 189, 0)"}],globalCoord:!1}},data:this.echdata.yData}]},a=this.$echarts.init(document.getElementById(this.eleId));a.setOption(e,!0),window.addEventListener("resize",()=>{a.resize()})}}},l=s,c=(e("cd7b"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"0a66cabf",null);n["default"]=h.exports},7456:function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const seriesArrData = [\n          {\n            // 柱体1\n            name: '数量',\n            data: this.echdata.yData,\n            type: 'bar',\n            barMaxWidth: 'auto',\n            barWidth: '10',\n            showBackground: true,\n            backgroundStyle: {\n              color: 'rgba(20, 88, 168, 0.2)'\n            },\n            itemStyle: {\n              normal: {\n                color: function(params) {\n                  var colorList = ['#02AFD5', '#F3CB6B'];\n                  return colorList[params.dataIndex % colorList.length];\n                },\n                label: {\n                  position: 'top',\n                  show: true, // 开启显示\n                  formatter: ['{a|{c}}'].join(','),\n                  rich: {\n                    a: {\n                      color: '#fff',\n                      align: 'center',\n                      fontSize: '12px'\n                    }\n                  },\n                  // position: 'top', // 在上方显示\n                  textStyle: {\n                    // 数值样式\n                    color: '#FDFEFF',\n                    fontSize: 12\n                  }\n                }\n              }\n            },\n            zlevel: 2\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 备用字体色 '#2B9DF2' '#2992ff',\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},7520:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}},[t._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404],yData2:[110,220,333,444],yData3:[131,252,363,484]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const t=[{name:"用户总数",type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#9C9AFF",barBorderRadius:[12,12,0,0]}},data:[400,400,300,300,300,400,400,400,300]},{name:"新增会员",type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#FC8B62",barBorderRadius:[12,12,0,0]}},data:[400,500,500,500,500,400,400,500,500]},{name:"用户",type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#FF679F",barBorderRadius:[12,12,0,0]}},data:[400,600,700,700,1e3,400,400,600,700]},{name:"其它",type:"line",barWidth:"15%",smooth:!0,itemStyle:{normal:{color:"#FFCA71",barBorderRadius:[12,12,0,0]}},data:[400,600,700,700,1e3,400,400,600,700]}],n={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:t};let e=o["init"](document.getElementById(this.eleId));e.setOption(n),window.addEventListener("resize",()=>{e.resize()})}}},l=s,c=(e("25d7"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"3737eff4",null);n["default"]=h.exports},"753c":function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        // var data1 = this.echdata.xData;\n        const seriesArrData = [\n          {\n            // 柱体1\n            name: '数量',\n            data: this.echdata.yData,\n            type: 'bar',\n            barMaxWidth: 'auto',\n            barWidth: '10',\n            showBackground: true,\n            backgroundStyle: {\n              color: 'rgba(20, 88, 168, 0.2)'\n            },\n            itemStyle: {\n              normal: {\n                color: params => {\n                  var colorList = [['#2D98DF', '#0B244C']];\n                  47;\n                  return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: colorList[0][0]\n                    },\n                    {\n                      offset: 0.5,\n                      color: colorList[0][0]\n                    },\n                    {\n                      offset: 1,\n                      color: colorList[0][1]\n                    }\n                  ]);\n                },\n                label: {\n                  show: true,\n                  position: 'top',\n                  textStyle: {\n                    fontSize: 14,\n                    fontWeight: 600,\n                    color: '#D1DBFF' // 字体颜色\n                  }\n                }\n              },\n              barBorderRadius: 30\n            },\n            zlevel: 2\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        //\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"7aa9":function(t,n,e){},"7ac6":function(t,n,e){"use strict";e("9394")},"8c05":function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"page"},[n("div",{staticClass:"header"},[n("h3",{staticClass:"title"},[t._v("柱状图·基础")]),n("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:t.echDefDataA,expression:"echDefDataA",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:t.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"rightCopy"},[t._v("复制数据")])]),n("section",{staticClass:"units-box"},[n("ul",{staticClass:"unit-list"},t._l(t.dynamicComponents_A,(function(e,a){return n("li",{key:a+"A",staticClass:"unit-item",attrs:{id:"itemCls"+a}},[n("div",{staticClass:"theUnit"},[n(t.dynamicComponents_A[a],{tag:"component",attrs:{titleText:"标题"+(a+1)}})],1),n("div",{staticClass:"title",attrs:{info:"tip提示"}},[t._v(t._s(t.getInfoTip(t.vueFiles["BarA"+(a+1)])))]),n("div",{staticClass:"btnBlock"},[n("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(n){return t.onHandleItem("BarA"+(a+1))}}}),n("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:t.vueFiles["BarA"+(a+1)],expression:"vueFiles[`BarA${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:t.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),n("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(n){return t.onPreview("BarA"+(a+1))}}})])])})),0)]),n("div",{staticClass:"header"},[n("h3",{staticClass:"title"},[t._v("柱状图·横向")]),n("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:t.echDefDataB,expression:"echDefDataB",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:t.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"rightCopy"},[t._v("复制数据")])]),n("section",{staticClass:"units-box"},[n("ul",{staticClass:"unit-list"},t._l(t.dynamicComponents_B,(function(e,a){return n("li",{key:a+"B",staticClass:"unit-item",attrs:{id:"itemCls"+a}},[n("div",{staticClass:"theUnit"},[n(t.dynamicComponents_B[a],{tag:"component"})],1),n("div",{staticClass:"title",attrs:{info:"tip提示"}},[t._v(t._s(t.getInfoTip(t.vueFiles["BarB"+(a+1)])))]),n("div",{staticClass:"btnBlock"},[n("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(n){return t.onHandleItem("BarB"+(a+1))}}}),n("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:t.vueFiles["BarB"+(a+1)],expression:"vueFiles[`BarB${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:t.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),n("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(n){return t.onPreview("BarB"+(a+1))}}})])])})),0)]),n("div",{staticClass:"header"},[n("h3",{staticClass:"title"},[t._v("柱状图·横向")]),n("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:t.echDefDataB,expression:"echDefDataB",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:t.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"rightCopy"},[t._v("复制数据")])]),n("section",{staticClass:"units-box"},[n("ul",{staticClass:"unit-list"},t._l(t.dynamicComponents_C,(function(e,a){return n("li",{key:a+"C",staticClass:"unit-item",attrs:{id:"itemCls"+a}},[n("div",{staticClass:"theUnit"},[n(t.dynamicComponents_C[a],{tag:"component"})],1),n("div",{staticClass:"title",attrs:{info:"tip提示"}},[t._v(t._s(t.getInfoTip(t.vueFiles["BarC"+(a+1)])))]),n("div",{staticClass:"btnBlock"},[n("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(n){return t.onHandleItem("BarC"+(a+1))}}}),n("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:t.vueFiles["BarC"+(a+1)],expression:"vueFiles[`BarC${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:t.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),n("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(n){return t.onPreview("BarC"+(a+1))}}})])])})),0)]),t.isShowFullCode?n("FullScreenCodeNew",{attrs:{isshow:t.isShowFullCode,codecontent:t.codecontent},on:{"update:isshow":function(n){t.isShowFullCode=n},"update:codecontent":function(n){t.codecontent=n}}}):t._e(),t.isShowFullPreview?n("FullScreenPreview",{attrs:{isshow:t.isShowFullPreview},on:{"update:isshow":function(n){t.isShowFullPreview=n}}},[n(t.previewEchart,{tag:"component"}),n("template",{slot:"btn"},[n("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:t.vueFiles[""+t.previewEchart],expression:"vueFiles[`${previewEchart}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:t.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"btnicon"},[t._v("复制")])])],2):t._e()],1)},i=[],o=(e("14d9"),e("2b0e")),r=e("00e9");let s={},l=[];function c(){const t=e("18d5");t.keys().forEach(n=>{const a=t(n),i=n.replace(/^\.\//,"").replace(/\.vue$/,"");o["a"].component(i,a.default||a);const r=n.replace(/\.\//,""),c=e("4d76")("./"+r),h=r.replace(".vue","");s[h]=c.default,l.push(h)})}c();var h={data(){return{isShowFullCode:!1,isShowFullPreview:!1,previewEchart:"",codecontent:"hello world",vueFiles:{},dynamicComponents_A:["BarA1"],dynamicComponents_B:["BarB1"],dynamicComponents_C:["BarC1"],dynamicComponents_D:["BarD1"],dynamicComponents:["BarA1","BarA2"],echDefDataA:"{\n          xData: ['2020年', '2021年', '2022年', '2023年'], // X轴\n          yData: [101, 202, 303, 404] // Y轴\n        }",echDefDataB:"{\n          xData: [5, 75, 115, 52.65, 25.75],  // X轴\n          yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']  // Y轴\n        }"}},mounted(){this.vueFiles=s,this.dynamicComponents_A=l.filter(t=>t.includes("BarA")),this.dynamicComponents_B=l.filter(t=>t.includes("BarB")),this.dynamicComponents_C=l.filter(t=>t.includes("BarC")),this.dynamicComponents_D=l.filter(t=>t.includes("BarD")),console.log("this.dynamicComponents_B",this.dynamicComponents_B)},methods:{onHandleItem(t){this.isShowFullCode=!0,this.codecontent=s[t]},clipboardSuccess(){Object(r["a"])()},onPreview(t){this.isShowFullPreview=!0,this.previewEchart=t},getInfoTip(t){if(!t)return;const n=/infoTip:\s*['"]([^'"]+)['"]/;if(!n)return;const e=t.match(n),a=e&&e[1]||"备注：";return a}}},d=h,f=(e("9e5e0"),e("2877")),u=Object(f["a"])(d,a,i,!1,null,"72366da4",null);n["default"]=u.exports},9394:function(t,n,e){},"9d4a":function(t,n,e){},"9d51":function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '备注：',\n    name: '',\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.drainitEchartm();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n        this.onHanleClick();\n      });\n    },\n    methods: {\n      // echart 初始化\n      initEchart() {\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\n\n        var option = {\n          title: {\n            text: this.titleText,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            },\n            x: 'left'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              left: '10',\n              right: '0',\n              bottom: '-15',\n              top: '30',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false\n            }\n          ],\n          yAxis: [\n            {\n              // name: '年龄',\n              inverse: false,\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13,\n                formatter: function(value, index) {\n                  return value.length > 5 ? value.slice(0, 5) + '...' : value;\n                }\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          label: {\n            show: true,\n            position: 'right',\n            color: '#fff',\n            fontSize: 13,\n            fontWeight: 600\n          },\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData,\n              barWidth: 8,\n              itemStyle: {\n                barBorderRadius: 30,\n                color: new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n                  { offset: 0, color: '#FAACA8' },\n                  { offset: 1, color: '#FA709A' }\n                ])\n              },\n              z: 91\n            },\n            {\n              name: '进度条背景',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData.map(function(d) {\n                return barMax;\n              }),\n              barWidth: 8,\n              tooltip: {\n                show: false\n              },\n              itemStyle: {\n                normal: {\n                  barBorderRadius: 30,\n                  color: '#0A3069',\n                  barBorderColor: '#0A3069', // 边框色\n                  barBorderWidth: 1, // 边框宽度\n                  label: {\n                    show: false,\n                    textStyle: {\n                      color: 'rgba(255,255,255,1)'\n                    },\n                    position: 'right',\n                    formatter: function(p) {\n                      return this.echdata.xData[p.dataIndex];\n                    }\n                  }\n                }\n              },\n              z: 90\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      // 点击事件\n      onHanleClick() {\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\n        echartEle.getZr().on('click', params => {\n          console.log('点击饿了', params);\n          const pointInPixel = [params.offsetX, params.offsetY];\n          if (echartEle.containPixel('grid', pointInPixel)) {\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\n            console.log(xIndex);\n          }\n          // this.$router.push('/sy-chanyelian')\n          //\n          // var options = echartEle.getOption()\n          // console.log('options配置', options)\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"9e5e":function(t,n,e){},"9e5e0":function(t,n,e){"use strict";e("9e5e")},a042:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}},[t._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const t=[{name:"数量",data:this.echdata.yData,type:"bar",barMaxWidth:"auto",barWidth:"10",showBackground:!0,backgroundStyle:{color:"rgba(20, 88, 168, 0.2)"},itemStyle:{normal:{color:function(t){var n=["#02AFD5","#F3CB6B"];return n[t.dataIndex%n.length]},label:{position:"top",show:!0,formatter:["{a|{c}}"].join(","),rich:{a:{color:"#fff",align:"center",fontSize:"12px"}},textStyle:{color:"#FDFEFF",fontSize:12}}}},zlevel:2}],n={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:14,fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:t};let e=o["init"](document.getElementById(this.eleId));e.setOption(n,!0),window.addEventListener("resize",()=>{e.resize()})}}},l=s,c=(e("0b90"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"4bd8d17e",null);n["default"]=h.exports},a2c8:function(t,n,e){},b463:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}},[t._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){var t={title:{text:this.titleText,top:-4,textStyle:{color:"#2B9DF2",fontSize:14}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},icon:"roundRect",itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:14},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"3%",bottom:"-5",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"#96C2FF",fontSize:10,interval:0,rotate:20},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"#96C2FF",fontSize:12,fontWeight:100},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)",fontSize:12}},splitLine:{show:!1}}],series:[{name:"数量",type:"bar",smooth:!0,barWidth:6,color:"#10D6FE",lineStyle:{width:1,type:"dashed"},label:{show:!0,color:"#fff",fontSize:"12",fontWeight:600,position:"top",formatter:function(t){return t.value+"人"}},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(2, 251, 189, .2)"},{offset:1,color:"rgba(2, 251, 189, 0)"}],globalCoord:!1}},data:this.echdata.yData}]},n=this.$echarts.init(document.getElementById(this.eleId));n.setOption(t,!0),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(e("470f"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"d2609ffa",null);n["default"]=h.exports},c0ca:function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404],\n    yData2: [110, 220, 333, 444],\n    yData3: [131, 252, 363, 484]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        // var data1 = this.echdata.xData;\n        const seriesArrData = [\n          {\n            name: '用户总数',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\n          },\n          {\n            name: '其它',\n            type: 'line',\n            barWidth: '15%',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        //\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},c645:function(t,n,e){},c70e:function(t,n,e){"use strict";e("e812")},c953:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}})},i=[],o=(e("14d9"),e("313e"));const r={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"",name:"",props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36))}},watch:{echdata:{handler:function(){this.drainitEchartm()},deep:!0}},created(){},mounted(){this.$echarts=o,this.$nextTick((function(){this.initEchart(),this.onHanleClick()}))},methods:{initEchart(){for(var t=[new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}])],n=1.1*Math.max(...this.echdata.xData),e=[],a=0;a<this.echdata.xData.length;a++)e.push(n);var i={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:14,fontWeight:600},x:"left"},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{top:"20px",left:"10",right:"10",bottom:"-20",containLabel:!0}],xAxis:[{show:!1,name:"万人",nameTextStyle:{align:"right",color:"#FFFFFF"},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:13,color:"#FFFFFF"},splitLine:{show:!1},axisTick:{show:!1}}],yAxis:[{triggerEvent:!0,inverse:!1,axisLine:{show:!1,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#96C2FF",interval:0,fontWeight:"normal",fontSize:13},data:this.echdata.yData,gridIndex:0}],series:[{name:"数量",type:"bar",barGap:"-100%",barCategoryGap:"100%",data:this.echdata.xData.map((n,e)=>{const a={color:e>3?t[3]:t[e]};return{value:n,itemStyle:a}}),barWidth:10,itemStyle:{barBorderRadius:30},z:91,label:{show:!0,distance:15,color:"#fff",fontSize:"14",fontWeight:600,position:"right"}},{name:"进度条背景",type:"bar",barGap:"-100%",barCategoryGap:"200%",data:this.echdata.xData.map((function(t){return n})),barWidth:10,tooltip:{show:!1},itemStyle:{normal:{barBorderRadius:30,color:"#1c1d47",barBorderColor:"#204b86",barBorderWidth:1,label:{show:!1,textStyle:{color:"rgba(255,255,255,1)"},position:"right",formatter:function(t){return this.echdata.xData[t.dataIndex]}}}},z:90}]};let r=o["init"](document.getElementById(this.eleId));r.setOption(i,!0),window.addEventListener("resize",()=>{r.resize()})},onHanleClick(){var t=this.$echarts.init(document.getElementById(this.eleId));t.getZr().on("click",n=>{console.log("点击饿了",n);const e=[n.offsetX,n.offsetY];if(t.containPixel("grid",e)){const e=t.convertFromPixel({seriesIndex:0},[n.offsetX,n.offsetY])[0];console.log(e)}})}}},l=s,c=(e("d858"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"599ff382",null);n["default"]=h.exports},cd7b:function(t,n,e){"use strict";e("62b2")},d858:function(t,n,e){"use strict";e("332b")},d867:function(t,n,e){"use strict";e.r(n),n["default"]='<template>\n  <div class="" style="color:#fff">\n    echart图\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {};\n    }\n  };\n<\/script>\n\n<style lang="scss" scoped></style>\n'},dbc2:function(t,n,e){"use strict";e("eb77")},e5cf:function(t,n,e){},e812:function(t,n,e){},eb77:function(t,n,e){},f3de:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticStyle:{color:"#fff"}},[t._v(" echart图 ")])},i=[],o={data(){return{}}},r=o,s=e("2877"),l=Object(s["a"])(r,a,i,!1,null,"1fefdfbc",null);n["default"]=l.exports},f670:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}},[t._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const t=[{name:"数量",data:this.echdata.yData,type:"bar",barMaxWidth:"auto",barWidth:"10",showBackground:!0,backgroundStyle:{color:"rgba(20, 88, 168, 0.2)"},itemStyle:{normal:{color:t=>{var n=[["#2D98DF","#0B244C"]];return new this.$echarts.graphic.LinearGradient(0,0,0,1,[{offset:0,color:n[0][0]},{offset:.5,color:n[0][0]},{offset:1,color:n[0][1]}])},label:{show:!0,position:"top",textStyle:{fontSize:14,fontWeight:600,color:"#D1DBFF"}}},barBorderRadius:30},zlevel:2}],n={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:t};let e=o["init"](document.getElementById(this.eleId));e.setOption(n),window.addEventListener("resize",()=>{e.resize()})}}},l=s,c=(e("07b2"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"76cbb846",null);n["default"]=h.exports},fc03:function(t,n,e){"use strict";e.r(n);var a=function(){var t=this,n=t._self._c;return n("div",{staticClass:"echart-unit",attrs:{id:t.eleId}},[t._v("组件")])},i=[],o=e("313e");const r={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=o,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){var t=[new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#EF624A"},{offset:1,color:"#FF9482"}]),new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#1277CC"},{offset:1,color:"#00E7FD"}])],n={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600},x:"left"},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{left:"10",right:"10",bottom:"0",top:"35",containLabel:!0}],xAxis:[{axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#fff",interval:0,fontWeight:"normal",fontSize:12},data:this.echdata.xData,gridIndex:0}],yAxis:[{show:!0,axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:12,color:"#fff"},splitLine:{show:!1},axisTick:{show:!1}}],label:{show:!0,position:"top",color:"#fff",fontSize:13,fontWeight:600},series:[{type:"bar",data:this.echdata.yData.map((n,e)=>{const a={color:e%2===1?t[0]:t[1]};return{value:n,itemStyle:a}}),barWidth:15}]};let e=o["init"](document.getElementById(this.eleId));e.setOption(n),window.addEventListener("resize",()=>{e.resize()})}}},l=s,c=(e("33ab"),e("2877")),h=Object(c["a"])(l,a,i,!1,null,"08759bc4",null);n["default"]=h.exports},fcaf:function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: [5, 75, 115, 52.65, 25.75],\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\n  };\n\n  export default {\n    infoTip: '备注：Y轴数据倒置',\n    name: '',\n    props: {\n      echdata: {\n        type: Object,\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '年龄分布(单位：万人)'\n      }\n    },\n    data() {\n      return {\n        eleId: `echartsLine${Number(\n          Math.random()\n            .toString()\n            .substr(3, 3) + Date.now()\n        ).toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.initEchart();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const colorList = [\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\n            { offset: 0, color: '#395CFE' },\n            { offset: 1, color: '#2EC7CF' }\n          ])\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -4,\n            textStyle: {\n              // color: '#2992ff',\n              color: '#fff', // 备用字体色 '#2B9DF2'\n              fontSize: 14, // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n            // formatter: function(params) {\n            //   return params[0].name + '<br>' + params[0].value;\n            // }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              top: '20',\n              left: '10',\n              right: '20',\n              bottom: '-20',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              show: false,\n              name: '人',\n              nameTextStyle: {\n                align: 'right',\n                color: '#FFFFFF'\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 16,\n                color: '#FFFFFF'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              inverse: true, // 设置 Y 轴数据反向展示\n              triggerEvent: true,\n              nameTextStyle: {\n                fontSize: 14,\n                color: '#FDFEFF',\n                padding: [0, 0, -10, -100]\n              },\n              axisLine: {\n                show: false,\n                lineStyle: {\n                  color: '#fff',\n                  align: 'left'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#96C2FF',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 13\n              },\n              data: this.echdata.yData,\n              gridIndex: 0\n            }\n          ],\n          series: [\n            {\n              name: '数量',\n              type: 'bar',\n              barGap: '-100%',\n              data: this.echdata.xData.map((item, i) => {\n                const itemStyle = {\n                  color: i > 3 ? colorList[3] : colorList[i]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 10,\n              itemStyle: {\n                barBorderRadius: 30,\n                normal: {\n                  label: {\n                    position: 'right', // 在上方显示\n                    show: true, // 开启显示\n                    textStyle: {\n                      color: '#FDFEFF',\n                      fontWeight: 600,\n                      fontSize: 13\n                    }\n                  }\n                }\n              },\n              z: 91\n            }\n          ]\n        };\n\n        echartEle.setOption(option, true);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},fcc8:function(t,n,e){"use strict";e.r(n),n["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        var colorList = [\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#EF624A' },\n            { offset: 1, color: '#FF9482' }\n          ]),\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\n            { offset: 0, color: '#1277CC' },\n            { offset: 1, color: '#00E7FD' }\n          ])\n        ];\n        var option = {\n          title: {\n            text: this.titleText,\n            textStyle: {\n              color: '#fff', // 字体颜色\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            },\n            x: 'left'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          legend: {\n            show: false\n          },\n          grid: [\n            {\n              left: '10',\n              right: '10',\n              bottom: '0',\n              top: '35',\n              containLabel: true\n            }\n          ],\n          xAxis: [\n            {\n              // name: '年龄',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                color: '#fff',\n                interval: 0,\n                fontWeight: 'normal',\n                fontSize: 12\n              },\n              data: this.echdata.xData,\n              gridIndex: 0\n            }\n          ],\n          yAxis: [\n            {\n              show: true,\n              //   name: '万人',\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              axisLabel: {\n                fontSize: 12,\n                color: '#fff'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n            }\n          ],\n          label: {\n            show: true,\n            position: 'top',\n            color: '#fff',\n            fontSize: 13,\n            fontWeight: 600\n          },\n          series: [\n            {\n              // name: '柱状图',\n              type: 'bar',\n              data: this.echdata.yData.map((item, i) => {\n                const itemStyle = {\n                  color: i % 2 === 1 ? colorList[0] : colorList[1]\n                };\n                return {\n                  value: item,\n                  itemStyle: itemStyle\n                };\n              }),\n              barWidth: 15\n            }\n          ]\n        };\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"}}]);
//# sourceMappingURL=chunk-acf89b7c.38e04857.js.map