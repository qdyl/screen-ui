(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-4c5366b4"],{"0335":function(n,t,e){},"0346":function(n,t,e){"use strict";e("7911")},"034d":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    yData: [150, 230, 224, 218, 135, 147, 260]\n  };\n  //tag1-end\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const option = {\n          grid: {\n            top: 30,\n            bottom: 0,\n            left: 0,\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              data: this.echdata.yData,\n              type: 'line'\n            }\n          ]\n        };\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"03d3":function(n,t,e){},"0799":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],yData:[150,230,224,218,135,147,260]},s="标题";var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));var t={title:{text:"折线图",left:"center",textStyle:{fontWeight:"bold",fontSize:20}},tooltip:{trigger:"axis",axisPointer:{type:"line",lineStyle:{color:"#ccc"},label:{backgroundColor:"#ccc"}}},legend:{data:["销量"],textStyle:{fontSize:16}},xAxis:{name:"日期",type:"category",data:["周一","周二","周三","周四","周五","周六","周日"],axisLine:{lineStyle:{color:"#999"}},axisLabel:{fontSize:14,color:"#666"}},yAxis:{name:"销量（万）",type:"value",axisLine:{lineStyle:{color:"#999"}},axisLabel:{fontSize:14,color:"#666"},splitLine:{lineStyle:{color:["#ccc"],type:"dashed"}}},series:[{name:"销量",type:"line",data:[5,20,36,10,10,20,15],symbolSize:10,itemStyle:{color:"#0077FF"},lineStyle:{color:"#0077FF",width:2},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(0, 119, 255, 0.5)"},{offset:1,color:"rgba(255, 255, 255, 0.5)"}]}}}]};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},c=l,d=(e("faf8"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"00323ac8",null);t["default"]=h.exports},"0cda":function(n,t,e){},"1a34":function(n,t,e){"use strict";e("0335")},"1e13":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['第一季', '第二季', '第三季', '第四季'],\n    yData: [50, 20, 40, 35]\n  };\n  //tag1-end\n  //tag1B-start\n  const defaultTitle = '标题';\n  //tag1B-end\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: defaultTitle\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        var option = {\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 14\n            },\n            // icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 18\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '0',\n              top: '20%',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              color: 'rgba(255, 255, 255, .7)',\n              fontSize: 14,\n              interval: 0\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                color: 'rgba(255, 255, 255, .7)',\n                fontSize: 14\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '参保人数(万人)',\n              type: 'line',\n              smooth: true,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 4,\n              color: '#0ED793',\n              itemStyle: {\n                normal: {\n                  color: '#040B2B',\n                  borderColor: '#0ED793',\n                  borderWidth: 1\n                }\n              },\n              lineStyle: {\n                width: 1,\n                color: '#0ED793'\n                // type: 'dashed'\n              },\n              areaStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\n                  ],\n                  globalCoord: false\n                }\n              },\n              label: {\n                show: true,\n                fontSize: 14,\n                color: '#fff',\n                position: 'top'\n              },\n              data: this.echdata.yData\n            }\n          ]\n        };\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"1fcd":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  const defaultEchdata = {\n    xData: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    yData: [150, 230, 224, 218, 135, 147, 260]\n  };\n  const defaultTitle = '标题';\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: defaultTitle\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    watch: {\n      echdata: {\n        handler(newV, oldV) {\n          this.initEchart();\n        }\n      }\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const option = {\n          grid: {\n            top: 10,\n            bottom: 0,\n            left: 0,\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              data: this.echdata.yData,\n              type: 'line'\n            }\n          ]\n        };\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},2032:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],yData:[150,230,224,218,135,147,260]},s="标题";var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));const t={grid:{top:10,bottom:0,left:0,containLabel:!0},xAxis:{type:"category",data:this.echdata.xData},yAxis:{type:"value"},series:[{data:this.echdata.yData,type:"line"}]};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},c=l,d=(e("fa6b"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"1bc36530",null);t["default"]=h.exports},"28b6":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["2015","2016","2017","2018","2019","2020"],yData:[5,20,36,10,10,20],yData2:[15,30,15,35,20,25]};var s={props:{echdata:{type:[Object,Array],default:()=>r}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));var t={title:{text:"折线图",subtext:"示例",left:"center"},legend:{data:["数据一","数据二"],top:"5%"},tooltip:{trigger:"axis"},xAxis:{type:"category",data:this.echdata.xData,axisLine:{lineStyle:{color:"#999"}},axisTick:{show:!1}},yAxis:{type:"value",axisLine:{show:!1},axisTick:{show:!1}},series:[{name:"数据一",type:"line",smooth:!0,symbol:"circle",symbolSize:8,lineStyle:{color:"#61a0a8",width:2},itemStyle:{color:"#c23531"},areaStyle:{color:new o["graphic"].LinearGradient(0,0,0,1,[{offset:0,color:"#fff"},{offset:1,color:"#61a0a8"}]),opacity:.2},data:this.echdata.yData},{name:"数据二",type:"line",smooth:!0,symbol:"circle",symbolSize:8,lineStyle:{color:"#d48265",width:2},itemStyle:{color:"#91c7ae"},areaStyle:{color:new o["graphic"].LinearGradient(0,0,0,1,[{offset:0,color:"#fff"},{offset:1,color:"#d48265"}]),opacity:.2},data:this.echdata.yData2}],toolbox:{feature:{dataView:{show:!0,readOnly:!1},saveAsImage:{show:!0},restore:{show:!0},dataZoom:{show:!0},magicType:{show:!0,type:["line","bar"]},brush:{show:!0}},top:"5%",right:"5%",orient:"vertical",itemGap:15,emphasis:{iconStyle:{borderColor:"#fff",shadowBlur:10,shadowOffsetX:0,shadowOffsetY:0,shadowColor:"rgba(0, 0, 0, 0.5)"}}}};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(e("72e3"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"49fc6a10",null);t["default"]=d.exports},"2ce4":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    yData: [150, 230, 224, 218, 135, 147, 260]\n  };\n  //tag1-end\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const option = {\n          grid: {\n            top: 30,\n            bottom: 0,\n            left: 0,\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              data: this.echdata.yData,\n              type: 'line'\n            }\n          ]\n        };\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"341a":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],yData:[150,230,224,218,135,147,260]};var s={props:{echdata:{type:[Object,Array],default:()=>r}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));const t={grid:{top:30,bottom:0,left:0,containLabel:!0},xAxis:{type:"category",data:this.echdata.xData},yAxis:{type:"value"},series:[{data:this.echdata.yData,type:"line"}]};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(e("6eeb"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"638a1519",null);t["default"]=d.exports},3711:function(n,t,e){},"3fee":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["第一季","第二季","第三季","第四季"],yData:[50,20,40,35]},s="标题";var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));var t={legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:18},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"3%",bottom:"0",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14,interval:0},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"rgba(255, 255, 255, .7)",fontSize:14},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}}],series:[{name:"参保人数(万人)",type:"line",smooth:!0,showAllSymbol:!0,symbol:"circle",symbolSize:4,color:"#0ED793",itemStyle:{normal:{color:"#040B2B",borderColor:"#0ED793",borderWidth:1}},lineStyle:{width:1,color:"#0ED793"},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(2, 251, 189, .2)"},{offset:1,color:"rgba(2, 251, 189, 0)"}],globalCoord:!1}},label:{show:!0,fontSize:14,color:"#fff",position:"top"},data:this.echdata.yData}]};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},c=l,d=(e("aec5"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"6bc28c23",null);t["default"]=h.exports},"3ff8":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],yData:[150,230,224,218,135,147,260]};var s={props:{echdata:{type:[Object,Array],default:()=>r}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));const t={grid:{top:30,bottom:0,left:0,containLabel:!0},xAxis:{type:"category",data:this.echdata.xData},yAxis:{type:"value"},series:[{data:this.echdata.yData,type:"line"}]};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(e("bb42"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"351d4657",null);t["default"]=d.exports},4197:function(n,t,e){},"45ea":function(n,t,e){},"518e":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['2015', '2016', '2017', '2018', '2019', '2020'],\n    yData: [5, 20, 36, 10, 10, 20],\n    yData2: [15, 30, 15, 35, 20, 25]\n  };\n  //tag1-end\n  //tag1B-start\n  const defaultTitle = '标题';\n  //tag1B-end\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        // 配置项\n        var option = {\n          // 标题\n          title: {\n            text: '折线图', // 主标题文本\n            subtext: '示例', // 副标题文本\n            left: 'center' // 标题位置\n          },\n\n          // 图例\n          legend: {\n            data: ['数据一', '数据二'], // 图例数据\n            top: '5%' // 图例位置\n          },\n\n          // 提示框\n          tooltip: {\n            trigger: 'axis'\n          },\n\n          // x 轴\n          xAxis: {\n            type: 'category', // 类目轴\n            data: this.echdata.xData, // x 轴数据\n            axisLine: {\n              // x 轴轴线设置\n              lineStyle: {\n                color: '#999' // 灰色\n              }\n            },\n            axisTick: {\n              // x 轴刻度线设置\n              show: false // 不显示刻度线\n            }\n          },\n\n          // y 轴\n          yAxis: {\n            type: 'value', // 数值轴\n            axisLine: {\n              // y 轴轴线设置\n              show: false // 不显示轴线\n            },\n            axisTick: {\n              // y 轴刻度线设置\n              show: false // 不显示刻度线\n            }\n          },\n\n          // 数据系列\n          series: [\n            {\n              name: '数据一',\n              type: 'line',\n              smooth: true, // 平滑曲线\n              symbol: 'circle', // 折线拐点形状\n              symbolSize: 8, // 折线拐点大小\n              lineStyle: {\n                // 折线颜色和线条样式设置\n                color: '#61a0a8',\n                width: 2 // 折线线宽度\n              },\n              itemStyle: {\n                // 折线拐点样式设置\n                color: '#c23531'\n              },\n              areaStyle: {\n                // 折线下方填充区域\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: '#fff'\n                  },\n                  {\n                    offset: 1,\n                    color: '#61a0a8'\n                  }\n                ]),\n                opacity: 0.2\n              },\n              data: this.echdata.yData\n            },\n            {\n              name: '数据二',\n              type: 'line',\n              smooth: true, // 平滑曲线\n              symbol: 'circle', // 折线拐点形状\n              symbolSize: 8, // 折线拐点大小\n              lineStyle: {\n                // 折线颜色和线条样式设置\n                color: '#d48265',\n                width: 2 // 折线线宽度\n              },\n              itemStyle: {\n                // 折线拐点样式设置\n                color: '#91c7ae'\n              },\n              areaStyle: {\n                // 折线下方填充区域\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: '#fff'\n                  },\n                  {\n                    offset: 1,\n                    color: '#d48265'\n                  }\n                ]),\n                opacity: 0.2\n              },\n              data: this.echdata.yData2\n            }\n          ],\n\n          // 工具箱\n          toolbox: {\n            feature: {\n              dataView: {\n                // 数据视图\n                show: true, // 显示数据视图\n                readOnly: false // 可编辑\n              },\n              saveAsImage: {\n                // 保存为图片\n                show: true // 显示保存为图片\n              },\n              restore: {\n                // 重置\n                show: true // 显示重置\n              },\n              dataZoom: {\n                //// 数据区域缩放\n                show: true // 显示数据区域缩放\n              },\n              magicType: {\n                // 图表类型切换\n                show: true, // 显示类型切换\n                type: ['line', 'bar'] // 可切换的图表类型\n              },\n              brush: {\n                // 选框组件，用于区域选择\n                show: true // 显示选框组件\n              }\n            },\n            // 工具箱总体设置\n            top: '5%', // 工具箱位置\n            right: '5%', // 工具箱位置\n            orient: 'vertical', // 工具箱图标布局，垂直排布\n            itemGap: 15, // 工具箱中各个图标之间的距离\n            emphasis: {\n              // 工具箱图标高亮样式\n              iconStyle: {\n                borderColor: '#fff',\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowOffsetY: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        };\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"56d1":function(n,t,e){"use strict";e("8a57")},"580e":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    yData: [150, 230, 224, 218, 135, 147, 260],\n    yData2: [130, 200, 182, 190, 120, 127, 160]\n  };\n  //tag1-end\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.dram();\n        },\n        deep: true\n      }\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const option = {\n          grid: {\n            top: 30,\n            bottom: 0,\n            left: 0,\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              data: this.echdata.yData,\n              type: 'line'\n            },\n            {\n              data: this.echdata.yData2,\n              type: 'line' // 在上方显示\n            }\n          ]\n        };\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"5b1d":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],yData:[150,230,224,218,135,147,260],yData2:[130,200,182,190,120,127,160]};var s={props:{echdata:{type:[Object,Array],default:()=>r}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},watch:{echdata:{handler:function(){this.dram()},deep:!0}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));const t={grid:{top:30,bottom:0,left:0,containLabel:!0},xAxis:{type:"category",data:this.echdata.xData},yAxis:{type:"value"},series:[{data:this.echdata.yData,type:"line"},{data:this.echdata.yData2,type:"line"}]};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(e("f6b0"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"145b11a6",null);t["default"]=d.exports},"5d90":function(n,t,e){"use strict";e("0cda")},"5ddf":function(n,t,e){"use strict";e("03d3")},"619a":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["1月","2月","3月","4月","5月","6月"],yData:[5,20,36,10,10,20]},s="标题";var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId)),t={title:{text:"ECharts 折线图",textStyle:{color:"#2992ff",fontSize:14,fontWeight:"bold"},left:"center"},tooltip:{trigger:"axis",axisPointer:{type:"cross"},backgroundColor:"#fff",borderColor:"#ccc",padding:10,textStyle:{color:"#333"},extraCssText:"box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);"},legend:{data:["销量"],textStyle:{color:"#999"},right:"2%",top:"5%",itemGap:20},grid:{top:50,left:"3%",right:"4%",bottom:"10%",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisTick:{show:!1},axisLine:{lineStyle:{color:"#ccc"}},axisLabel:{color:"#666",margin:10}},yAxis:{type:"value",axisTick:{show:!1},axisLine:{show:!0,lineStyle:{color:"#ccc"}},axisLabel:{color:"#666",margin:10},splitLine:{lineStyle:{color:"#eee",type:"dashed"}}},series:[{name:"销量",type:"line",smooth:!0,showSymbol:!1,lineStyle:{color:"#ffa000",opacity:1,width:1},areaStyle:{color:new o["graphic"].LinearGradient(0,0,0,1,[{offset:0,color:"#fff"},{offset:1,color:"#ffa000"}]),opacity:.2},data:this.echdata.yData}],animationDuration:1e3,animationEasing:"cubicOut"};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},c=l,d=(e("62eb"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"20805038",null);t["default"]=h.exports},"62eb":function(n,t,e){"use strict";e("b469")},"653c":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    yData: [150, 230, 224, 218, 135, 147, 260]\n  };\n  //tag1-end\n  //tag1B-start\n  const defaultTitle = '标题';\n  //tag1B-end\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: defaultTitle\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        var option = {\n          title: {\n            text: '折线图', // 标题文本\n            left: 'center', // 标题位置居中\n            textStyle: {\n              // 标题字体样式\n              fontWeight: 'bold',\n              fontSize: 20\n            }\n          },\n          tooltip: {\n            trigger: 'axis', // 鼠标悬浮提示类型为折线图\n            axisPointer: {\n              // 坐标轴指示器配置\n              type: 'line', // 指示器类型为线\n              lineStyle: {\n                color: '#ccc'\n              },\n              label: {\n                backgroundColor: '#ccc'\n              }\n            }\n          },\n          legend: {\n            data: ['销量'], // 图例为“销量”\n            textStyle: {\n              // 图例字体样式\n              fontSize: 16\n            }\n          },\n          xAxis: {\n            name: '日期', // X轴名称\n            type: 'category', // X轴类型为类别型\n            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'], // X轴数据\n            axisLine: {\n              // X轴轴线样式\n              lineStyle: {\n                color: '#999'\n              }\n            },\n            axisLabel: {\n              // X轴刻度标签样式\n              fontSize: 14,\n              color: '#666'\n            }\n          },\n          yAxis: {\n            name: '销量（万）', // Y轴名称\n            type: 'value', // Y轴类型为数值型\n            axisLine: {\n              // Y轴轴线样式\n              lineStyle: {\n                color: '#999'\n              }\n            },\n            axisLabel: {\n              // Y轴刻度标签样式\n              fontSize: 14,\n              color: '#666'\n            },\n            splitLine: {\n              // 分隔线样式\n              lineStyle: {\n                color: ['#ccc'],\n                type: 'dashed'\n              }\n            }\n          },\n          series: [\n            {\n              name: '销量', // 数据系列名称\n              type: 'line', // 图表类型为折线图\n              data: [5, 20, 36, 10, 10, 20, 15], // 数据\n              symbolSize: 10, // 数据节点大小\n              itemStyle: {\n                // 数据节点样式\n                color: '#0077FF'\n              },\n              lineStyle: {\n                // 折线样式\n                color: '#0077FF',\n                width: 2\n              },\n              areaStyle: {\n                // 区域填充样式\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    {\n                      offset: 0,\n                      color: 'rgba(0, 119, 255, 0.5)'\n                    },\n                    {\n                      offset: 1,\n                      color: 'rgba(255, 255, 255, 0.5)'\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        };\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"6eeb":function(n,t,e){"use strict";e("c165")},"72e3":function(n,t,e){"use strict";e("c7b9")},"76ce":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['Mon', 'Tue', 'Wed', 'Thu'],\n    yData: [150, 230, 224, 218, 135, 147, 260]\n  };\n  //tag1-end\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const option = {\n          grid: {\n            top: 30,\n            bottom: 0,\n            left: 0,\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              data: this.echdata.yData,\n              type: 'line'\n            }\n          ]\n        };\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},7911:function(n,t,e){},8035:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    yData: [150, 230, 224, 218, 135, 147, 260]\n  };\n  //tag1-end\n  //tag1B-start\n  const defaultTitle = '标题';\n  //tag1B-end\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: defaultTitle\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const option = {\n          grid: {\n            top: 10,\n            bottom: 0,\n            left: 0,\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              data: this.echdata.yData,\n              type: 'line'\n            }\n          ]\n        };\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"8a57":function(n,t,e){},"8a8f":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"page"},[n._m(0),t("section",{staticClass:"units-box"},[t("ul",{staticClass:"unit-list"},n._l(n.dynamicComponents_A,(function(e,a){return t("li",{key:a+"A",staticClass:"unit-item",attrs:{id:"itemCls"+a}},[t("div",{staticClass:"theUnit"},[t(n.dynamicComponents_A[a],{tag:"component"})],1),t("div",{staticClass:"btnBlock"},[t("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(t){return n.onHandleItem("LineA"+(a+1))}}}),t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles["LineA"+(a+1)],expression:"vueFiles[`LineA${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),t("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(t){return n.onPreview("LineA"+(a+1))}}})])])})),0)]),n._m(1),t("section",{staticClass:"units-box"},[t("ul",{staticClass:"unit-list"},n._l(n.dynamicComponents_B,(function(e,a){return t("li",{key:a+"B",staticClass:"unit-item",attrs:{id:"itemCls"+a}},[t("div",{staticClass:"theUnit"},[t(n.dynamicComponents_B[a],{tag:"component"})],1),t("div",{staticClass:"btnBlock"},[t("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(t){return n.onHandleItem("LineB"+(a+1))}}}),t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles["LineA"+(a+1)],expression:"vueFiles[`LineA${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),t("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(t){return n.onPreview("LineB"+(a+1))}}})])])})),0)]),n.isShowFullCode?t("FullScreenCodeNew",{attrs:{isshow:n.isShowFullCode,codecontent:n.codecontent},on:{"update:isshow":function(t){n.isShowFullCode=t},"update:codecontent":function(t){n.codecontent=t}}}):n._e(),n.isShowFullPreview?t("FullScreenPreview",{attrs:{isshow:n.isShowFullPreview},on:{"update:isshow":function(t){n.isShowFullPreview=t}}},[t(n.previewEchart,{tag:"component"}),t("template",{slot:"btn"},[t("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles[""+n.previewEchart],expression:"vueFiles[`${previewEchart}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"btnicon"},[n._v("复制")])])],2):n._e()],1)},i=[function(){var n=this,t=n._self._c;return t("div",{staticClass:"header"},[t("h3",{staticClass:"title"},[n._v("折线图·基础")])])},function(){var n=this,t=n._self._c;return t("div",{staticClass:"header"},[t("h3",{staticClass:"title"},[n._v("折线图·基础")])])}],o=(e("14d9"),e("2b0e")),r=e("00e9"),s=e("5ce8"),l=e("3dfd");let c={},d=[];function h(){const n=e("c342");n.keys().forEach(t=>{const a=n(t),i=t.replace(/^\.\//,"").replace(/\.vue$/,"");o["a"].component(i,a.default||a);const r=t.replace(/\.\//,""),s=e("cb4e")("./"+r),l=r.replace(".vue","");c[l]=s.default,d.push(l)})}h();const u=e("5ce8");var p={data(){return{isShowFullCode:!1,isShowFullPreview:!1,previewEchart:"",codecontent:"hello world",vueFiles:{},dynamicComponents_A:["LineA1","LineA2"],dynamicComponents_B:["LineB1"],dynamicComponents_C:["LineC1"],dynamicComponents_D:["LineD1"],dynamicComponents:["LineA1","LineA2"]}},components:{},mounted(){this.vueFiles=c,this.dynamicComponents_A=d.filter(n=>n.includes("A")),this.dynamicComponents_B=d.filter(n=>n.includes("B")),this.dynamicComponents_C=d.filter(n=>n.includes("C")),this.dynamicComponents_C=d.filter(n=>n.includes("C"))},methods:{onHandleItem(n){this.isShowFullCode=!0,this.codecontent=c[n]},clipboardSuccess(){Object(r["a"])()},onPreview(n){this.isShowFullPreview=!0,this.previewEchart=n},onTest(n){console.log("compiler",u);const{render:t,staticRenderFns:e}=Object(s["compile"])(c[n]);new o["a"]({el:"#app",render:n=>n(l["a"],{render:t,staticRenderFns:e})})}}},f=p,y=(e("1a34"),e("2877")),g=Object(y["a"])(f,a,i,!1,null,"05ee72e6",null);t["default"]=g.exports},9496:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],yData:[150,230,224,218,135,147,260]},s="标题";var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},watch:{echdata:{handler(n,t){this.initEchart()}}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));const t={grid:{top:10,bottom:0,left:0,containLabel:!0},xAxis:{type:"category",data:this.echdata.xData},yAxis:{type:"value"},series:[{data:this.echdata.yData,type:"line"}]};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},c=l,d=(e("bb34"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"32af1812",null);t["default"]=h.exports},"97c1":function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    yData: [150, 230, 224, 218, 135, 147, 260]\n  };\n  //tag1-end\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const option = {\n          grid: {\n            top: 30,\n            bottom: 0,\n            left: 0,\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              data: this.echdata.yData,\n              type: 'line'\n            }\n          ]\n        };\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"985c":function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],yData:[150,230,224,218,135,147,260]};var s={props:{echdata:{type:[Object,Array],default:()=>r}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));const t={grid:{top:30,bottom:0,left:0,containLabel:!0},xAxis:{type:"category",data:this.echdata.xData},yAxis:{type:"value"},series:[{data:this.echdata.yData,type:"line"}]};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(e("f4c6"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"6758a490",null);t["default"]=d.exports},a785:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['1月', '2月', '3月', '4月', '5月', '6月'],\n    yData: [5, 20, 36, 10, 10, 20]\n  };\n  //tag1-end\n  //tag1B-start\n  const defaultTitle = '标题';\n  //tag1B-end\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: defaultTitle\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        // 折线图配置\n        let option = {\n          // 头部标题\n          title: {\n            text: 'ECharts 折线图',\n            textStyle: {\n              color: '#2992ff', // 文字颜色\n              fontSize: 14, // 文字字号\n              fontWeight: 'bold' // 文字加粗\n            },\n            left: 'center' // 标题位置\n          },\n\n          // 提示框组件\n          tooltip: {\n            trigger: 'axis', // 提示框触发源，坐标轴触发\n            axisPointer: {\n              // 坐标轴指示器\n              type: 'cross' // 十字准星指示器\n            },\n            backgroundColor: '#fff', // 提示框背景色\n            borderColor: '#ccc', // 提示框边框颜色\n            padding: 10, // 内边距\n            textStyle: {\n              color: '#333' // 提示框文字颜色\n            },\n            extraCssText: 'box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);' // 提示框阴影样式\n          },\n\n          // 图例组件\n          legend: {\n            data: ['销量'],\n            textStyle: {\n              color: '#999' // 图例文字颜色\n            },\n            right: '2%', // 图例距离容器右侧的距离\n            top: '5%', // 图例距离容器顶部的距离\n            itemGap: 20 // 图例项之间的距离\n          },\n\n          // 网格组件\n          grid: {\n            top: 50,\n            left: '3%', // 网格左侧的距离\n            right: '4%', // 网格右侧的距离\n            bottom: '10%', // 网格底部的距离\n            containLabel: true // 包含坐标轴标签的网格区域\n          },\n\n          // X轴\n          xAxis: {\n            type: 'category', // 类目轴，适用于离散数据\n            data: this.echdata.xData,\n            axisTick: {\n              // 坐标轴刻度\n              show: false // 不显示坐标轴刻度\n            },\n            axisLine: {\n              // 坐标轴线\n              lineStyle: {\n                color: '#ccc' // 坐标轴颜色\n              }\n            },\n            axisLabel: {\n              // 坐标轴标签\n              color: '#666', // 坐标轴文字颜色\n              margin: 10 // 坐标轴文字和轴线之间的距离\n            }\n          },\n\n          // Y轴\n          yAxis: {\n            type: 'value', // 数值轴，适用于连续数据\n            axisTick: {\n              show: false // 不显示坐标轴刻度\n            },\n            axisLine: {\n              show: true,\n              // 坐标轴线\n              lineStyle: {\n                color: '#ccc'\n              }\n            },\n            axisLabel: {\n              // 坐标轴标签\n              color: '#666',\n              margin: 10\n            },\n            splitLine: {\n              // Y轴网格线\n              lineStyle: {\n                color: '#eee',\n                type: 'dashed' // 虚线\n              }\n            }\n          },\n\n          // 数据系列\n          series: [\n            {\n              name: '销量',\n              type: 'line',\n              smooth: true, // 平滑曲线\n              showSymbol: false, // 不显示节点图案\n              lineStyle: {\n                color: '#ffa000', // 折线颜色\n                opacity: 1, // 折线透明度\n                width: 1 // 折 线线宽度\n              },\n              areaStyle: {\n                // 折线下方的填充区域\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    // 线性渐变\n                    offset: 0,\n                    color: '#fff' // 渐变起始颜色\n                  },\n                  {\n                    offset: 1,\n                    color: '#ffa000' // 渐变终止颜色\n                  }\n                ]),\n                opacity: 0.2 // 填充区域透明度\n              },\n              data: this.echdata.yData // 数据\n            }\n          ],\n\n          // 动画效果\n          animationDuration: 1000, // 动画持续时间\n          animationEasing: 'cubicOut' // 动画效果，缓入缓出 cubicIn-out\n        };\n        //\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},acfe:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["3月","4月","5月","6月","7月","8月"],yData1:[31865,24684,19010,22136,18684,7130],yData2:[11934,12158,10809,13562,13035,5019],yData3:[917,543,340,102,187,32]},s="标题";var l={name:"",components:{},props:{echdata:{type:Object,default:()=>r},titleText:{type:String,default:s}},data(){return{eleId:"echartsLine"+Number(Math.random().toString().substr(3,3)+Date.now()).toString(36)}},watch:{echdata:{handler:function(){this.initEchart()},deep:!0}},created(){},mounted(){this.$echarts=o,this.$nextTick((function(){this.initEchart()}))},methods:{initEchart(){var n={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:12},icon:"roundRect",itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:18},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"3%",bottom:"10",top:"40",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"#fff",fontSize:13,interval:0},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"#fff",fontSize:13,fontWeight:400},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1}}],series:[{name:"岗位推荐人次数",type:"line",smooth:!0,showAllSymbol:!0,symbol:"circle",symbolSize:8,color:"#10D6FE",lineStyle:{width:1},label:{show:!0},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(2, 251, 189, .2)"},{offset:1,color:"rgba(2, 251, 189, 0)"}],globalCoord:!1}},itemStyle:{normal:{label:{show:!0,textStyle:{fontSize:13,fontWeight:600}}}},data:this.echdata.yData1},{name:"职业指导人次数",type:"line",smooth:!0,showAllSymbol:!0,symbol:"circle",symbolSize:8,color:"#E7E626",lineStyle:{width:1},label:{show:!0},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(254, 204, 62, .2)"},{offset:1,color:"rgba(254, 204, 62, 0)"}],globalCoord:!1}},itemStyle:{normal:{label:{show:!0,textStyle:{fontSize:13,fontWeight:600}}}},data:this.echdata.yData2},{name:"职业培训人次数",type:"line",smooth:!0,showAllSymbol:!0,symbol:"circle",symbolSize:8,color:"#9599e2",lineStyle:{width:1},label:{show:!0},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(2, 21, 189, .2)"},{offset:1,color:"rgba(2, 21, 189, 0)"}],globalCoord:!1}},itemStyle:{normal:{label:{show:!0,textStyle:{fontSize:13,fontWeight:600}}}},data:this.echdata.yData3}]};let t=o["init"](document.getElementById(this.eleId));t.setOption(n,!0),window.addEventListener("resize",()=>{t.resize()})}}},c=l,d=(e("0346"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"19ec4e52",null);t["default"]=h.exports},ae62:function(n,t,e){},aec5:function(n,t,e){"use strict";e("df3f")},b469:function(n,t,e){},bb34:function(n,t,e){"use strict";e("ecc2")},bb42:function(n,t,e){"use strict";e("4197")},be95:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["2016","2017","2018","2019","2020"],yData:[820,732,701,634,590,330,220]};var s={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));const t={tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{left:"0",right:"10",top:"30",bottom:"0",containLabel:!0},xAxis:[{type:"category",data:this.echdata.xData,axisLabel:{interval:0,fontSize:13,margin:10,textStyle:{color:"#96C2FF"}},axisLine:{show:!0,lineStyle:{color:"#2B9DF2"}}}],yAxis:[{type:"value",name:"(万人)",min:0,max:1e3,splitNumber:6,nameLocation:"end",nameTextStyle:{fontSize:12,color:"#FDFEFF",padding:[0,0,0,-40]},splitLine:{show:!1},axisTick:{show:!1},splitArea:{show:!1},axisLabel:{fontSize:13,textStyle:{color:"#96C2FF"}}}],series:[{data:this.echdata.yData,type:"line",color:"#12876c",symbolSize:4,smooth:!1,lineStyle:{width:1,type:"solid"}}]};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(e("5ddf"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"cff5c318",null);t["default"]=d.exports},c165:function(n,t,e){},c342:function(n,t,e){var a={"./LineA1.vue":"9496","./LineA2.vue":"be95","./LineA3.vue":"3fee","./LineA4.vue":"619a","./LineA5.vue":"e45c","./LineA6.vue":"2032","./LineA7.vue":"28b6","./LineA8.vue":"0799","./LineB1.vue":"5b1d","./LineB2.vue":"acfe","./LineB3.vue":"c79c","./LineB4.vue":"341a","./LineB5.vue":"985c","./LineB6.vue":"3ff8"};function i(n){var t=o(n);return e(t)}function o(n){if(!e.o(a,n)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return a[n]}i.keys=function(){return Object.keys(a)},i.resolve=o,n.exports=i,i.id="c342"},c79c:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["Mon","Tue","Wed","Thu"],yData:[150,230,224,218,135,147,260]};var s={props:{echdata:{type:[Object,Array],default:()=>r}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId));const t={grid:{top:30,bottom:0,left:0,containLabel:!0},xAxis:{type:"category",data:this.echdata.xData},yAxis:{type:"value"},series:[{data:this.echdata.yData,type:"line"}]};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(e("56d1"),e("2877")),d=Object(c["a"])(l,a,i,!1,null,"e4bb8bba",null);t["default"]=d.exports},c7b9:function(n,t,e){},cb43:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['1月', '2月', '3月', '4月', '5月', '6月'],\n    yData: [5, 20, 36, 10, 10, 20]\n  };\n  //tag1-end\n  //tag1B-start\n  const defaultTitle = '标题';\n  //tag1B-end\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: defaultTitle\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        // 折线图配置\n        let option = {\n          // 头部标题\n          title: {\n            text: 'ECharts 折线图',\n            textStyle: {\n              color: '#333', // 文字颜色\n              fontSize: 16, // 文字字号\n              fontWeight: 'bold' // 文字加粗\n            },\n            left: 'center' // 标题位置\n          },\n\n          // 提示框组件\n          tooltip: {\n            trigger: 'axis', // 提示框触发源，坐标轴触发\n            axisPointer: {\n              // 坐标轴指示器\n              type: 'cross' // 十字准星指示器\n            },\n            backgroundColor: '#fff', // 提示框背景色\n            borderColor: '#ccc', // 提示框边框颜色\n            padding: 10, // 内边距\n            textStyle: {\n              color: '#333' // 提示框文字颜色\n            },\n            extraCssText: 'box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);', // 提示框阴影样式\n            formatter: function(params) {\n              // 提示框内容\n              let str = `销量：${params[0].data}万`;\n              return str;\n            }\n          },\n\n          // 图例组件\n          legend: {\n            data: ['销量'],\n            textStyle: {\n              color: '#999' // 图例文字颜色\n            },\n            right: '2%', // 图例距离容器右侧的距离\n            top: '5%', // 图例距离容器顶部的距离\n            itemGap: 20 // 图例项之间的距离\n          },\n\n          // 网格组件\n          grid: {\n            left: '3%', // 网格左侧的距离\n            right: '4%', // 网格右侧的距离\n            bottom: '10%', // 网格底部的距离\n            containLabel: true // 包含坐标轴标签的网格区域\n          },\n\n          // X轴\n          xAxis: {\n            type: 'category', // 类目轴，适用于离散数据\n            data: this.echdata.xData,\n            axisTick: {\n              // 坐标轴刻度\n              show: false // 不显示坐标轴刻度\n            },\n            axisLine: {\n              // 坐标轴线\n              lineStyle: {\n                color: '#ccc' // 坐标轴颜色\n              }\n            },\n            axisLabel: {\n              // 坐标轴标签\n              color: '#666', // 坐标轴文字颜色\n              margin: 10 // 坐标轴文字和轴线之间的距离\n            }\n          },\n\n          // Y轴\n          yAxis: {\n            type: 'value', // 数值轴，适用于连续数据\n            axisTick: {\n              show: false // 不显示坐标轴刻度\n            },\n            axisLine: {\n              lineStyle: {\n                color: '#ccc'\n              }\n            },\n            axisLabel: {\n              color: '#666',\n              margin: 10\n            },\n            splitLine: {\n              // Y轴网格线\n              lineStyle: {\n                color: '#eee',\n                type: 'dashed' // 虚线\n              }\n            }\n          },\n\n          // 数据系列\n          series: [\n            {\n              name: '销量',\n              type: 'line',\n              smooth: true, // 平滑曲线\n              showSymbol: false, // 不显示节点图案\n              lineStyle: {\n                color: '#ffa000',\n                width: 2 // 折线线宽度\n              },\n              areaStyle: {\n                // 折线下方填充区域\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: '#fff'\n                  },\n                  {\n                    offset: 1,\n                    color: '#ffa000'\n                  }\n                ]),\n                opacity: 0.2\n              },\n              data: this.echdata.yData\n            }\n          ],\n\n          // 工具箱\n          toolbox: {\n            feature: {\n              dataView: {\n                // 数据视图\n                show: true, // 显示数据视图\n                readOnly: false // 可编辑\n              },\n              saveAsImage: {\n                // 保存为图片\n                show: true // 显示保存为图片\n              },\n              restore: {\n                // 重置\n                show: true // 显示重置\n              },\n              magicType: {\n                // 图表类型转换\n                type: ['line', 'bar'] // 可选折线图、柱状图\n              }\n            },\n            right: '5%', // 工具箱距离容器右侧的距离\n            top: '5%' // 工具箱距离容器顶部的距离\n          },\n\n          // 视觉映射组件\n          visualMap: {\n            type: 'piecewise', // 分块型视觉映射组件\n            pieces: [\n              {\n                gt: 0,\n                lte: 10,\n                color: '#d94e5d' // 红色\n              },\n              {\n                gt: 10,\n                lte: 20,\n                color: '#eac736' // 黄色\n              },\n              {\n                gt: 20,\n                lte: 30,\n                color: '#50a3ba' // 蓝色\n              },\n              {\n                gt: 30,\n                color: '#32c5e9' // 深蓝色\n              }\n            ],\n            outOfRange: {\n              color: '#999' // 超出映射范围的颜色\n            },\n            right: '5%', // 视觉映射组件距离容器右侧的距离\n            bottom: '5%', // 视觉映射组件距离容器底部的距离\n            orient: 'horizontal' // 视觉映射组件方向设置\n          },\n\n          // 数据缩放组件\n          // dataZoom: {\n          //   type: 'slider', // 滑动条型数据缩放组\n          //   start: 0, // 数据窗口的起始位置\n          //   end: 100, // 数据窗口的结束位置\n          //   bottom: '2%', // 数据缩放组件距离容器底部的距离\n          //   handleIcon: 'M0,0 v9.7h5 v-9.7z', // 缩放手柄图标\n          //   handleSize: '80%', // 缩放手柄大小\n          //   handleStyle: {\n          //     // 缩放手柄样式\n          //     color: '#ddd'\n          //   },\n          //   backgroundColor: '#f7f7f7', // 滑动条背景色\n          //   fillerColor: '#ddd', // 滑动条填充色\n          //   borderColor: '#eee' // 滑动条边框颜色\n          // },\n\n          // 动画效果配置\n          animationDuration: 1000,\n          animationEasing: 'cubicOut'\n        };\n        // ................\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},cb4e:function(n,t,e){var a={"./LineA1":"1fcd","./LineA1.vue":"1fcd","./LineA2":"e8b8","./LineA2.vue":"e8b8","./LineA3":"1e13","./LineA3.vue":"1e13","./LineA4":"a785","./LineA4.vue":"a785","./LineA5":"cb43","./LineA5.vue":"cb43","./LineA6":"8035","./LineA6.vue":"8035","./LineA7":"518e","./LineA7.vue":"518e","./LineA8":"653c","./LineA8.vue":"653c","./LineB1":"580e","./LineB1.vue":"580e","./LineB2":"d032","./LineB2.vue":"d032","./LineB3":"76ce","./LineB3.vue":"76ce","./LineB4":"97c1","./LineB4.vue":"97c1","./LineB5":"2ce4","./LineB5.vue":"2ce4","./LineB6":"034d","./LineB6.vue":"034d"};function i(n){var t=o(n);return e(t)}function o(n){if(!e.o(a,n)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return a[n]}i.keys=function(){return Object.keys(a)},i.resolve=o,n.exports=i,i.id="cb4e"},d032:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\" />\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  //tag1-start\n  const defaultEchdata = {\n    xData: ['3月', '4月', '5月', '6月', '7月', '8月'],\n    yData1: [31865, 24684, 19010, 22136, 18684, 7130],\n    yData2: [11934, 12158, 10809, 13562, 13035, 5019],\n    yData3: [917, 543, 340, 102, 187, 32]\n  };\n  //tag1-end\n  //tag1B-start\n  const defaultTitle = '标题';\n  //tag1B-end\n  export default {\n    name: '',\n    components: {},\n    props: {\n      echdata: {\n        type: Object,\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: defaultTitle\n      }\n    },\n    data() {\n      return {\n        eleId: `echartsLine${Number(\n          Math.random()\n            .toString()\n            .substr(3, 3) + Date.now()\n        ).toString(36)}`\n      };\n    },\n    watch: {\n      echdata: {\n        handler: function() {\n          this.initEchart();\n        },\n        deep: true\n      }\n    },\n    created() {},\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(function() {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n\n        var option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          legend: {\n            // 图例组件，颜色和名字\n            top: 0,\n            right: 0,\n            textStyle: {\n              color: 'rgba(255, 255, 255, .5)',\n              fontSize: 12\n            },\n            icon: 'roundRect',\n            itemWidth: 16,\n            itemHeight: 10,\n            itemGap: 5\n          },\n          tooltip: {\n            trigger: 'axis',\n            backgroundColor: 'rgba(0, 0, 0, .8)',\n            borderColor: 'rgba(0, 0, 0, .8)',\n            textStyle: {\n              color: '#fff',\n              fontSize: 18\n            },\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: [\n            {\n              left: '3%',\n              right: '3%',\n              bottom: '10',\n              top: '40',\n              containLabel: true\n            }\n          ],\n          xAxis: {\n            type: 'category',\n            axisLabel: {\n              // color: 'rgba(255, 255, 255, .7)',\n              color: '#fff', // 字体颜色\n              fontSize: 13,\n              interval: 0\n            },\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(209, 209, 209, .3)'\n              }\n            },\n            data: this.echdata.xData\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '',\n              axisLabel: {\n                // color: 'rgba(255, 255, 255, .7)',\n                color: '#fff', // 字体颜色\n                fontSize: 13,\n                fontWeight: 400\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: 'rgba(209, 209, 209, .3)'\n                }\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '岗位推荐人次数',\n              type: 'line',\n              smooth: true,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 8,\n              color: '#10D6FE',\n              lineStyle: {\n                width: 1\n                // type: 'dashed'\n              },\n              label: { show: true },\n              areaStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\n                  ],\n                  globalCoord: false\n                }\n              },\n              itemStyle: {\n                normal: {\n                  label: {\n                    show: true,\n                    textStyle: {\n                      fontSize: 13,\n                      fontWeight: 600\n                    }\n                  }\n                }\n              },\n              data: this.echdata.yData1\n            },\n            {\n              name: '职业指导人次数',\n              type: 'line',\n              smooth: true,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 8,\n              color: '#E7E626',\n              lineStyle: {\n                width: 1\n                // type: 'dashed'\n              },\n              label: { show: true },\n              areaStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    { offset: 0, color: 'rgba(254, 204, 62, .2)' },\n                    { offset: 1, color: 'rgba(254, 204, 62, 0)' }\n                  ],\n                  globalCoord: false\n                }\n              },\n              itemStyle: {\n                normal: {\n                  label: {\n                    show: true,\n                    textStyle: {\n                      fontSize: 13,\n                      fontWeight: 600\n                    }\n                  }\n                }\n              },\n              data: this.echdata.yData2\n            },\n            {\n              name: '职业培训人次数',\n              type: 'line',\n              smooth: true,\n              showAllSymbol: true,\n              symbol: 'circle',\n              symbolSize: 8,\n              // color: '#5470c6',\n              color: '#9599e2',\n              lineStyle: {\n                width: 1\n                // type: 'dashed'\n              },\n              label: { show: true },\n              areaStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    { offset: 0, color: 'rgba(2, 21, 189, .2)' },\n                    { offset: 1, color: 'rgba(2, 21, 189, 0)' }\n                  ],\n                  globalCoord: false\n                }\n              },\n              itemStyle: {\n                normal: {\n                  label: {\n                    show: true,\n                    textStyle: {\n                      fontSize: 13,\n                      fontWeight: 600\n                    }\n                  }\n                }\n              },\n              data: this.echdata.yData3\n            }\n          ]\n        };\n        //\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option, true);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},d29f:function(n,t,e){},df3f:function(n,t,e){},e45c:function(n,t,e){"use strict";e.r(t);var a=function(){var n=this,t=n._self._c;return t("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},i=[],o=e("313e");const r={xData:["1月","2月","3月","4月","5月","6月"],yData:[5,20,36,10,10,20]},s="标题";var l={props:{echdata:{type:[Object,Array],default:()=>r},titleText:{type:String,default:s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=o["init"](document.getElementById(this.eleId)),t={title:{text:"ECharts 折线图",textStyle:{color:"#333",fontSize:16,fontWeight:"bold"},left:"center"},tooltip:{trigger:"axis",axisPointer:{type:"cross"},backgroundColor:"#fff",borderColor:"#ccc",padding:10,textStyle:{color:"#333"},extraCssText:"box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);",formatter:function(n){let t=`销量：${n[0].data}万`;return t}},legend:{data:["销量"],textStyle:{color:"#999"},right:"2%",top:"5%",itemGap:20},grid:{left:"3%",right:"4%",bottom:"10%",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisTick:{show:!1},axisLine:{lineStyle:{color:"#ccc"}},axisLabel:{color:"#666",margin:10}},yAxis:{type:"value",axisTick:{show:!1},axisLine:{lineStyle:{color:"#ccc"}},axisLabel:{color:"#666",margin:10},splitLine:{lineStyle:{color:"#eee",type:"dashed"}}},series:[{name:"销量",type:"line",smooth:!0,showSymbol:!1,lineStyle:{color:"#ffa000",width:2},areaStyle:{color:new o["graphic"].LinearGradient(0,0,0,1,[{offset:0,color:"#fff"},{offset:1,color:"#ffa000"}]),opacity:.2},data:this.echdata.yData}],toolbox:{feature:{dataView:{show:!0,readOnly:!1},saveAsImage:{show:!0},restore:{show:!0},magicType:{type:["line","bar"]}},right:"5%",top:"5%"},visualMap:{type:"piecewise",pieces:[{gt:0,lte:10,color:"#d94e5d"},{gt:10,lte:20,color:"#eac736"},{gt:20,lte:30,color:"#50a3ba"},{gt:30,color:"#32c5e9"}],outOfRange:{color:"#999"},right:"5%",bottom:"5%",orient:"horizontal"},animationDuration:1e3,animationEasing:"cubicOut"};n.setOption(t),window.addEventListener("resize",()=>{n.resize()})}}},c=l,d=(e("5d90"),e("2877")),h=Object(d["a"])(c,a,i,!1,null,"29eece5c",null);t["default"]=h.exports},e8b8:function(n,t,e){"use strict";e.r(t),t["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\"></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  const defaultEchdata = {\n    xData: ['2016', '2017', '2018', '2019', '2020'],\n    yData: [820, 732, 701, 634, 590, 330, 220]\n  };\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        //tag2-start\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        const option = {\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n          grid: {\n            left: '0',\n            right: '10',\n            top: '30',\n            bottom: '0',\n            containLabel: true\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: this.echdata.xData,\n              axisLabel: {\n                interval: 0,\n                fontSize: 13,\n                margin: 10,\n                textStyle: {\n                  color: '#96C2FF'\n                }\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: '#2B9DF2'\n                }\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value',\n              name: '(万人)',\n              min: 0,\n              max: 1000,\n              splitNumber: 6,\n              nameLocation: 'end',\n              nameTextStyle: {\n                fontSize: 12,\n                color: '#FDFEFF',\n                padding: [0, 0, 0, -40]\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              splitArea: {\n                show: false\n              },\n              axisLabel: {\n                fontSize: 13,\n                textStyle: {\n                  color: '#96C2FF' // 坐标值得具体的颜色\n                }\n              }\n            }\n          ],\n          series: [\n            {\n              data: this.echdata.yData,\n              type: 'line',\n              color: '#12876c',\n              symbolSize: 4,\n              smooth: false,\n              lineStyle: {\n                width: 1,\n                type: 'solid'\n              }\n            }\n          ]\n        };\n        echartEle.setOption(option);\n        // 实时缩放\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n        //tag2-end\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},ecc2:function(n,t,e){},f4c6:function(n,t,e){"use strict";e("d29f")},f6b0:function(n,t,e){"use strict";e("ae62")},fa6b:function(n,t,e){"use strict";e("3711")},faf8:function(n,t,e){"use strict";e("45ea")}}]);
//# sourceMappingURL=chunk-4c5366b4.b3f94019.js.map