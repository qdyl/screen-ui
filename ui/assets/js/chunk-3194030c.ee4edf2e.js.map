{"version":3,"sources":["webpack:///./src/views/EchartUnit/Bar/components/BarC3.vue","webpack:///src/views/EchartUnit/Bar/components/BarC3.vue","webpack:///./src/views/EchartUnit/Bar/components/BarC3.vue?6c11","webpack:///./src/views/EchartUnit/Bar/components/BarC3.vue?93b7","webpack:///./src/views/EchartUnit/Bar/components/BarA2.vue?0570","webpack:///./src/views/EchartUnit/Bar/components/BarA1.vue?dd62","webpack:///./src/views/EchartUnit/Bar/components/BarA3.vue?aa19","webpack:///./src/views/EchartUnit/Bar/components/BarA4.vue?0c6a","webpack:///./src/views/EchartUnit/Bar/components/BarB3.vue?0d59","webpack:///./src/views/EchartUnit/Bar/components/BarC1.vue","webpack:///src/views/EchartUnit/Bar/components/BarC1.vue","webpack:///./src/views/EchartUnit/Bar/components/BarC1.vue?c38d","webpack:///./src/views/EchartUnit/Bar/components/BarC1.vue?8844","webpack:///./src/views/EchartUnit/Bar/components sync \\.vue$","webpack:///./src/views/EchartUnit/Bar/components/BarB2.vue","webpack:///src/views/EchartUnit/Bar/components/BarB2.vue","webpack:///./src/views/EchartUnit/Bar/components/BarB2.vue?ee52","webpack:///./src/views/EchartUnit/Bar/components/BarB2.vue?4f65","webpack:///./src/views/EchartUnit/Bar/components/BarC2.vue?20b0","webpack:///./src/views/EchartUnit/Bar/components/BarA5.vue?24c1","webpack:///./src/views/EchartUnit/Bar/components/BarC2.vue?7548","webpack:///./src/views/EchartUnit/Bar/components/BarB4.vue","webpack:///src/views/EchartUnit/Bar/components/BarB4.vue","webpack:///./src/views/EchartUnit/Bar/components/BarB4.vue?6148","webpack:///./src/views/EchartUnit/Bar/components/BarB4.vue?792d","webpack:///./src/views/EchartUnit/Bar/components/BarB1.vue","webpack:///src/views/EchartUnit/Bar/components/BarB1.vue","webpack:///./src/views/EchartUnit/Bar/components/BarB1.vue?51fc","webpack:///./src/views/EchartUnit/Bar/components/BarB1.vue?27eb","webpack:///./src/views/EchartUnit/Bar/components/BarB2.vue?6ea2","webpack:///./src/views/EchartUnit/Bar/components/BarA2.vue?4c47","webpack:///./src/views/EchartUnit/Bar/components/BarA6.vue?921d","webpack:///./src/views/EchartUnit/Bar/components/BarA7.vue","webpack:///src/views/EchartUnit/Bar/components/BarA7.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA7.vue?f7f3","webpack:///./src/views/EchartUnit/Bar/components/BarA7.vue?5818","webpack:///./src/views/EchartUnit/Bar/components/BarA5.vue","webpack:///src/views/EchartUnit/Bar/components/BarA5.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA5.vue?3a29","webpack:///./src/views/EchartUnit/Bar/components/BarA5.vue?9067","webpack:///./src/views/EchartUnit/Bar/components/BarA5.vue?1b3b","webpack:///./src/views/EchartUnit/Bar/components/BarA8.vue?4140","webpack:///./node_modules/raw-loader/dist/cjs.js ^\\.\\/.*$?ecfa","webpack:///./src/views/EchartUnit/Bar/components/BarB1.vue?5075","webpack:///./src/views/EchartUnit/Bar/components/BarA4.vue","webpack:///src/views/EchartUnit/Bar/components/BarA4.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA4.vue?8584","webpack:///./src/views/EchartUnit/Bar/components/BarA4.vue?fe4e","webpack:///./src/views/EchartUnit/Bar/components/BarA3.vue?7456","webpack:///./src/views/EchartUnit/Bar/components/BarC2.vue","webpack:///src/views/EchartUnit/Bar/components/BarC2.vue","webpack:///./src/views/EchartUnit/Bar/components/BarC2.vue?ee4c","webpack:///./src/views/EchartUnit/Bar/components/BarC2.vue?4262","webpack:///./src/views/EchartUnit/Bar/components/BarA1.vue?753c","webpack:///./src/views/EchartUnit/Bar/components/BarB4.vue?80e7","webpack:///./src/views/EchartUnit/Bar/components/BarA7.vue?5aa4","webpack:///./src/views/EchartUnit/Bar/components/BarA4.vue?60fd","webpack:///./src/views/EchartUnit/Bar/index.vue","webpack:///src/views/EchartUnit/Bar/index.vue","webpack:///./src/views/EchartUnit/Bar/index.vue?854a","webpack:///./src/views/EchartUnit/Bar/index.vue?65a1","webpack:///./src/views/EchartUnit/Bar/components/BarB4.vue?9d51","webpack:///./src/views/EchartUnit/Bar/components/BarA3.vue","webpack:///src/views/EchartUnit/Bar/components/BarA3.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA3.vue?e5ad","webpack:///./src/views/EchartUnit/Bar/components/BarA3.vue?ab35","webpack:///./src/views/EchartUnit/Bar/components/BarA2.vue","webpack:///src/views/EchartUnit/Bar/components/BarA2.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA2.vue?a78a","webpack:///./src/views/EchartUnit/Bar/components/BarA2.vue?38e1","webpack:///./src/views/EchartUnit/Bar/index.vue?32cb","webpack:///./src/views/EchartUnit/Bar/components/BarC1.vue?c0ca","webpack:///./src/views/EchartUnit/Bar/components/BarC3.vue?449f","webpack:///./src/views/EchartUnit/Bar/components/BarB1.vue?da60","webpack:///./src/views/EchartUnit/Bar/components/BarB3.vue","webpack:///src/views/EchartUnit/Bar/components/BarB3.vue","webpack:///./src/views/EchartUnit/Bar/components/BarB3.vue?21ca","webpack:///./src/views/EchartUnit/Bar/components/BarB3.vue?07ab","webpack:///./src/views/EchartUnit/Bar/components/BarC3.vue?d1b6","webpack:///./src/views/EchartUnit/Bar/components/BarB3.vue?1506","webpack:///./src/views/EchartUnit/Bar/components/BarA7.vue?d867","webpack:///./src/views/EchartUnit/Bar/components/BarC1.vue?c541","webpack:///./src/views/EchartUnit/Bar/components/BarA8.vue","webpack:///src/views/EchartUnit/Bar/components/BarA8.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA8.vue?2876","webpack:///./src/views/EchartUnit/Bar/components/BarA8.vue?ba6f","webpack:///./src/views/EchartUnit/Bar/components/BarA1.vue","webpack:///src/views/EchartUnit/Bar/components/BarA1.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA1.vue?a4be","webpack:///./src/views/EchartUnit/Bar/components/BarA1.vue?49f6","webpack:///./src/views/EchartUnit/Bar/components/BarA6.vue","webpack:///src/views/EchartUnit/Bar/components/BarA6.vue","webpack:///./src/views/EchartUnit/Bar/components/BarA6.vue?dd6c","webpack:///./src/views/EchartUnit/Bar/components/BarA6.vue?f4be","webpack:///./src/views/EchartUnit/Bar/components/BarB2.vue?fcaf","webpack:///./src/views/EchartUnit/Bar/components/BarA6.vue?fcc8"],"names":["render","_vm","this","_c","_self","staticClass","attrs","eleId","_v","staticRenderFns","defaultEchdata","xData","yData","yData2","defaultSeriesName","props","echdata","type","Object","Array","default","titleText","String","seriesname","data","Math","random","toString","substring","Date","now","chart","mounted","$echarts","echarts","$nextTick","initEchart","methods","option","getOptions","echartEle","document","getElementById","setOption","window","addEventListener","resize","options","title","text","top","left","textStyle","align","color","fontSize","backgroundColor","grid","right","bottom","tooltip","trigger","axisPointer","label","show","legend","xAxis","axisLine","lineStyle","axisTick","axisLabel","yAxis","name","nameTextStyle","splitLine","position","formatter","gridIndex","min","max","splitNumber","splitArea","areaStyle","series","yAxisIndex","smooth","showAllSymbol","symbol","symbolSize","itemStyle","barWidth","normal","LinearGradient","offset","component","yData3","seriesArrData","barBorderRadius","fontWeight","containLabel","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports","infoTip","Number","substr","watch","handler","deep","created","colorList","graphic","inverse","triggerEvent","padding","interval","barGap","item","i","value","z","drainitEchartm","onHanleClick","barMax","x","index","length","slice","d","barBorderColor","barBorderWidth","p","dataIndex","fontColor","init","getZr","on","params","console","log","pointInPixel","offsetX","offsetY","containPixel","xIndex","convertFromPixel","seriesIndex","opacity","alignWithLabel","xAxisIndex","zlevel","totalSum","icon","itemWidth","itemHeight","itemGap","borderColor","rotate","width","percent","toFixed","y","x2","y2","colorStops","globalCoord","directives","rawName","echDefDataA","expression","arg","clipboardSuccess","_l","dynamicComponents_A","key","tag","_s","getInfoTip","vueFiles","$event","onHandleItem","onPreview","echDefDataB","dynamicComponents_B","dynamicComponents_C","isShowFullCode","codecontent","_e","isShowFullPreview","previewEchart","slot","dynamicComponents_All","batchInit","files","require","forEach","fileName","componentConfig","componentName","replace","Vue","_fileName","fileContent","fileKey","push","dynamicComponents_D","dynamicComponents","filter","val","includes","pop","str","vueFileStr","nameRegex","nameMatch","match","nameValue","barMaxWidth","showBackground","backgroundStyle","join","rich","a","seriesBgData","barCategoryGap","distance","staticStyle"],"mappings":"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","file":"assets/js/chunk-3194030c.ee4edf2e.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [4.2, 3.2, 4.8, 3.5],\n    yData2: [4.8, 3.5, 2.9, 2.8, 3, 5]\n  };\n  const defaultSeriesName = ['手机销量', '电脑销量'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        const options = {\n          title: {\n            text: this.titleText,\n            top: 'left',\n            left: 'top',\n            textStyle: {\n              align: 'left',\n              color: '#fff',\n              fontSize: 14\n            }\n          },\n          backgroundColor: '#0f375f',\n          grid: {\n            top: '50px',\n            right: '30px',\n            bottom: '20px' //也可设置left和right设置距离来控制图表的大小\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow',\n              label: {\n                show: true\n              }\n            }\n          },\n          legend: {\n            data: ['手机销量', '笔记本销量'],\n            top: '15%',\n            textStyle: {\n              color: '#ffffff'\n            }\n          },\n          xAxis: {\n            data: this.echdata.xData,\n            axisLine: {\n              show: true, //隐藏X轴轴线\n              lineStyle: {\n                color: '#01FCE3'\n              }\n            },\n            axisTick: {\n              show: true //隐藏X轴刻度\n            },\n            axisLabel: {\n              show: true,\n              textStyle: {\n                // color: '#ebf8ac' //X轴文字颜色\n              }\n            }\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '亿元',\n              nameTextStyle: {\n                color: '#ebf8ac'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: true\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: '#FFFFFF'\n                }\n              },\n              axisLabel: {\n                show: true,\n                textStyle: {\n                  color: '#ebf8ac'\n                }\n              }\n            },\n            {\n              type: 'value',\n              name: '同比',\n              nameTextStyle: {\n                color: '#ebf8ac'\n              },\n              position: 'right',\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLine: {\n                show: false\n              },\n              axisLabel: {\n                show: true,\n                formatter: '{value} %', //右侧Y轴文字显示\n                textStyle: {\n                  color: '#ebf8ac'\n                }\n              }\n            },\n            {\n              type: 'value',\n              gridIndex: 0,\n              min: 50,\n              max: 100,\n              splitNumber: 8,\n              splitLine: {\n                show: false\n              },\n              axisLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                show: false\n              },\n              splitArea: {\n                show: true,\n                areaStyle: {\n                  color: ['rgba(250,250,250,0.0)', 'rgba(250,250,250,0.05)']\n                }\n              }\n            }\n          ],\n          series: [\n            {\n              name: '手机销量',\n              type: 'line',\n              yAxisIndex: 1, //使用的 y 轴的 index，在单个图表实例中存在多个 y轴的时候有用\n              smooth: true, //平滑曲线显示\n              showAllSymbol: true, //显示所有图形。\n              symbol: 'circle', //标记的图形为实心圆\n              symbolSize: 10, //标记的大小\n              itemStyle: {\n                //折线拐点标志的样式\n                color: '#058cff'\n              },\n              lineStyle: {\n                color: '#058cff'\n              },\n              areaStyle: {\n                color: 'rgba(5,140,255, 0.2)'\n              },\n              data: this.echdata.yData\n            },\n            {\n              name: '笔记本销量',\n              type: 'bar',\n              barWidth: 10,\n              itemStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: '#00FFE3'\n                    },\n                    {\n                      offset: 1,\n                      color: '#4693EC'\n                    }\n                  ])\n                }\n              },\n              data: this.echdata.yData2\n            }\n          ]\n        };\n        return options;\n      }\n      //\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC3.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC3.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarC3.vue?vue&type=template&id=0337dc24&scoped=true\"\nimport script from \"./BarC3.vue?vue&type=script&lang=js\"\nexport * from \"./BarC3.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarC3.vue?vue&type=style&index=0&id=0337dc24&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0337dc24\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  import * as echarts from 'echarts';\\r\\n\\r\\n  const defaultEchdata = {\\r\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\r\\n    yData: [101, 202, 303, 404]\\r\\n  };\\r\\n\\r\\n  export default {\\r\\n    props: {\\r\\n      echdata: {\\r\\n        type: [Object, Array],\\r\\n        default: () => defaultEchdata\\r\\n      },\\r\\n      titleText: {\\r\\n        type: String,\\r\\n        default: '标题'\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        eleId: `eleId_${Math.random()\\r\\n          .toString()\\r\\n          .substring(3, 6) + Date.now().toString(36)}`,\\r\\n        chart: null\\r\\n      };\\r\\n    },\\r\\n    mounted() {\\r\\n      this.$echarts = echarts;\\r\\n      this.$nextTick(() => {\\r\\n        this.initEchart();\\r\\n      });\\r\\n    },\\r\\n    methods: {\\r\\n      initEchart() {\\r\\n        var option = {\\r\\n          title: {\\r\\n            text: this.titleText,\\r\\n            // subtext: '2023年6月8日',\\r\\n            // left: 'center',\\r\\n            textStyle: {\\r\\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\\r\\n              fontSize: '14px', // 字体大小\\r\\n              fontWeight: 600 // 字体粗细\\r\\n            }\\r\\n          },\\r\\n          legend: {\\r\\n            // 图例组件，颜色和名字\\r\\n            top: 0,\\r\\n            right: 0,\\r\\n            textStyle: {\\r\\n              color: 'rgba(255, 255, 255, .5)',\\r\\n              fontSize: 14\\r\\n            },\\r\\n            icon: 'roundRect',\\r\\n            itemWidth: 16,\\r\\n            itemHeight: 10,\\r\\n            itemGap: 5\\r\\n          },\\r\\n          tooltip: {\\r\\n            trigger: 'axis',\\r\\n            backgroundColor: 'rgba(0, 0, 0, .8)',\\r\\n            borderColor: 'rgba(0, 0, 0, .8)',\\r\\n            textStyle: {\\r\\n              color: '#fff',\\r\\n              fontSize: 14\\r\\n            },\\r\\n            axisPointer: {\\r\\n              // 坐标轴指示器，坐标轴触发有效\\r\\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\\r\\n            }\\r\\n          },\\r\\n          grid: [\\r\\n            {\\r\\n              left: '3%',\\r\\n              right: '3%',\\r\\n              bottom: '-5',\\r\\n              top: '20%',\\r\\n              containLabel: true\\r\\n            }\\r\\n          ],\\r\\n          xAxis: {\\r\\n            type: 'category',\\r\\n            axisLabel: {\\r\\n              // color: 'red',\\r\\n              color: '#96C2FF',\\r\\n              fontSize: 10,\\r\\n              interval: 0,\\r\\n              rotate: 20\\r\\n            },\\r\\n            axisLine: {\\r\\n              lineStyle: {\\r\\n                color: 'rgba(209, 209, 209, .3)'\\r\\n              }\\r\\n            },\\r\\n            data: this.echdata.xData\\r\\n          },\\r\\n          yAxis: [\\r\\n            {\\r\\n              type: 'value',\\r\\n              name: '',\\r\\n              axisLabel: {\\r\\n                // color: 'red',\\r\\n                color: '#96C2FF',\\r\\n                fontSize: 12,\\r\\n                fontWeight: 100\\r\\n              },\\r\\n              axisLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: 'rgba(209, 209, 209, .3)',\\r\\n                  fontSize: 12\\r\\n                }\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              }\\r\\n            }\\r\\n          ],\\r\\n          series: [\\r\\n            {\\r\\n              name: '数量',\\r\\n              type: 'bar',\\r\\n              smooth: true,\\r\\n              barWidth: 6,\\r\\n              // showAllSymbol: true,\\r\\n              // symbol: 'circle',\\r\\n              // symbolSize: 6,\\r\\n              color: '#10D6FE',\\r\\n              lineStyle: {\\r\\n                width: 1,\\r\\n                type: 'dashed'\\r\\n              },\\r\\n              label: {\\r\\n                show: true,\\r\\n                color: '#fff',\\r\\n                fontSize: '12',\\r\\n                fontWeight: 600,\\r\\n                position: 'top',\\r\\n                formatter: function(params) {\\r\\n                  return params.value + '人';\\r\\n                }\\r\\n              },\\r\\n              areaStyle: {\\r\\n                color: {\\r\\n                  type: 'linear',\\r\\n                  x: 0,\\r\\n                  y: 0,\\r\\n                  x2: 0,\\r\\n                  y2: 1,\\r\\n                  colorStops: [\\r\\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\\r\\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\\r\\n                  ],\\r\\n                  globalCoord: false\\r\\n                }\\r\\n              },\\r\\n              data: this.echdata.yData\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\\r\\n        echartEle.setOption(option, true);\\r\\n        window.addEventListener('resize', () => {\\r\\n          echartEle.resize();\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped>\\r\\n  .echart-unit {\\r\\n    height: 100%;\\r\\n  }\\r\\n</style>\\r\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA1.vue?vue&type=style&index=0&id=76cbb846&prod&lang=scss&scoped=true\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA3.vue?vue&type=style&index=0&id=4bd8d17e&prod&lang=scss&scoped=true\"","export default \"<template>\\r\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  import * as echarts from 'echarts';\\r\\n\\r\\n  const defaultEchdata = {\\r\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\r\\n    yData: [101, 202, 303, 404]\\r\\n  };\\r\\n\\r\\n  export default {\\r\\n    props: {\\r\\n      echdata: {\\r\\n        type: [Object, Array],\\r\\n        default: () => defaultEchdata\\r\\n      },\\r\\n      titleText: {\\r\\n        type: String,\\r\\n        default: '标题'\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        eleId: `eleId_${Math.random()\\r\\n          .toString()\\r\\n          .substring(3, 6) + Date.now().toString(36)}`,\\r\\n        chart: null\\r\\n      };\\r\\n    },\\r\\n    mounted() {\\r\\n      this.$echarts = echarts;\\r\\n      this.$nextTick(() => {\\r\\n        this.initEchart();\\r\\n      });\\r\\n    },\\r\\n    methods: {\\r\\n      initEchart() {\\r\\n        let totalSum = 0; // 总数\\r\\n        for (var i = 0; i < this.echdata.yData.length; i++) {\\r\\n          totalSum += this.echdata.yData[i];\\r\\n        }\\r\\n        var option = {\\r\\n          title: {\\r\\n            text: this.titleText,\\r\\n            top: -4,\\r\\n            textStyle: {\\r\\n              color: '#2B9DF2',\\r\\n              fontSize: 14 // 字体大小\\r\\n              // fontWeight:  // 字体粗细\\r\\n            }\\r\\n          },\\r\\n          legend: {\\r\\n            // 图例组件，颜色和名字\\r\\n            top: 0,\\r\\n            right: 0,\\r\\n            textStyle: {\\r\\n              color: 'rgba(255, 255, 255, .5)',\\r\\n              fontSize: 14\\r\\n            },\\r\\n            icon: 'roundRect',\\r\\n            itemWidth: 16,\\r\\n            itemHeight: 10,\\r\\n            itemGap: 5\\r\\n          },\\r\\n          tooltip: {\\r\\n            trigger: 'axis',\\r\\n            backgroundColor: 'rgba(0, 0, 0, .8)',\\r\\n            borderColor: 'rgba(0, 0, 0, .8)',\\r\\n            textStyle: {\\r\\n              color: '#fff',\\r\\n              fontSize: 14\\r\\n            },\\r\\n            axisPointer: {\\r\\n              // 坐标轴指示器，坐标轴触发有效\\r\\n              type: 'line' // 默认为直线，可选为：'line' | 'shadow'\\r\\n            }\\r\\n            // formatter: function(params) {\\r\\n            //   console.log('鼠标', params);\\r\\n            //   var value = params.value;\\r\\n            //   // var total = params.data.total;\\r\\n            //   var percent = ((value / totalSum) * 100).toFixed(2); // 计算百分比\\r\\n            //   return params.name + ': ' + value + ' (' + percent + '%)'; // 格式化 tooltip 内容\\r\\n            // }\\r\\n            // formatter: '{c}%' // 显示比例（这是关键）\\r\\n            // formatter: `{b}: {c} ({c/${totalSum} * 100}%)`\\r\\n          },\\r\\n          grid: [\\r\\n            {\\r\\n              left: '3%',\\r\\n              right: '3%',\\r\\n              bottom: '-5',\\r\\n              top: '20%',\\r\\n              containLabel: true\\r\\n            }\\r\\n          ],\\r\\n          xAxis: {\\r\\n            type: 'category',\\r\\n            axisLabel: {\\r\\n              // color: 'red',\\r\\n              color: '#96C2FF',\\r\\n              fontSize: 10,\\r\\n              interval: 0,\\r\\n              rotate: 20\\r\\n            },\\r\\n            axisLine: {\\r\\n              lineStyle: {\\r\\n                color: 'rgba(209, 209, 209, .3)'\\r\\n              }\\r\\n            },\\r\\n            data: this.echdata.xData\\r\\n          },\\r\\n          yAxis: [\\r\\n            {\\r\\n              type: 'value',\\r\\n              name: '',\\r\\n              axisLabel: {\\r\\n                // color: 'red',\\r\\n                color: '#96C2FF',\\r\\n                fontSize: 12,\\r\\n                fontWeight: 100\\r\\n              },\\r\\n              axisLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: 'rgba(209, 209, 209, .3)',\\r\\n                  fontSize: 12\\r\\n                }\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              }\\r\\n            }\\r\\n          ],\\r\\n          series: [\\r\\n            {\\r\\n              name: '数量',\\r\\n              type: 'bar',\\r\\n              smooth: true,\\r\\n              barWidth: 6,\\r\\n              showAllSymbol: true,\\r\\n              symbol: 'circle',\\r\\n              symbolSize: 6,\\r\\n              color: '#10D6FE',\\r\\n              lineStyle: {\\r\\n                width: 1,\\r\\n                type: 'dashed'\\r\\n              },\\r\\n              label: {\\r\\n                show: true,\\r\\n                color: '#fff',\\r\\n                fontSize: '12',\\r\\n                fontWeight: 600,\\r\\n                position: 'top',\\r\\n                // formatter: '{b}\\\\n{c}%', // 显示比例（这是关键）\\r\\n                formatter: function(params) {\\r\\n                  // console.log('比例饿', params);\\r\\n                  const percent = ((params.value / totalSum) * 100).toFixed(2) + '%';\\r\\n                  return percent;\\r\\n                }\\r\\n              },\\r\\n              areaStyle: {\\r\\n                color: {\\r\\n                  type: 'linear',\\r\\n                  x: 0,\\r\\n                  y: 0,\\r\\n                  x2: 0,\\r\\n                  y2: 1,\\r\\n                  colorStops: [\\r\\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\\r\\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\\r\\n                  ],\\r\\n                  globalCoord: false\\r\\n                }\\r\\n              },\\r\\n              data: this.echdata.yData\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\\r\\n        echartEle.setOption(option, true);\\r\\n        window.addEventListener('resize', () => {\\r\\n          echartEle.resize();\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped>\\r\\n  .echart-unit {\\r\\n    height: 100%;\\r\\n  }\\r\\n</style>\\r\\n\";","export default \"<template>\\r\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\" />\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  import * as echarts from 'echarts';\\r\\n\\r\\n  const defaultEchdata = {\\r\\n    xData: [5, 75, 115, 52.65, 25.75],\\r\\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\\r\\n  };\\r\\n\\r\\n  export default {\\r\\n    infoTip: '',\\r\\n    name: '',\\r\\n    props: {\\r\\n      echdata: {\\r\\n        type: [Object, Array],\\r\\n        default: () => defaultEchdata\\r\\n      },\\r\\n      titleText: {\\r\\n        type: String,\\r\\n        default: '年龄分布(单位：万人)'\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        eleId: `eleId_${Math.random()\\r\\n          .toString()\\r\\n          .substring(3, 6) + Date.now().toString(36)}`\\r\\n      };\\r\\n    },\\r\\n    watch: {\\r\\n      echdata: {\\r\\n        handler: function() {\\r\\n          this.drainitEchartm();\\r\\n        },\\r\\n        deep: true\\r\\n      }\\r\\n    },\\r\\n    created() {},\\r\\n    mounted() {\\r\\n      this.$echarts = echarts;\\r\\n      this.$nextTick(function() {\\r\\n        this.initEchart();\\r\\n        this.onHanleClick();\\r\\n      });\\r\\n    },\\r\\n    methods: {\\r\\n      // echart 初始化\\r\\n      initEchart() {\\r\\n        var colorList = [\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ])\\r\\n        ];\\r\\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\\r\\n        var seriesBgData = [];\\r\\n        for (var i = 0; i < this.echdata.xData.length; i++) {\\r\\n          seriesBgData.push(barMax);\\r\\n        }\\r\\n        var option = {\\r\\n          title: {\\r\\n            text: this.titleText,\\r\\n            textStyle: {\\r\\n              color: '#fff', // 备用字体色 '#2B9DF2'\\r\\n              fontSize: 14, // 字体大小\\r\\n              fontWeight: 600 // 字体粗细\\r\\n            },\\r\\n            x: 'left'\\r\\n          },\\r\\n          tooltip: {\\r\\n            trigger: 'axis',\\r\\n            axisPointer: {\\r\\n              type: 'shadow'\\r\\n            }\\r\\n            // formatter: function(params) {\\r\\n            //   // return params[0].name + '<br>' + params[0].value + ' 万人'\\r\\n            //   return params[0].name + '<br>' + params[0].value;\\r\\n            // }\\r\\n          },\\r\\n          legend: {\\r\\n            show: false\\r\\n          },\\r\\n          grid: [\\r\\n            {\\r\\n              top: '20px',\\r\\n              left: '10',\\r\\n              right: '10',\\r\\n              bottom: '-20',\\r\\n              containLabel: true\\r\\n            }\\r\\n          ],\\r\\n          xAxis: [\\r\\n            {\\r\\n              show: false,\\r\\n              name: '万人',\\r\\n              nameTextStyle: {\\r\\n                align: 'right',\\r\\n                color: '#FFFFFF'\\r\\n              },\\r\\n              axisLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: 'rgba(209, 209, 209, .3)'\\r\\n                }\\r\\n              },\\r\\n              axisLabel: {\\r\\n                fontSize: 13,\\r\\n                color: '#FFFFFF'\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              }\\r\\n            }\\r\\n          ],\\r\\n          yAxis: [\\r\\n            {\\r\\n              // name: '年龄',\\r\\n              triggerEvent: true,\\r\\n              inverse: false,\\r\\n              axisLine: {\\r\\n                show: false,\\r\\n                lineStyle: {\\r\\n                  color: 'rgba(209, 209, 209, .3)'\\r\\n                }\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              },\\r\\n              axisLabel: {\\r\\n                color: '#96C2FF',\\r\\n                // color: '#fff',\\r\\n                interval: 0,\\r\\n                fontWeight: 'normal',\\r\\n                fontSize: 13\\r\\n              },\\r\\n              data: this.echdata.yData,\\r\\n              gridIndex: 0\\r\\n            }\\r\\n          ],\\r\\n          series: [\\r\\n            {\\r\\n              name: '数量',\\r\\n              type: 'bar',\\r\\n              barGap: '-100%',\\r\\n              barCategoryGap: '100%',\\r\\n              data: this.echdata.xData.map((item, i) => {\\r\\n                const itemStyle = {\\r\\n                  color: i > 3 ? colorList[3] : colorList[i]\\r\\n                };\\r\\n                return {\\r\\n                  value: item,\\r\\n                  itemStyle: itemStyle\\r\\n                };\\r\\n              }),\\r\\n              barWidth: 10,\\r\\n              itemStyle: {\\r\\n                barBorderRadius: 30\\r\\n              },\\r\\n              z: 91,\\r\\n              label: {\\r\\n                show: true,\\r\\n                distance: 15,\\r\\n                color: '#fff',\\r\\n                fontSize: '14',\\r\\n                fontWeight: 600,\\r\\n                position: 'right'\\r\\n              }\\r\\n            },\\r\\n            {\\r\\n              name: '进度条背景',\\r\\n              type: 'bar',\\r\\n              barGap: '-100%',\\r\\n              barCategoryGap: '200%',\\r\\n              data: this.echdata.xData.map(function(d) {\\r\\n                return barMax;\\r\\n              }),\\r\\n              barWidth: 10,\\r\\n              tooltip: {\\r\\n                show: false\\r\\n              },\\r\\n              itemStyle: {\\r\\n                normal: {\\r\\n                  barBorderRadius: 30,\\r\\n                  color: '#1c1d47',\\r\\n                  // color: '#204b86',\\r\\n                  barBorderColor: '#204b86', // 边框色\\r\\n                  barBorderWidth: 1, // 边框宽度\\r\\n                  label: {\\r\\n                    show: false,\\r\\n                    textStyle: {\\r\\n                      color: 'rgba(255,255,255,1)'\\r\\n                    },\\r\\n                    position: 'right',\\r\\n                    formatter: function(p) {\\r\\n                      return this.echdata.xData[p.dataIndex];\\r\\n                    }\\r\\n                  }\\r\\n                }\\r\\n              },\\r\\n              z: 90\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\r\\n        echartEle.setOption(option, true);\\r\\n        window.addEventListener('resize', () => {\\r\\n          echartEle.resize();\\r\\n        });\\r\\n      },\\r\\n      // 点击事件\\r\\n      onHanleClick() {\\r\\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\\r\\n        echartEle.getZr().on('click', params => {\\r\\n          console.log('点击饿了', params);\\r\\n          const pointInPixel = [params.offsetX, params.offsetY];\\r\\n          if (echartEle.containPixel('grid', pointInPixel)) {\\r\\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\\r\\n            console.log(xIndex);\\r\\n          }\\r\\n          // this.$router.push('/sy-chanyelian')\\r\\n          //\\r\\n          // var options = echartEle.getOption()\\r\\n          // console.log('options配置', options)\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped>\\r\\n  .echart-unit {\\r\\n    height: 100%;\\r\\n  }\\r\\n</style>\\r\\n\";","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404],\n    yData2: [110, 220, 333, 444],\n    yData3: [131, 252, 363, 484]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        // var data1 = this.echdata.xData;\n        const seriesArrData = [\n          {\n            name: '用户总数',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\n          },\n          {\n            name: '其它',\n            type: 'line',\n            barWidth: '15%',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        //\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC1.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC1.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarC1.vue?vue&type=template&id=7d30ec4e&scoped=true\"\nimport script from \"./BarC1.vue?vue&type=script&lang=js\"\nexport * from \"./BarC1.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarC1.vue?vue&type=style&index=0&id=7d30ec4e&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7d30ec4e\",\n  null\n  \n)\n\nexport default component.exports","var map = {\n\t\"./BarA1.vue\": \"f670\",\n\t\"./BarA2.vue\": \"b463\",\n\t\"./BarA3.vue\": \"a042\",\n\t\"./BarA4.vue\": \"62d3\",\n\t\"./BarA5.vue\": \"3b47\",\n\t\"./BarA6.vue\": \"fc03\",\n\t\"./BarA7.vue\": \"3910\",\n\t\"./BarA8.vue\": \"f3de\",\n\t\"./BarB1.vue\": \"2949\",\n\t\"./BarB2.vue\": \"194e\",\n\t\"./BarB3.vue\": \"c953\",\n\t\"./BarB4.vue\": \"2936\",\n\t\"./BarC1.vue\": \"12a0\",\n\t\"./BarC2.vue\": \"7520\",\n\t\"./BarC3.vue\": \"0112\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"18d5\";","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\" />\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: [5, 75, 115, 52.65, 25.75],\r\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\r\n  };\r\n\r\n  export default {\r\n    infoTip: '备注：Y轴数据倒置',\r\n    name: '',\r\n    props: {\r\n      echdata: {\r\n        type: Object,\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '年龄分布(单位：万人)'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `echartsLine${Number(\r\n          Math.random()\r\n            .toString()\r\n            .substr(3, 3) + Date.now()\r\n        ).toString(36)}`\r\n      };\r\n    },\r\n    watch: {\r\n      echdata: {\r\n        handler: function() {\r\n          this.initEchart();\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n    created() {},\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(function() {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        const colorList = [\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ])\r\n        ];\r\n        const option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -4,\r\n            textStyle: {\r\n              // color: '#2992ff',\r\n              color: '#fff', // 备用字体色 '#2B9DF2'\r\n              fontSize: 14, // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n            // formatter: function(params) {\r\n            //   return params[0].name + '<br>' + params[0].value;\r\n            // }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              top: '20',\r\n              left: '10',\r\n              right: '20',\r\n              bottom: '-20',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              show: false,\r\n              name: '人',\r\n              nameTextStyle: {\r\n                align: 'right',\r\n                color: '#FFFFFF'\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                fontSize: 16,\r\n                color: '#FFFFFF'\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              inverse: true, // 设置 Y 轴数据反向展示\r\n              triggerEvent: true,\r\n              nameTextStyle: {\r\n                fontSize: 14,\r\n                color: '#FDFEFF',\r\n                padding: [0, 0, -10, -100]\r\n              },\r\n              axisLine: {\r\n                show: false,\r\n                lineStyle: {\r\n                  color: '#fff',\r\n                  align: 'left'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#96C2FF',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 13\r\n              },\r\n              data: this.echdata.yData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              data: this.echdata.xData.map((item, i) => {\r\n                const itemStyle = {\r\n                  color: i > 3 ? colorList[3] : colorList[i]\r\n                };\r\n                return {\r\n                  value: item,\r\n                  itemStyle: itemStyle\r\n                };\r\n              }),\r\n              barWidth: 10,\r\n              itemStyle: {\r\n                barBorderRadius: 30,\r\n                normal: {\r\n                  label: {\r\n                    position: 'right', // 在上方显示\r\n                    show: true, // 开启显示\r\n                    textStyle: {\r\n                      color: '#FDFEFF',\r\n                      fontWeight: 600,\r\n                      fontSize: 13\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              z: 91\r\n            }\r\n          ]\r\n        };\r\n\r\n        echartEle.setOption(option, true);\r\n        // 实时缩放\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB2.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB2.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarB2.vue?vue&type=template&id=39797ae2&scoped=true\"\nimport script from \"./BarB2.vue?vue&type=script&lang=js\"\nexport * from \"./BarB2.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarB2.vue?vue&type=style&index=0&id=39797ae2&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"39797ae2\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\n    yData: [101, 202, 303, 404],\\n    yData2: [110, 220, 333, 444],\\n    yData3: [131, 252, 363, 484]\\n  };\\n\\n  export default {\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '标题'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`,\\n        chart: null\\n      };\\n    },\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(() => {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        // var data1 = this.echdata.xData;\\n        const seriesArrData = [\\n          {\\n            name: '用户总数',\\n            type: 'bar',\\n            barWidth: '15%',\\n            itemStyle: {\\n              normal: {\\n                color: '#9C9AFF',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\\n          },\\n          {\\n            name: '新增会员',\\n            type: 'bar',\\n            barWidth: '15%',\\n            itemStyle: {\\n              normal: {\\n                color: '#FC8B62',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 500, 500, 500, 500, 400, 400, 500, 500]\\n          },\\n          {\\n            name: '用户',\\n            type: 'bar',\\n            barWidth: '15%',\\n            itemStyle: {\\n              normal: {\\n                color: '#FF679F',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\\n          },\\n          {\\n            name: '其它',\\n            type: 'line',\\n            barWidth: '15%',\\n            smooth: true,\\n            itemStyle: {\\n              normal: {\\n                color: '#FFCA71',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\\n          }\\n        ];\\n        const option = {\\n          title: {\\n            text: this.titleText,\\n            top: -2,\\n            textStyle: {\\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\\n              fontSize: '14px', // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            }\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\\n            }\\n          },\\n          grid: {\\n            right: '5%',\\n            left: '5',\\n            bottom: '0',\\n            top: '30',\\n            containLabel: true\\n          },\\n          xAxis: {\\n            type: 'category',\\n            data: this.echdata.xData,\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            axisTick: {\\n              show: false\\n            }\\n          },\\n          yAxis: {\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            // 分格线\\n            splitLine: {\\n              show: false,\\n              lineStyle: {\\n                color: '#4784e8'\\n              }\\n            }\\n          },\\n          series: seriesArrData\\n        };\\n        //\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","export default \"<template>\\r\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  import * as echarts from 'echarts';\\r\\n\\r\\n  const defaultEchdata = {\\r\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\r\\n    yData: [101, 202, 303, 404]\\r\\n  };\\r\\n\\r\\n  export default {\\r\\n    props: {\\r\\n      echdata: {\\r\\n        type: [Object, Array],\\r\\n        default: () => defaultEchdata\\r\\n      },\\r\\n      titleText: {\\r\\n        type: String,\\r\\n        default: '标题'\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        eleId: `eleId_${Math.random()\\r\\n          .toString()\\r\\n          .substring(3, 6) + Date.now().toString(36)}`,\\r\\n        chart: null\\r\\n      };\\r\\n    },\\r\\n    mounted() {\\r\\n      this.$echarts = echarts;\\r\\n      this.$nextTick(() => {\\r\\n        this.initEchart();\\r\\n      });\\r\\n    },\\r\\n    methods: {\\r\\n      initEchart() {\\r\\n        var colorList = [\\r\\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\\r\\n            { offset: 0, color: '#1277CC' },\\r\\n            { offset: 1, color: '#00E7FD' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\\r\\n            { offset: 0, color: '#01C4BA' },\\r\\n            { offset: 1, color: '#1DEFA9' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\\r\\n            { offset: 0, color: '#EF624A' },\\r\\n            { offset: 1, color: '#FF9482' }\\r\\n          ])\\r\\n        ];\\r\\n        var option = {\\r\\n          title: {\\r\\n            text: this.titleText,\\r\\n            top: -2,\\r\\n            textStyle: {\\r\\n              color: '#fff', // 字体颜色\\r\\n              fontSize: '14px', // 字体大小\\r\\n              fontWeight: 600 // 字体粗细\\r\\n            }\\r\\n          },\\r\\n          tooltip: {\\r\\n            trigger: 'axis',\\r\\n            axisPointer: {\\r\\n              type: 'shadow'\\r\\n            }\\r\\n          },\\r\\n          legend: {\\r\\n            show: false\\r\\n          },\\r\\n          grid: [\\r\\n            {\\r\\n              left: '10',\\r\\n              right: '10',\\r\\n              bottom: '0',\\r\\n              top: '35',\\r\\n              containLabel: true\\r\\n            }\\r\\n          ],\\r\\n          xAxis: [\\r\\n            {\\r\\n              // name: '年龄',\\r\\n              axisLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: 'rgba(209, 209, 209, .3)'\\r\\n                }\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              },\\r\\n              axisLabel: {\\r\\n                color: '#fff',\\r\\n                interval: 0,\\r\\n                fontWeight: 'normal',\\r\\n                fontSize: 12\\r\\n              },\\r\\n              data: this.echdata.xData,\\r\\n              gridIndex: 0\\r\\n            }\\r\\n          ],\\r\\n          yAxis: [\\r\\n            {\\r\\n              show: true,\\r\\n              //   name: '万人',\\r\\n              axisLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: 'rgba(209, 209, 209, .3)'\\r\\n                }\\r\\n              },\\r\\n              axisLabel: {\\r\\n                fontSize: 12,\\r\\n                color: '#fff'\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              }\\r\\n            }\\r\\n          ],\\r\\n          label: {\\r\\n            show: true,\\r\\n            position: 'top',\\r\\n            color: '#fff',\\r\\n            fontSize: 13,\\r\\n            fontWeight: 600\\r\\n          },\\r\\n          series: [\\r\\n            {\\r\\n              // name: '柱状图',\\r\\n              type: 'bar',\\r\\n              data: this.echdata.yData.map((item, i) => {\\r\\n                const itemStyle = {\\r\\n                  color: i > 3 ? colorList[3] : colorList[i]\\r\\n                };\\r\\n                return {\\r\\n                  value: item,\\r\\n                  itemStyle: itemStyle\\r\\n                };\\r\\n              }),\\r\\n              barWidth: 10,\\r\\n              itemStyle: {\\r\\n                barBorderRadius: 30\\r\\n              }\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\r\\n        echartEle.setOption(option);\\r\\n        window.addEventListener('resize', () => {\\r\\n          echartEle.resize();\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped>\\r\\n  .echart-unit {\\r\\n    height: 100%;\\r\\n  }\\r\\n</style>\\r\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC2.vue?vue&type=style&index=0&id=3737eff4&prod&lang=scss&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\" />\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: [5, 75, 115, 52.65, 25.75],\r\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\r\n  };\r\n\r\n  export default {\r\n    infoTip: '备注：',\r\n    name: '',\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '年龄分布(单位：万人)'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`\r\n      };\r\n    },\r\n    watch: {\r\n      echdata: {\r\n        handler: function() {\r\n          this.drainitEchartm();\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n    created() {},\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(function() {\r\n        this.initEchart();\r\n        this.onHanleClick();\r\n      });\r\n    },\r\n    methods: {\r\n      // echart 初始化\r\n      initEchart() {\r\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\r\n\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            textStyle: {\r\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\r\n              fontSize: '14px', // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            },\r\n            x: 'left'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              left: '10',\r\n              right: '0',\r\n              bottom: '-15',\r\n              top: '30',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              show: false\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              // name: '年龄',\r\n              inverse: false,\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#fff',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 13,\r\n                formatter: function(value, index) {\r\n                  return value.length > 5 ? value.slice(0, 5) + '...' : value;\r\n                }\r\n              },\r\n              data: this.echdata.yData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          label: {\r\n            show: true,\r\n            position: 'right',\r\n            color: '#fff',\r\n            fontSize: 13,\r\n            fontWeight: 600\r\n          },\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              data: this.echdata.xData,\r\n              barWidth: 8,\r\n              itemStyle: {\r\n                barBorderRadius: 30,\r\n                color: new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n                  { offset: 0, color: '#FAACA8' },\r\n                  { offset: 1, color: '#FA709A' }\r\n                ])\r\n              },\r\n              z: 91\r\n            },\r\n            {\r\n              name: '进度条背景',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              data: this.echdata.xData.map(function(d) {\r\n                return barMax;\r\n              }),\r\n              barWidth: 8,\r\n              tooltip: {\r\n                show: false\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  barBorderRadius: 30,\r\n                  color: '#0A3069',\r\n                  barBorderColor: '#0A3069', // 边框色\r\n                  barBorderWidth: 1, // 边框宽度\r\n                  label: {\r\n                    show: false,\r\n                    textStyle: {\r\n                      color: 'rgba(255,255,255,1)'\r\n                    },\r\n                    position: 'right',\r\n                    formatter: function(p) {\r\n                      return this.echdata.xData[p.dataIndex];\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              z: 90\r\n            }\r\n          ]\r\n        };\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option, true);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      },\r\n      getOptions() {\r\n        var fontColor = '#30eee9';\r\n        const options = {\r\n          backgroundColor: '#11183c',\r\n          grid: {\r\n            left: '5%',\r\n            right: '10%',\r\n            top: '20%',\r\n            bottom: '15%',\r\n            containLabel: true\r\n          },\r\n          tooltip: {\r\n            show: true,\r\n            trigger: 'item'\r\n          },\r\n          legend: {\r\n            show: true,\r\n            x: 'center',\r\n            y: '35',\r\n            icon: 'stack',\r\n            itemWidth: 10,\r\n            itemHeight: 10,\r\n            textStyle: {\r\n              color: '#1bb4f6'\r\n            },\r\n            data: ['已采纳', '已发布', '浏览量']\r\n          },\r\n          xAxis: [\r\n            {\r\n              type: 'category',\r\n              boundaryGap: false,\r\n              axisLabel: {\r\n                color: fontColor\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: '#397cbc'\r\n                }\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              splitLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: '#195384'\r\n                }\r\n              },\r\n              data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              name: '信息量',\r\n              min: 0,\r\n              max: 1000,\r\n              axisLabel: {\r\n                formatter: '{value}',\r\n                textStyle: {\r\n                  color: '#2ad1d2'\r\n                }\r\n              },\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#27b4c2'\r\n                }\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              splitLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: '#11366e'\r\n                }\r\n              }\r\n            },\r\n            {\r\n              type: 'value',\r\n              name: '浏览量',\r\n              min: 0,\r\n              max: 1000,\r\n              axisLabel: {\r\n                formatter: '{value} 人',\r\n                textStyle: {\r\n                  color: '#186afe'\r\n                }\r\n              },\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#186afe'\r\n                }\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              splitLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: '#11366e'\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '已采纳',\r\n              type: 'line',\r\n              stack: '总量',\r\n              symbol: 'circle',\r\n              symbolSize: 8,\r\n              itemStyle: {\r\n                normal: {\r\n                  color: '#0092f6',\r\n                  lineStyle: {\r\n                    color: '#0092f6',\r\n                    width: 1\r\n                  },\r\n                  areaStyle: {\r\n                    //color: '#94C9EC'\r\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\r\n                      {\r\n                        offset: 0,\r\n                        color: 'rgba(7,44,90,0.3)'\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: 'rgba(0,146,246,0.9)'\r\n                      }\r\n                    ])\r\n                  }\r\n                }\r\n              },\r\n              markPoint: {\r\n                itemStyle: {\r\n                  normal: {\r\n                    color: 'red'\r\n                  }\r\n                }\r\n              },\r\n              data: [120, 132, 101, 134, 90, 230, 210, 182, 191, 234, 290, 330]\r\n            },\r\n            {\r\n              name: '已发布',\r\n              type: 'line',\r\n              stack: '总量',\r\n              symbol: 'circle',\r\n              symbolSize: 8,\r\n\r\n              itemStyle: {\r\n                normal: {\r\n                  color: '#00d4c7',\r\n                  lineStyle: {\r\n                    color: '#00d4c7',\r\n                    width: 1\r\n                  },\r\n                  areaStyle: {\r\n                    //color: '#94C9EC'\r\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\r\n                      {\r\n                        offset: 0,\r\n                        color: 'rgba(7,44,90,0.3)'\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: 'rgba(0,212,199,0.9)'\r\n                      }\r\n                    ])\r\n                  }\r\n                }\r\n              },\r\n              data: [220, 182, 191, 234, 290, 330, 310, 201, 154, 190, 330, 410]\r\n            },\r\n            {\r\n              name: '浏览量',\r\n              type: 'line',\r\n              stack: '总量',\r\n              symbol: 'circle',\r\n              symbolSize: 8,\r\n              itemStyle: {\r\n                normal: {\r\n                  color: '#aecb56',\r\n                  lineStyle: {\r\n                    color: '#aecb56',\r\n                    width: 1\r\n                  },\r\n                  areaStyle: {\r\n                    //color: '#94C9EC'\r\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\r\n                      {\r\n                        offset: 0,\r\n                        color: 'rgba(7,44,90,0.3)'\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: 'rgba(114,144,89,0.9)'\r\n                      }\r\n                    ])\r\n                  }\r\n                }\r\n              },\r\n              data: [150, 232, 201, 154, 190, 330, 410, 150, 232, 201, 154, 190]\r\n            }\r\n          ]\r\n        };\r\n      },\r\n      // 点击事件\r\n      onHanleClick() {\r\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\r\n        echartEle.getZr().on('click', params => {\r\n          console.log('点击饿了', params);\r\n          const pointInPixel = [params.offsetX, params.offsetY];\r\n          if (echartEle.containPixel('grid', pointInPixel)) {\r\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\r\n            console.log(xIndex);\r\n          }\r\n          // this.$router.push('/sy-chanyelian')\r\n          //\r\n          // var options = echartEle.getOption()\r\n          // console.log('options配置', options)\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB4.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB4.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarB4.vue?vue&type=template&id=2c859109&scoped=true\"\nimport script from \"./BarB4.vue?vue&type=script&lang=js\"\nexport * from \"./BarB4.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarB4.vue?vue&type=style&index=0&id=2c859109&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2c859109\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\" />\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: [5, 75, 115, 52.65, 25.75],\r\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\r\n  };\r\n\r\n  export default {\r\n    infoTip: '',\r\n    name: '',\r\n    props: {\r\n      echdata: {\r\n        type: Object,\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '年龄分布(单位：万人)'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `echartsLine${Number(\r\n          Math.random()\r\n            .toString()\r\n            .substr(3, 3) + Date.now()\r\n        ).toString(36)}`\r\n      };\r\n    },\r\n    watch: {\r\n      echdata: {\r\n        handler: function() {\r\n          this.initEchart();\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n    created() {},\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(function() {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        const colorList = [\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ])\r\n        ];\r\n        const option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -4,\r\n            textStyle: {\r\n              // color: '#2992ff',\r\n              color: '#fff', // 备用字体色 '#2B9DF2'\r\n              fontSize: 14, // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n            // formatter: function(params) {\r\n            //   return params[0].name + '<br>' + params[0].value;\r\n            // }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              top: '20',\r\n              left: '10',\r\n              right: '20',\r\n              bottom: '-20',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              show: false,\r\n              name: '人',\r\n              nameTextStyle: {\r\n                align: 'right',\r\n                color: '#FFFFFF'\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                fontSize: 16,\r\n                color: '#FFFFFF'\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              inverse: false, // 设置 Y 轴数据反向展示\r\n              triggerEvent: true,\r\n              nameTextStyle: {\r\n                fontSize: 14,\r\n                color: '#FDFEFF',\r\n                padding: [0, 0, -10, -100]\r\n              },\r\n              axisLine: {\r\n                show: false,\r\n                lineStyle: {\r\n                  color: '#fff',\r\n                  align: 'left'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#96C2FF',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 13\r\n              },\r\n              data: this.echdata.yData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              data: this.echdata.xData.map((item, i) => {\r\n                const itemStyle = {\r\n                  color: i > 3 ? colorList[3] : colorList[i]\r\n                };\r\n                return {\r\n                  value: item,\r\n                  itemStyle: itemStyle\r\n                };\r\n              }),\r\n              barWidth: 10,\r\n              itemStyle: {\r\n                barBorderRadius: 30,\r\n                normal: {\r\n                  label: {\r\n                    position: 'right', // 在上方显示\r\n                    show: true, // 开启显示\r\n                    textStyle: {\r\n                      color: '#FDFEFF',\r\n                      fontWeight: 600,\r\n                      fontSize: 13\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              z: 91\r\n            }\r\n          ]\r\n        };\r\n\r\n        echartEle.setOption(option, true);\r\n        // 实时缩放\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB1.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB1.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarB1.vue?vue&type=template&id=489e24e2&scoped=true\"\nimport script from \"./BarB1.vue?vue&type=script&lang=js\"\nexport * from \"./BarB1.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarB1.vue?vue&type=style&index=0&id=489e24e2&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"489e24e2\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB2.vue?vue&type=style&index=0&id=39797ae2&prod&lang=scss&scoped=true\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA2.vue?vue&type=style&index=0&id=0edb0670&prod&lang=scss&scoped=true\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA6.vue?vue&type=style&index=0&id=08759bc4&prod&lang=scss&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n  const defaultSeriesName = ['手机销量', '电脑销量'];\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      },\r\n      seriesname: {\r\n        type: [Object, Array],\r\n        default: () => defaultSeriesName\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        const option = this.getOptions();\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      },\r\n      getOptions() {\r\n        var min = 50;\r\n        const options = {\r\n          backgroundColor: '#111c4e',\r\n          color: ['#3398DB'],\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'line',\r\n              lineStyle: {\r\n                opacity: 0\r\n              }\r\n            }\r\n            // formatter: function(prams) {\r\n            //   if (prams[0].data === min) {\r\n            //     return '合格率：0%';\r\n            //   } else {\r\n            //     return '合格率：' + prams[0].data + '%';\r\n            //   }\r\n            // }\r\n          },\r\n          legend: {\r\n            data: ['直接访问', '背景'],\r\n            show: false\r\n          },\r\n          grid: {\r\n            left: '0%',\r\n            right: '0%',\r\n            bottom: '0%',\r\n            top: '7%',\r\n            // height: '85%',\r\n            containLabel: true,\r\n            z: 22\r\n          },\r\n          xAxis: [\r\n            {\r\n              type: 'category',\r\n              gridIndex: 0,\r\n              data: this.echdata.xData,\r\n              axisTick: {\r\n                alignWithLabel: true\r\n              },\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#0c3b71'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                show: true,\r\n                color: 'rgb(170,170,170)',\r\n                fontSize: 12\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              gridIndex: 0,\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              // min: min,\r\n              // max: 100,\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#0c3b71'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                color: 'rgb(170,170,170)',\r\n                formatter: '{value} 人'\r\n              }\r\n            },\r\n            {\r\n              type: 'value',\r\n              gridIndex: 0,\r\n              min: min,\r\n              max: 100,\r\n              splitNumber: 12,\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                show: false\r\n              },\r\n              splitArea: {\r\n                show: true,\r\n                areaStyle: {\r\n                  color: ['rgba(250,250,250,0.0)', 'rgba(250,250,250,0.05)']\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '合格率',\r\n              type: 'bar',\r\n              barWidth: '10',\r\n              xAxisIndex: 0,\r\n              yAxisIndex: 0,\r\n              itemStyle: {\r\n                normal: {\r\n                  barBorderRadius: 30,\r\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                    {\r\n                      offset: 0,\r\n                      color: '#00feff'\r\n                    },\r\n                    {\r\n                      offset: 0.5,\r\n                      color: '#027eff'\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: '#0286ff'\r\n                    }\r\n                  ])\r\n                }\r\n              },\r\n              data: this.echdata.yData,\r\n              zlevel: 11\r\n            },\r\n            {\r\n              name: '背景',\r\n              type: 'bar',\r\n              barWidth: '20',\r\n              xAxisIndex: 0,\r\n              yAxisIndex: 1,\r\n              // barGap: '-135%',\r\n              barGap: '-1.5px',\r\n              data: [100, 100, 100, 100, 100, 100, 100],\r\n              itemStyle: {\r\n                normal: {\r\n                  color: 'rgba(255,255,255,0.1)'\r\n                }\r\n              },\r\n              zlevel: 9\r\n            }\r\n          ]\r\n        };\r\n        return options;\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA7.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA7.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA7.vue?vue&type=template&id=73b19242&scoped=true\"\nimport script from \"./BarA7.vue?vue&type=script&lang=js\"\nexport * from \"./BarA7.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA7.vue?vue&type=style&index=0&id=73b19242&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"73b19242\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        var colorList = [\r\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\r\n            { offset: 0, color: '#1277CC' },\r\n            { offset: 1, color: '#00E7FD' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\r\n            { offset: 0, color: '#01C4BA' },\r\n            { offset: 1, color: '#1DEFA9' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\r\n            { offset: 0, color: '#EF624A' },\r\n            { offset: 1, color: '#FF9482' }\r\n          ])\r\n        ];\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -2,\r\n            textStyle: {\r\n              color: '#fff', // 字体颜色\r\n              fontSize: '14px', // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              left: '10',\r\n              right: '10',\r\n              bottom: '0',\r\n              top: '35',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              // name: '年龄',\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#fff',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 12\r\n              },\r\n              data: this.echdata.xData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              show: true,\r\n              //   name: '万人',\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                fontSize: 12,\r\n                color: '#fff'\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          label: {\r\n            show: true,\r\n            position: 'top',\r\n            color: '#fff',\r\n            fontSize: 13,\r\n            fontWeight: 600\r\n          },\r\n          series: [\r\n            {\r\n              // name: '柱状图',\r\n              type: 'bar',\r\n              data: this.echdata.yData.map((item, i) => {\r\n                const itemStyle = {\r\n                  color: i > 3 ? colorList[3] : colorList[i]\r\n                };\r\n                return {\r\n                  value: item,\r\n                  itemStyle: itemStyle\r\n                };\r\n              }),\r\n              barWidth: 10,\r\n              itemStyle: {\r\n                barBorderRadius: 30\r\n              }\r\n            }\r\n          ]\r\n        };\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA5.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA5.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA5.vue?vue&type=template&id=5a0ca71a&scoped=true\"\nimport script from \"./BarA5.vue?vue&type=script&lang=js\"\nexport * from \"./BarA5.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA5.vue?vue&type=style&index=0&id=5a0ca71a&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5a0ca71a\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA5.vue?vue&type=style&index=0&id=5a0ca71a&prod&lang=scss&scoped=true\"","export default \"<template>\\r\\n  <div class=\\\"\\\" style=\\\"color:#fff\\\">\\r\\n    echart图\\r\\n  </div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  export default {\\r\\n    data() {\\r\\n      return {};\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped></style>\\r\\n\";","var map = {\n\t\"./BarA1\": \"753c\",\n\t\"./BarA1.vue\": \"753c\",\n\t\"./BarA2\": \"0570\",\n\t\"./BarA2.vue\": \"0570\",\n\t\"./BarA3\": \"7456\",\n\t\"./BarA3.vue\": \"7456\",\n\t\"./BarA4\": \"0c6a\",\n\t\"./BarA4.vue\": \"0c6a\",\n\t\"./BarA5\": \"24c1\",\n\t\"./BarA5.vue\": \"24c1\",\n\t\"./BarA6\": \"fcc8\",\n\t\"./BarA6.vue\": \"fcc8\",\n\t\"./BarA7\": \"d867\",\n\t\"./BarA7.vue\": \"d867\",\n\t\"./BarA8\": \"4140\",\n\t\"./BarA8.vue\": \"4140\",\n\t\"./BarB1\": \"5075\",\n\t\"./BarB1.vue\": \"5075\",\n\t\"./BarB2\": \"fcaf\",\n\t\"./BarB2.vue\": \"fcaf\",\n\t\"./BarB3\": \"0d59\",\n\t\"./BarB3.vue\": \"0d59\",\n\t\"./BarB4\": \"9d51\",\n\t\"./BarB4.vue\": \"9d51\",\n\t\"./BarC1\": \"c0ca\",\n\t\"./BarC1.vue\": \"c0ca\",\n\t\"./BarC2\": \"20b0\",\n\t\"./BarC2.vue\": \"20b0\",\n\t\"./BarC3\": \"d1b6\",\n\t\"./BarC3.vue\": \"d1b6\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4d76\";","export default \"<template>\\r\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\" />\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  import * as echarts from 'echarts';\\r\\n\\r\\n  const defaultEchdata = {\\r\\n    xData: [5, 75, 115, 52.65, 25.75],\\r\\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\\r\\n  };\\r\\n\\r\\n  export default {\\r\\n    infoTip: '',\\r\\n    name: '',\\r\\n    props: {\\r\\n      echdata: {\\r\\n        type: Object,\\r\\n        default: () => defaultEchdata\\r\\n      },\\r\\n      titleText: {\\r\\n        type: String,\\r\\n        default: '年龄分布(单位：万人)'\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        eleId: `echartsLine${Number(\\r\\n          Math.random()\\r\\n            .toString()\\r\\n            .substr(3, 3) + Date.now()\\r\\n        ).toString(36)}`\\r\\n      };\\r\\n    },\\r\\n    watch: {\\r\\n      echdata: {\\r\\n        handler: function() {\\r\\n          this.initEchart();\\r\\n        },\\r\\n        deep: true\\r\\n      }\\r\\n    },\\r\\n    created() {},\\r\\n    mounted() {\\r\\n      this.$echarts = echarts;\\r\\n      this.$nextTick(function() {\\r\\n        this.initEchart();\\r\\n      });\\r\\n    },\\r\\n    methods: {\\r\\n      initEchart() {\\r\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\r\\n        const colorList = [\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ])\\r\\n        ];\\r\\n        const option = {\\r\\n          title: {\\r\\n            text: this.titleText,\\r\\n            top: -4,\\r\\n            textStyle: {\\r\\n              // color: '#2992ff',\\r\\n              color: '#fff', // 备用字体色 '#2B9DF2'\\r\\n              fontSize: 14, // 字体大小\\r\\n              fontWeight: 600 // 字体粗细\\r\\n            }\\r\\n          },\\r\\n          tooltip: {\\r\\n            trigger: 'axis',\\r\\n            axisPointer: {\\r\\n              type: 'shadow'\\r\\n            }\\r\\n            // formatter: function(params) {\\r\\n            //   return params[0].name + '<br>' + params[0].value;\\r\\n            // }\\r\\n          },\\r\\n          legend: {\\r\\n            show: false\\r\\n          },\\r\\n          grid: [\\r\\n            {\\r\\n              top: '20',\\r\\n              left: '10',\\r\\n              right: '20',\\r\\n              bottom: '-20',\\r\\n              containLabel: true\\r\\n            }\\r\\n          ],\\r\\n          xAxis: [\\r\\n            {\\r\\n              show: false,\\r\\n              name: '人',\\r\\n              nameTextStyle: {\\r\\n                align: 'right',\\r\\n                color: '#FFFFFF'\\r\\n              },\\r\\n              axisLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: 'rgba(209, 209, 209, .3)'\\r\\n                }\\r\\n              },\\r\\n              axisLabel: {\\r\\n                fontSize: 16,\\r\\n                color: '#FFFFFF'\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              }\\r\\n            }\\r\\n          ],\\r\\n          yAxis: [\\r\\n            {\\r\\n              inverse: false, // 设置 Y 轴数据反向展示\\r\\n              triggerEvent: true,\\r\\n              nameTextStyle: {\\r\\n                fontSize: 14,\\r\\n                color: '#FDFEFF',\\r\\n                padding: [0, 0, -10, -100]\\r\\n              },\\r\\n              axisLine: {\\r\\n                show: false,\\r\\n                lineStyle: {\\r\\n                  color: '#fff',\\r\\n                  align: 'left'\\r\\n                }\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              },\\r\\n              axisLabel: {\\r\\n                color: '#96C2FF',\\r\\n                interval: 0,\\r\\n                fontWeight: 'normal',\\r\\n                fontSize: 13\\r\\n              },\\r\\n              data: this.echdata.yData,\\r\\n              gridIndex: 0\\r\\n            }\\r\\n          ],\\r\\n          series: [\\r\\n            {\\r\\n              name: '数量',\\r\\n              type: 'bar',\\r\\n              barGap: '-100%',\\r\\n              data: this.echdata.xData.map((item, i) => {\\r\\n                const itemStyle = {\\r\\n                  color: i > 3 ? colorList[3] : colorList[i]\\r\\n                };\\r\\n                return {\\r\\n                  value: item,\\r\\n                  itemStyle: itemStyle\\r\\n                };\\r\\n              }),\\r\\n              barWidth: 10,\\r\\n              itemStyle: {\\r\\n                barBorderRadius: 30,\\r\\n                normal: {\\r\\n                  label: {\\r\\n                    position: 'right', // 在上方显示\\r\\n                    show: true, // 开启显示\\r\\n                    textStyle: {\\r\\n                      color: '#FDFEFF',\\r\\n                      fontWeight: 600,\\r\\n                      fontSize: 13\\r\\n                    }\\r\\n                  }\\r\\n                }\\r\\n              },\\r\\n              z: 91\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n\\r\\n        echartEle.setOption(option, true);\\r\\n        // 实时缩放\\r\\n        window.addEventListener('resize', () => {\\r\\n          echartEle.resize();\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped>\\r\\n  .echart-unit {\\r\\n    height: 100%;\\r\\n  }\\r\\n</style>\\r\\n\";","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        let totalSum = 0; // 总数\r\n        for (var i = 0; i < this.echdata.yData.length; i++) {\r\n          totalSum += this.echdata.yData[i];\r\n        }\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -4,\r\n            textStyle: {\r\n              color: '#2B9DF2',\r\n              fontSize: 14 // 字体大小\r\n              // fontWeight:  // 字体粗细\r\n            }\r\n          },\r\n          legend: {\r\n            // 图例组件，颜色和名字\r\n            top: 0,\r\n            right: 0,\r\n            textStyle: {\r\n              color: 'rgba(255, 255, 255, .5)',\r\n              fontSize: 14\r\n            },\r\n            icon: 'roundRect',\r\n            itemWidth: 16,\r\n            itemHeight: 10,\r\n            itemGap: 5\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            backgroundColor: 'rgba(0, 0, 0, .8)',\r\n            borderColor: 'rgba(0, 0, 0, .8)',\r\n            textStyle: {\r\n              color: '#fff',\r\n              fontSize: 14\r\n            },\r\n            axisPointer: {\r\n              // 坐标轴指示器，坐标轴触发有效\r\n              type: 'line' // 默认为直线，可选为：'line' | 'shadow'\r\n            }\r\n            // formatter: function(params) {\r\n            //   console.log('鼠标', params);\r\n            //   var value = params.value;\r\n            //   // var total = params.data.total;\r\n            //   var percent = ((value / totalSum) * 100).toFixed(2); // 计算百分比\r\n            //   return params.name + ': ' + value + ' (' + percent + '%)'; // 格式化 tooltip 内容\r\n            // }\r\n            // formatter: '{c}%' // 显示比例（这是关键）\r\n            // formatter: `{b}: {c} ({c/${totalSum} * 100}%)`\r\n          },\r\n          grid: [\r\n            {\r\n              left: '3%',\r\n              right: '3%',\r\n              bottom: '-5',\r\n              top: '20%',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: {\r\n            type: 'category',\r\n            axisLabel: {\r\n              // color: 'red',\r\n              color: '#96C2FF',\r\n              fontSize: 10,\r\n              interval: 0,\r\n              rotate: 20\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: 'rgba(209, 209, 209, .3)'\r\n              }\r\n            },\r\n            data: this.echdata.xData\r\n          },\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              name: '',\r\n              axisLabel: {\r\n                // color: 'red',\r\n                color: '#96C2FF',\r\n                fontSize: 12,\r\n                fontWeight: 100\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)',\r\n                  fontSize: 12\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              smooth: true,\r\n              barWidth: 6,\r\n              showAllSymbol: true,\r\n              symbol: 'circle',\r\n              symbolSize: 6,\r\n              color: '#10D6FE',\r\n              lineStyle: {\r\n                width: 1,\r\n                type: 'dashed'\r\n              },\r\n              label: {\r\n                show: true,\r\n                color: '#fff',\r\n                fontSize: '12',\r\n                fontWeight: 600,\r\n                position: 'top',\r\n                // formatter: '{b}\\n{c}%', // 显示比例（这是关键）\r\n                formatter: function(params) {\r\n                  // console.log('比例饿', params);\r\n                  const percent = ((params.value / totalSum) * 100).toFixed(2) + '%';\r\n                  return percent;\r\n                }\r\n              },\r\n              areaStyle: {\r\n                color: {\r\n                  type: 'linear',\r\n                  x: 0,\r\n                  y: 0,\r\n                  x2: 0,\r\n                  y2: 1,\r\n                  colorStops: [\r\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\r\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\r\n                  ],\r\n                  globalCoord: false\r\n                }\r\n              },\r\n              data: this.echdata.yData\r\n            }\r\n          ]\r\n        };\r\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option, true);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA4.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA4.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA4.vue?vue&type=template&id=15f6bb05&scoped=true\"\nimport script from \"./BarA4.vue?vue&type=script&lang=js\"\nexport * from \"./BarA4.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA4.vue?vue&type=style&index=0&id=15f6bb05&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"15f6bb05\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  import * as echarts from 'echarts';\\r\\n\\r\\n  const defaultEchdata = {\\r\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\r\\n    yData: [101, 202, 303, 404]\\r\\n  };\\r\\n\\r\\n  export default {\\r\\n    props: {\\r\\n      echdata: {\\r\\n        type: [Object, Array],\\r\\n        default: () => defaultEchdata\\r\\n      },\\r\\n      titleText: {\\r\\n        type: String,\\r\\n        default: '标题'\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        eleId: `eleId_${Math.random()\\r\\n          .toString()\\r\\n          .substring(3, 6) + Date.now().toString(36)}`,\\r\\n        chart: null\\r\\n      };\\r\\n    },\\r\\n    mounted() {\\r\\n      this.$nextTick(() => {\\r\\n        this.initEchart();\\r\\n      });\\r\\n    },\\r\\n    methods: {\\r\\n      initEchart() {\\r\\n        const seriesArrData = [\\r\\n          {\\r\\n            // 柱体1\\r\\n            name: '数量',\\r\\n            data: this.echdata.yData,\\r\\n            type: 'bar',\\r\\n            barMaxWidth: 'auto',\\r\\n            barWidth: '10',\\r\\n            showBackground: true,\\r\\n            backgroundStyle: {\\r\\n              color: 'rgba(20, 88, 168, 0.2)'\\r\\n            },\\r\\n            itemStyle: {\\r\\n              normal: {\\r\\n                color: function(params) {\\r\\n                  var colorList = ['#02AFD5', '#F3CB6B'];\\r\\n                  return colorList[params.dataIndex % colorList.length];\\r\\n                },\\r\\n                label: {\\r\\n                  position: 'top',\\r\\n                  show: true, // 开启显示\\r\\n                  formatter: ['{a|{c}}'].join(','),\\r\\n                  rich: {\\r\\n                    a: {\\r\\n                      color: '#fff',\\r\\n                      align: 'center',\\r\\n                      fontSize: '12px'\\r\\n                    }\\r\\n                  },\\r\\n                  // position: 'top', // 在上方显示\\r\\n                  textStyle: {\\r\\n                    // 数值样式\\r\\n                    color: '#FDFEFF',\\r\\n                    fontSize: 12\\r\\n                  }\\r\\n                }\\r\\n              }\\r\\n            },\\r\\n            zlevel: 2\\r\\n          }\\r\\n        ];\\r\\n        const option = {\\r\\n          title: {\\r\\n            text: this.titleText,\\r\\n            top: -2,\\r\\n            textStyle: {\\r\\n              color: '#fff', // 备用字体色 '#2B9DF2' '#2992ff',\\r\\n              fontSize: 14, // 字体大小\\r\\n              fontWeight: 600 // 字体粗细\\r\\n            }\\r\\n          },\\r\\n          tooltip: {\\r\\n            trigger: 'axis',\\r\\n            axisPointer: {\\r\\n              // 坐标轴指示器，坐标轴触发有效\\r\\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\\r\\n            }\\r\\n          },\\r\\n          grid: {\\r\\n            right: '5%',\\r\\n            left: '5',\\r\\n            bottom: '0',\\r\\n            top: '30',\\r\\n            containLabel: true\\r\\n          },\\r\\n          xAxis: {\\r\\n            type: 'category',\\r\\n            data: this.echdata.xData,\\r\\n            // 坐标轴\\r\\n            axisLine: {\\r\\n              show: true,\\r\\n              lineStyle: {\\r\\n                color: '#1d71b7'\\r\\n              }\\r\\n            },\\r\\n            // 坐标值标注\\r\\n            axisLabel: {\\r\\n              show: true,\\r\\n              textStyle: {\\r\\n                color: '#96C2FF',\\r\\n                fontSize: 12\\r\\n              }\\r\\n            },\\r\\n            axisTick: {\\r\\n              show: false\\r\\n            }\\r\\n          },\\r\\n          yAxis: {\\r\\n            // 坐标轴\\r\\n            axisLine: {\\r\\n              show: true,\\r\\n              lineStyle: {\\r\\n                color: '#1d71b7'\\r\\n              }\\r\\n            },\\r\\n            // 坐标值标注\\r\\n            axisLabel: {\\r\\n              show: true,\\r\\n              textStyle: {\\r\\n                color: '#96C2FF',\\r\\n                fontSize: 12\\r\\n              }\\r\\n            },\\r\\n            // 分格线\\r\\n            splitLine: {\\r\\n              show: false,\\r\\n              lineStyle: {\\r\\n                color: '#4784e8'\\r\\n              }\\r\\n            }\\r\\n          },\\r\\n          series: seriesArrData\\r\\n        };\\r\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\r\\n        echartEle.setOption(option, true);\\r\\n        window.addEventListener('resize', () => {\\r\\n          echartEle.resize();\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped>\\r\\n  .echart-unit {\\r\\n    height: 100%;\\r\\n  }\\r\\n</style>\\r\\n\";","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404],\n    yData2: [110, 220, 333, 444],\n    yData3: [131, 252, 363, 484]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        // var data1 = this.echdata.xData;\n        const seriesArrData = [\n          {\n            name: '用户总数',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\n          },\n          {\n            name: '新增会员',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#FC8B62',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 500, 500, 500, 500, 400, 400, 500, 500]\n          },\n          {\n            name: '用户',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#FF679F',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          },\n          {\n            name: '其它',\n            type: 'line',\n            barWidth: '15%',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        //\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC2.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC2.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarC2.vue?vue&type=template&id=3737eff4&scoped=true\"\nimport script from \"./BarC2.vue?vue&type=script&lang=js\"\nexport * from \"./BarC2.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarC2.vue?vue&type=style&index=0&id=3737eff4&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3737eff4\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  import * as echarts from 'echarts';\\r\\n\\r\\n  const defaultEchdata = {\\r\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\r\\n    yData: [101, 202, 303, 404]\\r\\n  };\\r\\n\\r\\n  export default {\\r\\n    props: {\\r\\n      echdata: {\\r\\n        type: [Object, Array],\\r\\n        default: () => defaultEchdata\\r\\n      },\\r\\n      titleText: {\\r\\n        type: String,\\r\\n        default: '标题'\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        eleId: `eleId_${Math.random()\\r\\n          .toString()\\r\\n          .substring(3, 6) + Date.now().toString(36)}`,\\r\\n        chart: null\\r\\n      };\\r\\n    },\\r\\n    mounted() {\\r\\n      this.$echarts = echarts;\\r\\n      this.$nextTick(() => {\\r\\n        this.initEchart();\\r\\n      });\\r\\n    },\\r\\n    methods: {\\r\\n      initEchart() {\\r\\n        // var data1 = this.echdata.xData;\\r\\n        const seriesArrData = [\\r\\n          {\\r\\n            // 柱体1\\r\\n            name: '数量',\\r\\n            data: this.echdata.yData,\\r\\n            type: 'bar',\\r\\n            barMaxWidth: 'auto',\\r\\n            barWidth: '10',\\r\\n            showBackground: true,\\r\\n            backgroundStyle: {\\r\\n              color: 'rgba(20, 88, 168, 0.2)'\\r\\n            },\\r\\n            itemStyle: {\\r\\n              normal: {\\r\\n                color: params => {\\r\\n                  var colorList = [['#2D98DF', '#0B244C']];\\r\\n                  47;\\r\\n                  return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\\r\\n                    {\\r\\n                      offset: 0,\\r\\n                      color: colorList[0][0]\\r\\n                    },\\r\\n                    {\\r\\n                      offset: 0.5,\\r\\n                      color: colorList[0][0]\\r\\n                    },\\r\\n                    {\\r\\n                      offset: 1,\\r\\n                      color: colorList[0][1]\\r\\n                    }\\r\\n                  ]);\\r\\n                },\\r\\n                label: {\\r\\n                  show: true,\\r\\n                  position: 'top',\\r\\n                  textStyle: {\\r\\n                    fontSize: 14,\\r\\n                    fontWeight: 600,\\r\\n                    color: '#D1DBFF' // 字体颜色\\r\\n                  }\\r\\n                }\\r\\n              },\\r\\n              barBorderRadius: 30\\r\\n            },\\r\\n            zlevel: 2\\r\\n          }\\r\\n        ];\\r\\n        const option = {\\r\\n          title: {\\r\\n            text: this.titleText,\\r\\n            top: -2,\\r\\n            textStyle: {\\r\\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\\r\\n              fontSize: '14px', // 字体大小\\r\\n              fontWeight: 600 // 字体粗细\\r\\n            }\\r\\n          },\\r\\n          tooltip: {\\r\\n            trigger: 'axis',\\r\\n            axisPointer: {\\r\\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\\r\\n            }\\r\\n          },\\r\\n          grid: {\\r\\n            right: '5%',\\r\\n            left: '5',\\r\\n            bottom: '0',\\r\\n            top: '30',\\r\\n            containLabel: true\\r\\n          },\\r\\n          xAxis: {\\r\\n            type: 'category',\\r\\n            data: this.echdata.xData,\\r\\n            // 坐标轴\\r\\n            axisLine: {\\r\\n              show: true,\\r\\n              lineStyle: {\\r\\n                color: '#1d71b7'\\r\\n              }\\r\\n            },\\r\\n            // 坐标值标注\\r\\n            axisLabel: {\\r\\n              show: true,\\r\\n              textStyle: {\\r\\n                color: '#96C2FF',\\r\\n                fontSize: 12\\r\\n              }\\r\\n            },\\r\\n            axisTick: {\\r\\n              show: false\\r\\n            }\\r\\n          },\\r\\n          yAxis: {\\r\\n            // 坐标轴\\r\\n            axisLine: {\\r\\n              show: true,\\r\\n              lineStyle: {\\r\\n                color: '#1d71b7'\\r\\n              }\\r\\n            },\\r\\n            // 坐标值标注\\r\\n            axisLabel: {\\r\\n              show: true,\\r\\n              textStyle: {\\r\\n                color: '#96C2FF',\\r\\n                fontSize: 12\\r\\n              }\\r\\n            },\\r\\n            // 分格线\\r\\n            splitLine: {\\r\\n              show: false,\\r\\n              lineStyle: {\\r\\n                color: '#4784e8'\\r\\n              }\\r\\n            }\\r\\n          },\\r\\n          series: seriesArrData\\r\\n        };\\r\\n        //\\r\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\r\\n        echartEle.setOption(option);\\r\\n        window.addEventListener('resize', () => {\\r\\n          echartEle.resize();\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped>\\r\\n  .echart-unit {\\r\\n    height: 100%;\\r\\n  }\\r\\n</style>\\r\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB4.vue?vue&type=style&index=0&id=2c859109&prod&lang=scss&scoped=true\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA7.vue?vue&type=style&index=0&id=73b19242&prod&lang=scss&scoped=true\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA4.vue?vue&type=style&index=0&id=15f6bb05&prod&lang=scss&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"page\"},[_c('div',{staticClass:\"header\"},[_c('h3',{staticClass:\"title\"},[_vm._v(\"柱状图·基础\")]),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.echDefDataA),expression:\"echDefDataA\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"rightCopy\"},[_vm._v(\"复制数据\")])]),_c('section',{staticClass:\"units-box\"},[_c('ul',{staticClass:\"unit-list\"},_vm._l((_vm.dynamicComponents_A),function(item,i){return _c('li',{key:i + 'A',staticClass:\"unit-item\",attrs:{\"id\":'itemCls' + i}},[_c('div',{staticClass:\"theUnit\"},[_c(_vm.dynamicComponents_A[i],{tag:\"component\",attrs:{\"titleText\":`标题${i + 1}`}})],1),_c('div',{staticClass:\"title\",attrs:{\"info\":\"tip提示\"}},[_vm._v(_vm._s(_vm.getInfoTip(_vm.vueFiles[`BarA${i + 1}`])))]),_c('div',{staticClass:\"btnBlock\"},[_c('span',{staticClass:\"iconfont icon-bianji\",attrs:{\"title\":\"编辑\"},on:{\"click\":function($event){return _vm.onHandleItem(`BarA${i + 1}`)}}}),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.vueFiles[`BarA${i + 1}`]),expression:\"vueFiles[`BarA${i + 1}`]\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"iconfont icon-fuzhi\",attrs:{\"title\":\"复制\"}}),_c('span',{staticClass:\"iconfont icon-yulan\",attrs:{\"title\":\"预览\"},on:{\"click\":function($event){return _vm.onPreview(`BarA${i + 1}`)}}})])])}),0)]),_c('div',{staticClass:\"header\"},[_c('h3',{staticClass:\"title\"},[_vm._v(\"柱状图·横向\")]),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.echDefDataB),expression:\"echDefDataB\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"rightCopy\"},[_vm._v(\"复制数据\")])]),_c('section',{staticClass:\"units-box\"},[_c('ul',{staticClass:\"unit-list\"},_vm._l((_vm.dynamicComponents_B),function(item,i){return _c('li',{key:i + 'B',staticClass:\"unit-item\",attrs:{\"id\":'itemCls' + i}},[_c('div',{staticClass:\"theUnit\"},[_c(_vm.dynamicComponents_B[i],{tag:\"component\"})],1),_c('div',{staticClass:\"title\",attrs:{\"info\":\"tip提示\"}},[_vm._v(_vm._s(_vm.getInfoTip(_vm.vueFiles[`BarB${i + 1}`])))]),_c('div',{staticClass:\"btnBlock\"},[_c('span',{staticClass:\"iconfont icon-bianji\",attrs:{\"title\":\"编辑\"},on:{\"click\":function($event){return _vm.onHandleItem(`BarB${i + 1}`)}}}),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.vueFiles[`BarB${i + 1}`]),expression:\"vueFiles[`BarB${i + 1}`]\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"iconfont icon-fuzhi\",attrs:{\"title\":\"复制\"}}),_c('span',{staticClass:\"iconfont icon-yulan\",attrs:{\"title\":\"预览\"},on:{\"click\":function($event){return _vm.onPreview(`BarB${i + 1}`)}}})])])}),0)]),_c('div',{staticClass:\"header\"},[_c('h3',{staticClass:\"title\"},[_vm._v(\"柱状图·横向\")]),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.echDefDataB),expression:\"echDefDataB\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"rightCopy\"},[_vm._v(\"复制数据\")])]),_c('section',{staticClass:\"units-box\"},[_c('ul',{staticClass:\"unit-list\"},_vm._l((_vm.dynamicComponents_C),function(item,i){return _c('li',{key:i + 'C',staticClass:\"unit-item\",attrs:{\"id\":'itemCls' + i}},[_c('div',{staticClass:\"theUnit\"},[_c(_vm.dynamicComponents_C[i],{tag:\"component\"})],1),_c('div',{staticClass:\"title\",attrs:{\"info\":\"tip提示\"}},[_vm._v(_vm._s(_vm.getInfoTip(_vm.vueFiles[`BarC${i + 1}`])))]),_c('div',{staticClass:\"btnBlock\"},[_c('span',{staticClass:\"iconfont icon-bianji\",attrs:{\"title\":\"编辑\"},on:{\"click\":function($event){return _vm.onHandleItem(`BarC${i + 1}`)}}}),_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.vueFiles[`BarC${i + 1}`]),expression:\"vueFiles[`BarC${i + 1}`]\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"iconfont icon-fuzhi\",attrs:{\"title\":\"复制\"}}),_c('span',{staticClass:\"iconfont icon-yulan\",attrs:{\"title\":\"预览\"},on:{\"click\":function($event){return _vm.onPreview(`BarC${i + 1}`)}}})])])}),0)]),(_vm.isShowFullCode)?_c('FullScreenCodeNew',{attrs:{\"isshow\":_vm.isShowFullCode,\"codecontent\":_vm.codecontent},on:{\"update:isshow\":function($event){_vm.isShowFullCode=$event},\"update:codecontent\":function($event){_vm.codecontent=$event}}}):_vm._e(),(_vm.isShowFullPreview)?_c('FullScreenPreview',{attrs:{\"isshow\":_vm.isShowFullPreview},on:{\"update:isshow\":function($event){_vm.isShowFullPreview=$event}}},[_c(_vm.previewEchart,{tag:\"component\"}),_c('template',{slot:\"btn\"},[_c('span',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.vueFiles[`${_vm.previewEchart}`]),expression:\"vueFiles[`${previewEchart}`]\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.clipboardSuccess),expression:\"clipboardSuccess\",arg:\"success\"}],staticClass:\"btnicon\"},[_vm._v(\"复制\")])])],2):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"page\">\r\n    <!-- 1 -->\r\n    <div class=\"header\">\r\n      <h3 class=\"title\">柱状图·基础</h3>\r\n      <span class=\"rightCopy\" v-clipboard:copy=\"echDefDataA\" v-clipboard:success=\"clipboardSuccess\">复制数据</span>\r\n    </div>\r\n    <section class=\"units-box\">\r\n      <ul class=\"unit-list\">\r\n        <li class=\"unit-item\" v-for=\"(item, i) in dynamicComponents_A\" :key=\"i + 'A'\" :id=\"'itemCls' + i\">\r\n          <div class=\"theUnit\"><component :is=\"dynamicComponents_A[i]\" :titleText=\"`标题${i + 1}`\"></component></div>\r\n          <div class=\"title\" info=\"tip提示\">{{ getInfoTip(vueFiles[`BarA${i + 1}`]) }}</div>\r\n          <div class=\"btnBlock\">\r\n            <span class=\"iconfont icon-bianji\" title=\"编辑\" @click=\"onHandleItem(`BarA${i + 1}`)\"></span>\r\n            <span class=\"iconfont icon-fuzhi\" title=\"复制\" v-clipboard:copy=\"vueFiles[`BarA${i + 1}`]\" v-clipboard:success=\"clipboardSuccess\"></span>\r\n            <span class=\"iconfont icon-yulan\" title=\"预览\" @click=\"onPreview(`BarA${i + 1}`)\"></span>\r\n            <!-- <span class=\"iconfont icon-code-line\" title=\"显示代码\" @click=\"onTest(`BarA${i + 1}`)\"></span> -->\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n    <!-- 2 -->\r\n    <div class=\"header\">\r\n      <h3 class=\"title\">柱状图·横向</h3>\r\n      <span class=\"rightCopy\" v-clipboard:copy=\"echDefDataB\" v-clipboard:success=\"clipboardSuccess\">复制数据</span>\r\n    </div>\r\n    <section class=\"units-box\">\r\n      <ul class=\"unit-list\">\r\n        <li class=\"unit-item\" v-for=\"(item, i) in dynamicComponents_B\" :key=\"i + 'B'\" :id=\"'itemCls' + i\">\r\n          <div class=\"theUnit\"><component :is=\"dynamicComponents_B[i]\"></component></div>\r\n          <div class=\"title\" info=\"tip提示\">{{ getInfoTip(vueFiles[`BarB${i + 1}`]) }}</div>\r\n          <div class=\"btnBlock\">\r\n            <span class=\"iconfont icon-bianji\" title=\"编辑\" @click=\"onHandleItem(`BarB${i + 1}`)\"></span>\r\n            <span class=\"iconfont icon-fuzhi\" title=\"复制\" v-clipboard:copy=\"vueFiles[`BarB${i + 1}`]\" v-clipboard:success=\"clipboardSuccess\"></span>\r\n            <span class=\"iconfont icon-yulan\" title=\"预览\" @click=\"onPreview(`BarB${i + 1}`)\"></span>\r\n            <!-- <span class=\"iconfont icon-code-line\" title=\"显示代码\" @click=\"onTest(`BarA${i + 1}`)\"></span> -->\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n    <!-- 3 -->\r\n    <div class=\"header\">\r\n      <h3 class=\"title\">柱状图·横向</h3>\r\n      <span class=\"rightCopy\" v-clipboard:copy=\"echDefDataB\" v-clipboard:success=\"clipboardSuccess\">复制数据</span>\r\n    </div>\r\n    <section class=\"units-box\">\r\n      <ul class=\"unit-list\">\r\n        <li class=\"unit-item\" v-for=\"(item, i) in dynamicComponents_C\" :key=\"i + 'C'\" :id=\"'itemCls' + i\">\r\n          <div class=\"theUnit\"><component :is=\"dynamicComponents_C[i]\"></component></div>\r\n          <div class=\"title\" info=\"tip提示\">{{ getInfoTip(vueFiles[`BarC${i + 1}`]) }}</div>\r\n          <div class=\"btnBlock\">\r\n            <span class=\"iconfont icon-bianji\" title=\"编辑\" @click=\"onHandleItem(`BarC${i + 1}`)\"></span>\r\n            <span class=\"iconfont icon-fuzhi\" title=\"复制\" v-clipboard:copy=\"vueFiles[`BarC${i + 1}`]\" v-clipboard:success=\"clipboardSuccess\"></span>\r\n            <span class=\"iconfont icon-yulan\" title=\"预览\" @click=\"onPreview(`BarC${i + 1}`)\"></span>\r\n            <!-- <span class=\"iconfont icon-code-line\" title=\"显示代码\" @click=\"onTest(`BarA${i + 1}`)\"></span> -->\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n    <!-- 组件 -->\r\n    <FullScreenCodeNew v-if=\"isShowFullCode\" :isshow.sync=\"isShowFullCode\" :codecontent.sync=\"codecontent\"></FullScreenCodeNew>\r\n    <!-- 预览 -->\r\n    <FullScreenPreview v-if=\"isShowFullPreview\" :isshow.sync=\"isShowFullPreview\">\r\n      <component :is=\"previewEchart\"></component>\r\n      <template slot=\"btn\">\r\n        <span class=\"btnicon\" v-clipboard:copy=\"vueFiles[`${previewEchart}`]\" v-clipboard:success=\"clipboardSuccess\">复制</span>\r\n      </template>\r\n    </FullScreenPreview>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Vue from 'vue';\r\n  import { pop } from '@/utils/pop/index.js';\r\n  let vueFiles = {}; // components目录下的所有.vue 单文件原始内容放在这里\r\n  let dynamicComponents_All = [];\r\n\r\n  batchInit();\r\n  function batchInit() {\r\n    const files = require.context('./components/', true, /\\.vue$/);\r\n    files.keys().forEach(fileName => {\r\n      // 批量注册组件（组件名就是 vue文件名）\r\n      const componentConfig = files(fileName);\r\n      const componentName = fileName.replace(/^\\.\\//, '').replace(/\\.vue$/, '');\r\n      Vue.component(componentName, componentConfig.default || componentConfig);\r\n      // 批量引入.vue原始文件内容\r\n      const _fileName = fileName.replace(/\\.\\//, '');\r\n      const fileContent = require(`!!raw-loader!./components/${_fileName}`); // 批量获取.vue 单文件的内容，使用require\r\n      const fileKey = _fileName.replace('.vue', '');\r\n      vueFiles[fileKey] = fileContent.default;\r\n      dynamicComponents_All.push(fileKey);\r\n    });\r\n  }\r\n  export default {\r\n    data() {\r\n      return {\r\n        isShowFullCode: false,\r\n        isShowFullPreview: false,\r\n        previewEchart: '', // 预览的echart 组件\r\n        codecontent: 'hello world',\r\n        //\r\n        vueFiles: {},\r\n        //\r\n        dynamicComponents_A: ['BarA1'],\r\n        dynamicComponents_B: ['BarB1'],\r\n        dynamicComponents_C: ['BarC1'],\r\n        dynamicComponents_D: ['BarD1'],\r\n        dynamicComponents: ['BarA1', 'BarA2'],\r\n        // 数据结构\r\n        echDefDataA: `{\r\n          xData: ['2020年', '2021年', '2022年', '2023年'], // X轴\r\n          yData: [101, 202, 303, 404] // Y轴\r\n        }`,\r\n        echDefDataB: `{\r\n          xData: [5, 75, 115, 52.65, 25.75],  // X轴\r\n          yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']  // Y轴\r\n        }`\r\n        //\r\n      };\r\n    },\r\n    mounted() {\r\n      this.vueFiles = vueFiles;\r\n      //\r\n      this.dynamicComponents_A = dynamicComponents_All.filter(val => val.includes('BarA'));\r\n      this.dynamicComponents_B = dynamicComponents_All.filter(val => val.includes('BarB'));\r\n      this.dynamicComponents_C = dynamicComponents_All.filter(val => val.includes('BarC'));\r\n      this.dynamicComponents_D = dynamicComponents_All.filter(val => val.includes('BarD'));\r\n      // console.log('this.dynamicComponents_B', this.dynamicComponents_B);\r\n      //\r\n    },\r\n    methods: {\r\n      onHandleItem(key) {\r\n        // this.isShowFullScreen = true;\r\n        // this.codecontent = vueFiles[key];\r\n        this.isShowFullCode = true;\r\n        this.codecontent = vueFiles[key];\r\n      },\r\n      // 复制\r\n      clipboardSuccess() {\r\n        pop();\r\n      },\r\n      onPreview(str) {\r\n        this.isShowFullPreview = true;\r\n        this.previewEchart = str;\r\n      },\r\n      // 备注信息\r\n      getInfoTip(vueFileStr) {\r\n        if (!vueFileStr) return;\r\n        const nameRegex = /infoTip:\\s*['\"]([^'\"]+)['\"]/;\r\n        if (!nameRegex) return;\r\n        const nameMatch = vueFileStr.match(nameRegex);\r\n        const nameValue = (nameMatch && nameMatch[1]) || '备注：';\r\n        // console.log('name', nameValue);\r\n        return nameValue;\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  @import '@/views/EchartUnit/_comconfig/commonPage.scss';\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=bfffb1bc&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=bfffb1bc&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bfffb1bc\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\" />\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  import * as echarts from 'echarts';\\r\\n\\r\\n  const defaultEchdata = {\\r\\n    xData: [5, 75, 115, 52.65, 25.75],\\r\\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\\r\\n  };\\r\\n\\r\\n  export default {\\r\\n    infoTip: '备注：',\\r\\n    name: '',\\r\\n    props: {\\r\\n      echdata: {\\r\\n        type: [Object, Array],\\r\\n        default: () => defaultEchdata\\r\\n      },\\r\\n      titleText: {\\r\\n        type: String,\\r\\n        default: '年龄分布(单位：万人)'\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        eleId: `eleId_${Math.random()\\r\\n          .toString()\\r\\n          .substring(3, 6) + Date.now().toString(36)}`\\r\\n      };\\r\\n    },\\r\\n    watch: {\\r\\n      echdata: {\\r\\n        handler: function() {\\r\\n          this.drainitEchartm();\\r\\n        },\\r\\n        deep: true\\r\\n      }\\r\\n    },\\r\\n    created() {},\\r\\n    mounted() {\\r\\n      this.$echarts = echarts;\\r\\n      this.$nextTick(function() {\\r\\n        this.initEchart();\\r\\n        this.onHanleClick();\\r\\n      });\\r\\n    },\\r\\n    methods: {\\r\\n      // echart 初始化\\r\\n      initEchart() {\\r\\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\\r\\n\\r\\n        var option = {\\r\\n          title: {\\r\\n            text: this.titleText,\\r\\n            textStyle: {\\r\\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\\r\\n              fontSize: '14px', // 字体大小\\r\\n              fontWeight: 600 // 字体粗细\\r\\n            },\\r\\n            x: 'left'\\r\\n          },\\r\\n          tooltip: {\\r\\n            trigger: 'axis',\\r\\n            axisPointer: {\\r\\n              type: 'shadow'\\r\\n            }\\r\\n          },\\r\\n          legend: {\\r\\n            show: false\\r\\n          },\\r\\n          grid: [\\r\\n            {\\r\\n              left: '10',\\r\\n              right: '0',\\r\\n              bottom: '-15',\\r\\n              top: '30',\\r\\n              containLabel: true\\r\\n            }\\r\\n          ],\\r\\n          xAxis: [\\r\\n            {\\r\\n              show: false\\r\\n            }\\r\\n          ],\\r\\n          yAxis: [\\r\\n            {\\r\\n              // name: '年龄',\\r\\n              inverse: false,\\r\\n              axisLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: 'rgba(209, 209, 209, .3)'\\r\\n                }\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              },\\r\\n              axisLabel: {\\r\\n                color: '#fff',\\r\\n                interval: 0,\\r\\n                fontWeight: 'normal',\\r\\n                fontSize: 13,\\r\\n                formatter: function(value, index) {\\r\\n                  return value.length > 5 ? value.slice(0, 5) + '...' : value;\\r\\n                }\\r\\n              },\\r\\n              data: this.echdata.yData,\\r\\n              gridIndex: 0\\r\\n            }\\r\\n          ],\\r\\n          label: {\\r\\n            show: true,\\r\\n            position: 'right',\\r\\n            color: '#fff',\\r\\n            fontSize: 13,\\r\\n            fontWeight: 600\\r\\n          },\\r\\n          series: [\\r\\n            {\\r\\n              name: '数量',\\r\\n              type: 'bar',\\r\\n              barGap: '-100%',\\r\\n              data: this.echdata.xData,\\r\\n              barWidth: 8,\\r\\n              itemStyle: {\\r\\n                barBorderRadius: 30,\\r\\n                color: new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n                  { offset: 0, color: '#FAACA8' },\\r\\n                  { offset: 1, color: '#FA709A' }\\r\\n                ])\\r\\n              },\\r\\n              z: 91\\r\\n            },\\r\\n            {\\r\\n              name: '进度条背景',\\r\\n              type: 'bar',\\r\\n              barGap: '-100%',\\r\\n              data: this.echdata.xData.map(function(d) {\\r\\n                return barMax;\\r\\n              }),\\r\\n              barWidth: 8,\\r\\n              tooltip: {\\r\\n                show: false\\r\\n              },\\r\\n              itemStyle: {\\r\\n                normal: {\\r\\n                  barBorderRadius: 30,\\r\\n                  color: '#0A3069',\\r\\n                  barBorderColor: '#0A3069', // 边框色\\r\\n                  barBorderWidth: 1, // 边框宽度\\r\\n                  label: {\\r\\n                    show: false,\\r\\n                    textStyle: {\\r\\n                      color: 'rgba(255,255,255,1)'\\r\\n                    },\\r\\n                    position: 'right',\\r\\n                    formatter: function(p) {\\r\\n                      return this.echdata.xData[p.dataIndex];\\r\\n                    }\\r\\n                  }\\r\\n                }\\r\\n              },\\r\\n              z: 90\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\r\\n        echartEle.setOption(option, true);\\r\\n        window.addEventListener('resize', () => {\\r\\n          echartEle.resize();\\r\\n        });\\r\\n      },\\r\\n      getOptions() {\\r\\n        var fontColor = '#30eee9';\\r\\n        const options = {\\r\\n          backgroundColor: '#11183c',\\r\\n          grid: {\\r\\n            left: '5%',\\r\\n            right: '10%',\\r\\n            top: '20%',\\r\\n            bottom: '15%',\\r\\n            containLabel: true\\r\\n          },\\r\\n          tooltip: {\\r\\n            show: true,\\r\\n            trigger: 'item'\\r\\n          },\\r\\n          legend: {\\r\\n            show: true,\\r\\n            x: 'center',\\r\\n            y: '35',\\r\\n            icon: 'stack',\\r\\n            itemWidth: 10,\\r\\n            itemHeight: 10,\\r\\n            textStyle: {\\r\\n              color: '#1bb4f6'\\r\\n            },\\r\\n            data: ['已采纳', '已发布', '浏览量']\\r\\n          },\\r\\n          xAxis: [\\r\\n            {\\r\\n              type: 'category',\\r\\n              boundaryGap: false,\\r\\n              axisLabel: {\\r\\n                color: fontColor\\r\\n              },\\r\\n              axisLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: '#397cbc'\\r\\n                }\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: '#195384'\\r\\n                }\\r\\n              },\\r\\n              data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\\r\\n            }\\r\\n          ],\\r\\n          yAxis: [\\r\\n            {\\r\\n              type: 'value',\\r\\n              name: '信息量',\\r\\n              min: 0,\\r\\n              max: 1000,\\r\\n              axisLabel: {\\r\\n                formatter: '{value}',\\r\\n                textStyle: {\\r\\n                  color: '#2ad1d2'\\r\\n                }\\r\\n              },\\r\\n              axisLine: {\\r\\n                lineStyle: {\\r\\n                  color: '#27b4c2'\\r\\n                }\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: '#11366e'\\r\\n                }\\r\\n              }\\r\\n            },\\r\\n            {\\r\\n              type: 'value',\\r\\n              name: '浏览量',\\r\\n              min: 0,\\r\\n              max: 1000,\\r\\n              axisLabel: {\\r\\n                formatter: '{value} 人',\\r\\n                textStyle: {\\r\\n                  color: '#186afe'\\r\\n                }\\r\\n              },\\r\\n              axisLine: {\\r\\n                lineStyle: {\\r\\n                  color: '#186afe'\\r\\n                }\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: '#11366e'\\r\\n                }\\r\\n              }\\r\\n            }\\r\\n          ],\\r\\n          series: [\\r\\n            {\\r\\n              name: '已采纳',\\r\\n              type: 'line',\\r\\n              stack: '总量',\\r\\n              symbol: 'circle',\\r\\n              symbolSize: 8,\\r\\n              itemStyle: {\\r\\n                normal: {\\r\\n                  color: '#0092f6',\\r\\n                  lineStyle: {\\r\\n                    color: '#0092f6',\\r\\n                    width: 1\\r\\n                  },\\r\\n                  areaStyle: {\\r\\n                    //color: '#94C9EC'\\r\\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\\r\\n                      {\\r\\n                        offset: 0,\\r\\n                        color: 'rgba(7,44,90,0.3)'\\r\\n                      },\\r\\n                      {\\r\\n                        offset: 1,\\r\\n                        color: 'rgba(0,146,246,0.9)'\\r\\n                      }\\r\\n                    ])\\r\\n                  }\\r\\n                }\\r\\n              },\\r\\n              markPoint: {\\r\\n                itemStyle: {\\r\\n                  normal: {\\r\\n                    color: 'red'\\r\\n                  }\\r\\n                }\\r\\n              },\\r\\n              data: [120, 132, 101, 134, 90, 230, 210, 182, 191, 234, 290, 330]\\r\\n            },\\r\\n            {\\r\\n              name: '已发布',\\r\\n              type: 'line',\\r\\n              stack: '总量',\\r\\n              symbol: 'circle',\\r\\n              symbolSize: 8,\\r\\n\\r\\n              itemStyle: {\\r\\n                normal: {\\r\\n                  color: '#00d4c7',\\r\\n                  lineStyle: {\\r\\n                    color: '#00d4c7',\\r\\n                    width: 1\\r\\n                  },\\r\\n                  areaStyle: {\\r\\n                    //color: '#94C9EC'\\r\\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\\r\\n                      {\\r\\n                        offset: 0,\\r\\n                        color: 'rgba(7,44,90,0.3)'\\r\\n                      },\\r\\n                      {\\r\\n                        offset: 1,\\r\\n                        color: 'rgba(0,212,199,0.9)'\\r\\n                      }\\r\\n                    ])\\r\\n                  }\\r\\n                }\\r\\n              },\\r\\n              data: [220, 182, 191, 234, 290, 330, 310, 201, 154, 190, 330, 410]\\r\\n            },\\r\\n            {\\r\\n              name: '浏览量',\\r\\n              type: 'line',\\r\\n              stack: '总量',\\r\\n              symbol: 'circle',\\r\\n              symbolSize: 8,\\r\\n              itemStyle: {\\r\\n                normal: {\\r\\n                  color: '#aecb56',\\r\\n                  lineStyle: {\\r\\n                    color: '#aecb56',\\r\\n                    width: 1\\r\\n                  },\\r\\n                  areaStyle: {\\r\\n                    //color: '#94C9EC'\\r\\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\\r\\n                      {\\r\\n                        offset: 0,\\r\\n                        color: 'rgba(7,44,90,0.3)'\\r\\n                      },\\r\\n                      {\\r\\n                        offset: 1,\\r\\n                        color: 'rgba(114,144,89,0.9)'\\r\\n                      }\\r\\n                    ])\\r\\n                  }\\r\\n                }\\r\\n              },\\r\\n              data: [150, 232, 201, 154, 190, 330, 410, 150, 232, 201, 154, 190]\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n      },\\r\\n      // 点击事件\\r\\n      onHanleClick() {\\r\\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\\r\\n        echartEle.getZr().on('click', params => {\\r\\n          console.log('点击饿了', params);\\r\\n          const pointInPixel = [params.offsetX, params.offsetY];\\r\\n          if (echartEle.containPixel('grid', pointInPixel)) {\\r\\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\\r\\n            console.log(xIndex);\\r\\n          }\\r\\n          // this.$router.push('/sy-chanyelian')\\r\\n          //\\r\\n          // var options = echartEle.getOption()\\r\\n          // console.log('options配置', options)\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped>\\r\\n  .echart-unit {\\r\\n    height: 100%;\\r\\n  }\\r\\n</style>\\r\\n\";","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        const seriesArrData = [\r\n          {\r\n            // 柱体1\r\n            name: '数量',\r\n            data: this.echdata.yData,\r\n            type: 'bar',\r\n            barMaxWidth: 'auto',\r\n            barWidth: '10',\r\n            showBackground: true,\r\n            backgroundStyle: {\r\n              color: 'rgba(20, 88, 168, 0.2)'\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: function(params) {\r\n                  var colorList = ['#02AFD5', '#F3CB6B'];\r\n                  return colorList[params.dataIndex % colorList.length];\r\n                },\r\n                label: {\r\n                  position: 'top',\r\n                  show: true, // 开启显示\r\n                  formatter: ['{a|{c}}'].join(','),\r\n                  rich: {\r\n                    a: {\r\n                      color: '#fff',\r\n                      align: 'center',\r\n                      fontSize: '12px'\r\n                    }\r\n                  },\r\n                  // position: 'top', // 在上方显示\r\n                  textStyle: {\r\n                    // 数值样式\r\n                    color: '#FDFEFF',\r\n                    fontSize: 12\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            zlevel: 2\r\n          }\r\n        ];\r\n        const option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -2,\r\n            textStyle: {\r\n              color: '#fff', // 备用字体色 '#2B9DF2' '#2992ff',\r\n              fontSize: 14, // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              // 坐标轴指示器，坐标轴触发有效\r\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n            }\r\n          },\r\n          grid: {\r\n            right: '5%',\r\n            left: '5',\r\n            bottom: '0',\r\n            top: '30',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: this.echdata.xData,\r\n            // 坐标轴\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#1d71b7'\r\n              }\r\n            },\r\n            // 坐标值标注\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                color: '#96C2FF',\r\n                fontSize: 12\r\n              }\r\n            },\r\n            axisTick: {\r\n              show: false\r\n            }\r\n          },\r\n          yAxis: {\r\n            // 坐标轴\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#1d71b7'\r\n              }\r\n            },\r\n            // 坐标值标注\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                color: '#96C2FF',\r\n                fontSize: 12\r\n              }\r\n            },\r\n            // 分格线\r\n            splitLine: {\r\n              show: false,\r\n              lineStyle: {\r\n                color: '#4784e8'\r\n              }\r\n            }\r\n          },\r\n          series: seriesArrData\r\n        };\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option, true);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA3.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA3.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA3.vue?vue&type=template&id=4bd8d17e&scoped=true\"\nimport script from \"./BarA3.vue?vue&type=script&lang=js\"\nexport * from \"./BarA3.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA3.vue?vue&type=style&index=0&id=4bd8d17e&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4bd8d17e\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            // subtext: '2023年6月8日',\r\n            // left: 'center',\r\n            textStyle: {\r\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\r\n              fontSize: '14px', // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          legend: {\r\n            // 图例组件，颜色和名字\r\n            top: 0,\r\n            right: 0,\r\n            textStyle: {\r\n              color: 'rgba(255, 255, 255, .5)',\r\n              fontSize: 14\r\n            },\r\n            icon: 'roundRect',\r\n            itemWidth: 16,\r\n            itemHeight: 10,\r\n            itemGap: 5\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            backgroundColor: 'rgba(0, 0, 0, .8)',\r\n            borderColor: 'rgba(0, 0, 0, .8)',\r\n            textStyle: {\r\n              color: '#fff',\r\n              fontSize: 14\r\n            },\r\n            axisPointer: {\r\n              // 坐标轴指示器，坐标轴触发有效\r\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n            }\r\n          },\r\n          grid: [\r\n            {\r\n              left: '3%',\r\n              right: '3%',\r\n              bottom: '-5',\r\n              top: '20%',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: {\r\n            type: 'category',\r\n            axisLabel: {\r\n              // color: 'red',\r\n              color: '#96C2FF',\r\n              fontSize: 10,\r\n              interval: 0,\r\n              rotate: 20\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: 'rgba(209, 209, 209, .3)'\r\n              }\r\n            },\r\n            data: this.echdata.xData\r\n          },\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              name: '',\r\n              axisLabel: {\r\n                // color: 'red',\r\n                color: '#96C2FF',\r\n                fontSize: 12,\r\n                fontWeight: 100\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)',\r\n                  fontSize: 12\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              smooth: true,\r\n              barWidth: 6,\r\n              // showAllSymbol: true,\r\n              // symbol: 'circle',\r\n              // symbolSize: 6,\r\n              color: '#10D6FE',\r\n              lineStyle: {\r\n                width: 1,\r\n                type: 'dashed'\r\n              },\r\n              label: {\r\n                show: true,\r\n                color: '#fff',\r\n                fontSize: '12',\r\n                fontWeight: 600,\r\n                position: 'top',\r\n                formatter: function(params) {\r\n                  return params.value + '人';\r\n                }\r\n              },\r\n              areaStyle: {\r\n                color: {\r\n                  type: 'linear',\r\n                  x: 0,\r\n                  y: 0,\r\n                  x2: 0,\r\n                  y2: 1,\r\n                  colorStops: [\r\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\r\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\r\n                  ],\r\n                  globalCoord: false\r\n                }\r\n              },\r\n              data: this.echdata.yData\r\n            }\r\n          ]\r\n        };\r\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option, true);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA2.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA2.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA2.vue?vue&type=template&id=0edb0670&scoped=true\"\nimport script from \"./BarA2.vue?vue&type=script&lang=js\"\nexport * from \"./BarA2.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA2.vue?vue&type=style&index=0&id=0edb0670&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0edb0670\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=bfffb1bc&prod&lang=scss&scoped=true\"","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\n    yData: [101, 202, 303, 404],\\n    yData2: [110, 220, 333, 444],\\n    yData3: [131, 252, 363, 484]\\n  };\\n\\n  export default {\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '标题'\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`,\\n        chart: null\\n      };\\n    },\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(() => {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        // var data1 = this.echdata.xData;\\n        const seriesArrData = [\\n          {\\n            name: '用户总数',\\n            type: 'bar',\\n            barWidth: '15%',\\n            itemStyle: {\\n              normal: {\\n                color: '#9C9AFF',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\\n          },\\n          {\\n            name: '其它',\\n            type: 'line',\\n            barWidth: '15%',\\n            smooth: true,\\n            itemStyle: {\\n              normal: {\\n                color: '#FFCA71',\\n                barBorderRadius: [12, 12, 0, 0]\\n              }\\n            },\\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\\n          }\\n        ];\\n        const option = {\\n          title: {\\n            text: this.titleText,\\n            top: -2,\\n            textStyle: {\\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\\n              fontSize: '14px', // 字体大小\\n              fontWeight: 600 // 字体粗细\\n            }\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\\n            }\\n          },\\n          grid: {\\n            right: '5%',\\n            left: '5',\\n            bottom: '0',\\n            top: '30',\\n            containLabel: true\\n          },\\n          xAxis: {\\n            type: 'category',\\n            data: this.echdata.xData,\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            axisTick: {\\n              show: false\\n            }\\n          },\\n          yAxis: {\\n            // 坐标轴\\n            axisLine: {\\n              show: true,\\n              lineStyle: {\\n                color: '#1d71b7'\\n              }\\n            },\\n            // 坐标值标注\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                color: '#96C2FF',\\n                fontSize: 12\\n              }\\n            },\\n            // 分格线\\n            splitLine: {\\n              show: false,\\n              lineStyle: {\\n                color: '#4784e8'\\n              }\\n            }\\n          },\\n          series: seriesArrData\\n        };\\n        //\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      }\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC3.vue?vue&type=style&index=0&id=0337dc24&prod&lang=scss&scoped=true\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB1.vue?vue&type=style&index=0&id=489e24e2&prod&lang=scss&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\" />\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: [5, 75, 115, 52.65, 25.75],\r\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\r\n  };\r\n\r\n  export default {\r\n    infoTip: '',\r\n    name: '',\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '年龄分布(单位：万人)'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`\r\n      };\r\n    },\r\n    watch: {\r\n      echdata: {\r\n        handler: function() {\r\n          this.drainitEchartm();\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n    created() {},\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(function() {\r\n        this.initEchart();\r\n        this.onHanleClick();\r\n      });\r\n    },\r\n    methods: {\r\n      // echart 初始化\r\n      initEchart() {\r\n        var colorList = [\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ])\r\n        ];\r\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\r\n        var seriesBgData = [];\r\n        for (var i = 0; i < this.echdata.xData.length; i++) {\r\n          seriesBgData.push(barMax);\r\n        }\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            textStyle: {\r\n              color: '#fff', // 备用字体色 '#2B9DF2'\r\n              fontSize: 14, // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            },\r\n            x: 'left'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n            // formatter: function(params) {\r\n            //   // return params[0].name + '<br>' + params[0].value + ' 万人'\r\n            //   return params[0].name + '<br>' + params[0].value;\r\n            // }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              top: '20px',\r\n              left: '10',\r\n              right: '10',\r\n              bottom: '-20',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              show: false,\r\n              name: '万人',\r\n              nameTextStyle: {\r\n                align: 'right',\r\n                color: '#FFFFFF'\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                fontSize: 13,\r\n                color: '#FFFFFF'\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              // name: '年龄',\r\n              triggerEvent: true,\r\n              inverse: false,\r\n              axisLine: {\r\n                show: false,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#96C2FF',\r\n                // color: '#fff',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 13\r\n              },\r\n              data: this.echdata.yData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              barCategoryGap: '100%',\r\n              data: this.echdata.xData.map((item, i) => {\r\n                const itemStyle = {\r\n                  color: i > 3 ? colorList[3] : colorList[i]\r\n                };\r\n                return {\r\n                  value: item,\r\n                  itemStyle: itemStyle\r\n                };\r\n              }),\r\n              barWidth: 10,\r\n              itemStyle: {\r\n                barBorderRadius: 30\r\n              },\r\n              z: 91,\r\n              label: {\r\n                show: true,\r\n                distance: 15,\r\n                color: '#fff',\r\n                fontSize: '14',\r\n                fontWeight: 600,\r\n                position: 'right'\r\n              }\r\n            },\r\n            {\r\n              name: '进度条背景',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              barCategoryGap: '200%',\r\n              data: this.echdata.xData.map(function(d) {\r\n                return barMax;\r\n              }),\r\n              barWidth: 10,\r\n              tooltip: {\r\n                show: false\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  barBorderRadius: 30,\r\n                  color: '#1c1d47',\r\n                  // color: '#204b86',\r\n                  barBorderColor: '#204b86', // 边框色\r\n                  barBorderWidth: 1, // 边框宽度\r\n                  label: {\r\n                    show: false,\r\n                    textStyle: {\r\n                      color: 'rgba(255,255,255,1)'\r\n                    },\r\n                    position: 'right',\r\n                    formatter: function(p) {\r\n                      return this.echdata.xData[p.dataIndex];\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              z: 90\r\n            }\r\n          ]\r\n        };\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option, true);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      },\r\n      // 点击事件\r\n      onHanleClick() {\r\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\r\n        echartEle.getZr().on('click', params => {\r\n          console.log('点击饿了', params);\r\n          const pointInPixel = [params.offsetX, params.offsetY];\r\n          if (echartEle.containPixel('grid', pointInPixel)) {\r\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\r\n            console.log(xIndex);\r\n          }\r\n          // this.$router.push('/sy-chanyelian')\r\n          //\r\n          // var options = echartEle.getOption()\r\n          // console.log('options配置', options)\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB3.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB3.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarB3.vue?vue&type=template&id=599ff382&scoped=true\"\nimport script from \"./BarB3.vue?vue&type=script&lang=js\"\nexport * from \"./BarB3.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarB3.vue?vue&type=style&index=0&id=599ff382&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"599ff382\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\n</template>\\n\\n<script>\\n  import * as echarts from 'echarts';\\n\\n  const defaultEchdata = {\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\n    yData: [4.2, 3.2, 4.8, 3.5],\\n    yData2: [4.8, 3.5, 2.9, 2.8, 3, 5]\\n  };\\n  const defaultSeriesName = ['手机销量', '电脑销量'];\\n\\n  export default {\\n    props: {\\n      echdata: {\\n        type: [Object, Array],\\n        default: () => defaultEchdata\\n      },\\n      titleText: {\\n        type: String,\\n        default: '标题'\\n      },\\n      seriesname: {\\n        type: [Object, Array],\\n        default: () => defaultSeriesName\\n      }\\n    },\\n    data() {\\n      return {\\n        eleId: `eleId_${Math.random()\\n          .toString()\\n          .substring(3, 6) + Date.now().toString(36)}`,\\n        chart: null\\n      };\\n    },\\n    mounted() {\\n      this.$echarts = echarts;\\n      this.$nextTick(() => {\\n        this.initEchart();\\n      });\\n    },\\n    methods: {\\n      initEchart() {\\n        const option = this.getOptions();\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\n        echartEle.setOption(option);\\n        window.addEventListener('resize', () => {\\n          echartEle.resize();\\n        });\\n      },\\n      getOptions() {\\n        const options = {\\n          title: {\\n            text: this.titleText,\\n            top: 'left',\\n            left: 'top',\\n            textStyle: {\\n              align: 'left',\\n              color: '#fff',\\n              fontSize: 14\\n            }\\n          },\\n          backgroundColor: '#0f375f',\\n          grid: {\\n            top: '50px',\\n            right: '30px',\\n            bottom: '20px' //也可设置left和right设置距离来控制图表的大小\\n          },\\n          tooltip: {\\n            trigger: 'axis',\\n            axisPointer: {\\n              type: 'shadow',\\n              label: {\\n                show: true\\n              }\\n            }\\n          },\\n          legend: {\\n            data: ['手机销量', '笔记本销量'],\\n            top: '15%',\\n            textStyle: {\\n              color: '#ffffff'\\n            }\\n          },\\n          xAxis: {\\n            data: this.echdata.xData,\\n            axisLine: {\\n              show: true, //隐藏X轴轴线\\n              lineStyle: {\\n                color: '#01FCE3'\\n              }\\n            },\\n            axisTick: {\\n              show: true //隐藏X轴刻度\\n            },\\n            axisLabel: {\\n              show: true,\\n              textStyle: {\\n                // color: '#ebf8ac' //X轴文字颜色\\n              }\\n            }\\n          },\\n          yAxis: [\\n            {\\n              type: 'value',\\n              name: '亿元',\\n              nameTextStyle: {\\n                color: '#ebf8ac'\\n              },\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: true\\n              },\\n              axisLine: {\\n                show: true,\\n                lineStyle: {\\n                  color: '#FFFFFF'\\n                }\\n              },\\n              axisLabel: {\\n                show: true,\\n                textStyle: {\\n                  color: '#ebf8ac'\\n                }\\n              }\\n            },\\n            {\\n              type: 'value',\\n              name: '同比',\\n              nameTextStyle: {\\n                color: '#ebf8ac'\\n              },\\n              position: 'right',\\n              splitLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              },\\n              axisLine: {\\n                show: false\\n              },\\n              axisLabel: {\\n                show: true,\\n                formatter: '{value} %', //右侧Y轴文字显示\\n                textStyle: {\\n                  color: '#ebf8ac'\\n                }\\n              }\\n            },\\n            {\\n              type: 'value',\\n              gridIndex: 0,\\n              min: 50,\\n              max: 100,\\n              splitNumber: 8,\\n              splitLine: {\\n                show: false\\n              },\\n              axisLine: {\\n                show: false\\n              },\\n              axisTick: {\\n                show: false\\n              },\\n              axisLabel: {\\n                show: false\\n              },\\n              splitArea: {\\n                show: true,\\n                areaStyle: {\\n                  color: ['rgba(250,250,250,0.0)', 'rgba(250,250,250,0.05)']\\n                }\\n              }\\n            }\\n          ],\\n          series: [\\n            {\\n              name: '手机销量',\\n              type: 'line',\\n              yAxisIndex: 1, //使用的 y 轴的 index，在单个图表实例中存在多个 y轴的时候有用\\n              smooth: true, //平滑曲线显示\\n              showAllSymbol: true, //显示所有图形。\\n              symbol: 'circle', //标记的图形为实心圆\\n              symbolSize: 10, //标记的大小\\n              itemStyle: {\\n                //折线拐点标志的样式\\n                color: '#058cff'\\n              },\\n              lineStyle: {\\n                color: '#058cff'\\n              },\\n              areaStyle: {\\n                color: 'rgba(5,140,255, 0.2)'\\n              },\\n              data: this.echdata.yData\\n            },\\n            {\\n              name: '笔记本销量',\\n              type: 'bar',\\n              barWidth: 10,\\n              itemStyle: {\\n                normal: {\\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\\n                    {\\n                      offset: 0,\\n                      color: '#00FFE3'\\n                    },\\n                    {\\n                      offset: 1,\\n                      color: '#4693EC'\\n                    }\\n                  ])\\n                }\\n              },\\n              data: this.echdata.yData2\\n            }\\n          ]\\n        };\\n        return options;\\n      }\\n      //\\n    }\\n  };\\n</script>\\n\\n<style lang=\\\"scss\\\" scoped>\\n  .echart-unit {\\n    height: 100%;\\n  }\\n</style>\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarB3.vue?vue&type=style&index=0&id=599ff382&prod&lang=scss&scoped=true\"","export default \"<template>\\r\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  import * as echarts from 'echarts';\\r\\n\\r\\n  const defaultEchdata = {\\r\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\r\\n    yData: [101, 202, 303, 404]\\r\\n  };\\r\\n  const defaultSeriesName = ['手机销量', '电脑销量'];\\r\\n  export default {\\r\\n    props: {\\r\\n      echdata: {\\r\\n        type: [Object, Array],\\r\\n        default: () => defaultEchdata\\r\\n      },\\r\\n      titleText: {\\r\\n        type: String,\\r\\n        default: '标题'\\r\\n      },\\r\\n      seriesname: {\\r\\n        type: [Object, Array],\\r\\n        default: () => defaultSeriesName\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        eleId: `eleId_${Math.random()\\r\\n          .toString()\\r\\n          .substring(3, 6) + Date.now().toString(36)}`,\\r\\n        chart: null\\r\\n      };\\r\\n    },\\r\\n    mounted() {\\r\\n      this.$echarts = echarts;\\r\\n      this.$nextTick(() => {\\r\\n        this.initEchart();\\r\\n      });\\r\\n    },\\r\\n    methods: {\\r\\n      initEchart() {\\r\\n        const option = this.getOptions();\\r\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\r\\n        echartEle.setOption(option);\\r\\n        window.addEventListener('resize', () => {\\r\\n          echartEle.resize();\\r\\n        });\\r\\n      },\\r\\n      getOptions() {\\r\\n        var min = 50;\\r\\n        const options = {\\r\\n          backgroundColor: '#111c4e',\\r\\n          color: ['#3398DB'],\\r\\n          tooltip: {\\r\\n            trigger: 'axis',\\r\\n            axisPointer: {\\r\\n              type: 'line',\\r\\n              lineStyle: {\\r\\n                opacity: 0\\r\\n              }\\r\\n            }\\r\\n            // formatter: function(prams) {\\r\\n            //   if (prams[0].data === min) {\\r\\n            //     return '合格率：0%';\\r\\n            //   } else {\\r\\n            //     return '合格率：' + prams[0].data + '%';\\r\\n            //   }\\r\\n            // }\\r\\n          },\\r\\n          legend: {\\r\\n            data: ['直接访问', '背景'],\\r\\n            show: false\\r\\n          },\\r\\n          grid: {\\r\\n            left: '0%',\\r\\n            right: '0%',\\r\\n            bottom: '0%',\\r\\n            top: '7%',\\r\\n            // height: '85%',\\r\\n            containLabel: true,\\r\\n            z: 22\\r\\n          },\\r\\n          xAxis: [\\r\\n            {\\r\\n              type: 'category',\\r\\n              gridIndex: 0,\\r\\n              data: this.echdata.xData,\\r\\n              axisTick: {\\r\\n                alignWithLabel: true\\r\\n              },\\r\\n              axisLine: {\\r\\n                lineStyle: {\\r\\n                  color: '#0c3b71'\\r\\n                }\\r\\n              },\\r\\n              axisLabel: {\\r\\n                show: true,\\r\\n                color: 'rgb(170,170,170)',\\r\\n                fontSize: 12\\r\\n              }\\r\\n            }\\r\\n          ],\\r\\n          yAxis: [\\r\\n            {\\r\\n              type: 'value',\\r\\n              gridIndex: 0,\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              },\\r\\n              // min: min,\\r\\n              // max: 100,\\r\\n              axisLine: {\\r\\n                lineStyle: {\\r\\n                  color: '#0c3b71'\\r\\n                }\\r\\n              },\\r\\n              axisLabel: {\\r\\n                color: 'rgb(170,170,170)',\\r\\n                formatter: '{value} 人'\\r\\n              }\\r\\n            },\\r\\n            {\\r\\n              type: 'value',\\r\\n              gridIndex: 0,\\r\\n              min: min,\\r\\n              max: 100,\\r\\n              splitNumber: 12,\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              },\\r\\n              axisLabel: {\\r\\n                show: false\\r\\n              },\\r\\n              splitArea: {\\r\\n                show: true,\\r\\n                areaStyle: {\\r\\n                  color: ['rgba(250,250,250,0.0)', 'rgba(250,250,250,0.05)']\\r\\n                }\\r\\n              }\\r\\n            }\\r\\n          ],\\r\\n          series: [\\r\\n            {\\r\\n              name: '合格率',\\r\\n              type: 'bar',\\r\\n              barWidth: '10',\\r\\n              xAxisIndex: 0,\\r\\n              yAxisIndex: 0,\\r\\n              itemStyle: {\\r\\n                normal: {\\r\\n                  barBorderRadius: 30,\\r\\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\\r\\n                    {\\r\\n                      offset: 0,\\r\\n                      color: '#00feff'\\r\\n                    },\\r\\n                    {\\r\\n                      offset: 0.5,\\r\\n                      color: '#027eff'\\r\\n                    },\\r\\n                    {\\r\\n                      offset: 1,\\r\\n                      color: '#0286ff'\\r\\n                    }\\r\\n                  ])\\r\\n                }\\r\\n              },\\r\\n              data: this.echdata.yData,\\r\\n              zlevel: 11\\r\\n            },\\r\\n            {\\r\\n              name: '背景',\\r\\n              type: 'bar',\\r\\n              barWidth: '20',\\r\\n              xAxisIndex: 0,\\r\\n              yAxisIndex: 1,\\r\\n              // barGap: '-135%',\\r\\n              barGap: '-1.5px',\\r\\n              data: [100, 100, 100, 100, 100, 100, 100],\\r\\n              itemStyle: {\\r\\n                normal: {\\r\\n                  color: 'rgba(255,255,255,0.1)'\\r\\n                }\\r\\n              },\\r\\n              zlevel: 9\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n        return options;\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped>\\r\\n  .echart-unit {\\r\\n    height: 100%;\\r\\n  }\\r\\n</style>\\r\\n\";","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarC1.vue?vue&type=style&index=0&id=7d30ec4e&prod&lang=scss&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"color\":\"#fff\"}},[_vm._v(\" echart图 \")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"\" style=\"color:#fff\">\r\n    echart图\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {};\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA8.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA8.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA8.vue?vue&type=template&id=1fefdfbc&scoped=true\"\nimport script from \"./BarA8.vue?vue&type=script&lang=js\"\nexport * from \"./BarA8.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1fefdfbc\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        // var data1 = this.echdata.xData;\r\n        const seriesArrData = [\r\n          {\r\n            // 柱体1\r\n            name: '数量',\r\n            data: this.echdata.yData,\r\n            type: 'bar',\r\n            barMaxWidth: 'auto',\r\n            barWidth: '10',\r\n            showBackground: true,\r\n            backgroundStyle: {\r\n              color: 'rgba(20, 88, 168, 0.2)'\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: params => {\r\n                  var colorList = [['#2D98DF', '#0B244C']];\r\n                  47;\r\n                  return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                    {\r\n                      offset: 0,\r\n                      color: colorList[0][0]\r\n                    },\r\n                    {\r\n                      offset: 0.5,\r\n                      color: colorList[0][0]\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: colorList[0][1]\r\n                    }\r\n                  ]);\r\n                },\r\n                label: {\r\n                  show: true,\r\n                  position: 'top',\r\n                  textStyle: {\r\n                    fontSize: 14,\r\n                    fontWeight: 600,\r\n                    color: '#D1DBFF' // 字体颜色\r\n                  }\r\n                }\r\n              },\r\n              barBorderRadius: 30\r\n            },\r\n            zlevel: 2\r\n          }\r\n        ];\r\n        const option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -2,\r\n            textStyle: {\r\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\r\n              fontSize: '14px', // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\r\n            }\r\n          },\r\n          grid: {\r\n            right: '5%',\r\n            left: '5',\r\n            bottom: '0',\r\n            top: '30',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: this.echdata.xData,\r\n            // 坐标轴\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#1d71b7'\r\n              }\r\n            },\r\n            // 坐标值标注\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                color: '#96C2FF',\r\n                fontSize: 12\r\n              }\r\n            },\r\n            axisTick: {\r\n              show: false\r\n            }\r\n          },\r\n          yAxis: {\r\n            // 坐标轴\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#1d71b7'\r\n              }\r\n            },\r\n            // 坐标值标注\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                color: '#96C2FF',\r\n                fontSize: 12\r\n              }\r\n            },\r\n            // 分格线\r\n            splitLine: {\r\n              show: false,\r\n              lineStyle: {\r\n                color: '#4784e8'\r\n              }\r\n            }\r\n          },\r\n          series: seriesArrData\r\n        };\r\n        //\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA1.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA1.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA1.vue?vue&type=template&id=76cbb846&scoped=true\"\nimport script from \"./BarA1.vue?vue&type=script&lang=js\"\nexport * from \"./BarA1.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA1.vue?vue&type=style&index=0&id=76cbb846&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"76cbb846\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"echart-unit\",attrs:{\"id\":_vm.eleId}},[_vm._v(\"组件\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        var colorList = [\r\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\r\n            { offset: 0, color: '#EF624A' },\r\n            { offset: 1, color: '#FF9482' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\r\n            { offset: 0, color: '#1277CC' },\r\n            { offset: 1, color: '#00E7FD' }\r\n          ])\r\n        ];\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            textStyle: {\r\n              color: '#fff', // 字体颜色\r\n              fontSize: '14px', // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            },\r\n            x: 'left'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              left: '10',\r\n              right: '10',\r\n              bottom: '0',\r\n              top: '35',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              // name: '年龄',\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#fff',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 12\r\n              },\r\n              data: this.echdata.xData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              show: true,\r\n              //   name: '万人',\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                fontSize: 12,\r\n                color: '#fff'\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          label: {\r\n            show: true,\r\n            position: 'top',\r\n            color: '#fff',\r\n            fontSize: 13,\r\n            fontWeight: 600\r\n          },\r\n          series: [\r\n            {\r\n              // name: '柱状图',\r\n              type: 'bar',\r\n              data: this.echdata.yData.map((item, i) => {\r\n                const itemStyle = {\r\n                  color: i % 2 === 1 ? colorList[0] : colorList[1]\r\n                };\r\n                return {\r\n                  value: item,\r\n                  itemStyle: itemStyle\r\n                };\r\n              }),\r\n              barWidth: 15\r\n            }\r\n          ]\r\n        };\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA6.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarA6.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarA6.vue?vue&type=template&id=08759bc4&scoped=true\"\nimport script from \"./BarA6.vue?vue&type=script&lang=js\"\nexport * from \"./BarA6.vue?vue&type=script&lang=js\"\nimport style0 from \"./BarA6.vue?vue&type=style&index=0&id=08759bc4&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"08759bc4\",\n  null\n  \n)\n\nexport default component.exports","export default \"<template>\\r\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\" />\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  import * as echarts from 'echarts';\\r\\n\\r\\n  const defaultEchdata = {\\r\\n    xData: [5, 75, 115, 52.65, 25.75],\\r\\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\\r\\n  };\\r\\n\\r\\n  export default {\\r\\n    infoTip: '备注：Y轴数据倒置',\\r\\n    name: '',\\r\\n    props: {\\r\\n      echdata: {\\r\\n        type: Object,\\r\\n        default: () => defaultEchdata\\r\\n      },\\r\\n      titleText: {\\r\\n        type: String,\\r\\n        default: '年龄分布(单位：万人)'\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        eleId: `echartsLine${Number(\\r\\n          Math.random()\\r\\n            .toString()\\r\\n            .substr(3, 3) + Date.now()\\r\\n        ).toString(36)}`\\r\\n      };\\r\\n    },\\r\\n    watch: {\\r\\n      echdata: {\\r\\n        handler: function() {\\r\\n          this.initEchart();\\r\\n        },\\r\\n        deep: true\\r\\n      }\\r\\n    },\\r\\n    created() {},\\r\\n    mounted() {\\r\\n      this.$echarts = echarts;\\r\\n      this.$nextTick(function() {\\r\\n        this.initEchart();\\r\\n      });\\r\\n    },\\r\\n    methods: {\\r\\n      initEchart() {\\r\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\r\\n        const colorList = [\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\\r\\n            { offset: 0, color: '#395CFE' },\\r\\n            { offset: 1, color: '#2EC7CF' }\\r\\n          ])\\r\\n        ];\\r\\n        const option = {\\r\\n          title: {\\r\\n            text: this.titleText,\\r\\n            top: -4,\\r\\n            textStyle: {\\r\\n              // color: '#2992ff',\\r\\n              color: '#fff', // 备用字体色 '#2B9DF2'\\r\\n              fontSize: 14, // 字体大小\\r\\n              fontWeight: 600 // 字体粗细\\r\\n            }\\r\\n          },\\r\\n          tooltip: {\\r\\n            trigger: 'axis',\\r\\n            axisPointer: {\\r\\n              type: 'shadow'\\r\\n            }\\r\\n            // formatter: function(params) {\\r\\n            //   return params[0].name + '<br>' + params[0].value;\\r\\n            // }\\r\\n          },\\r\\n          legend: {\\r\\n            show: false\\r\\n          },\\r\\n          grid: [\\r\\n            {\\r\\n              top: '20',\\r\\n              left: '10',\\r\\n              right: '20',\\r\\n              bottom: '-20',\\r\\n              containLabel: true\\r\\n            }\\r\\n          ],\\r\\n          xAxis: [\\r\\n            {\\r\\n              show: false,\\r\\n              name: '人',\\r\\n              nameTextStyle: {\\r\\n                align: 'right',\\r\\n                color: '#FFFFFF'\\r\\n              },\\r\\n              axisLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: 'rgba(209, 209, 209, .3)'\\r\\n                }\\r\\n              },\\r\\n              axisLabel: {\\r\\n                fontSize: 16,\\r\\n                color: '#FFFFFF'\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              }\\r\\n            }\\r\\n          ],\\r\\n          yAxis: [\\r\\n            {\\r\\n              inverse: true, // 设置 Y 轴数据反向展示\\r\\n              triggerEvent: true,\\r\\n              nameTextStyle: {\\r\\n                fontSize: 14,\\r\\n                color: '#FDFEFF',\\r\\n                padding: [0, 0, -10, -100]\\r\\n              },\\r\\n              axisLine: {\\r\\n                show: false,\\r\\n                lineStyle: {\\r\\n                  color: '#fff',\\r\\n                  align: 'left'\\r\\n                }\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              },\\r\\n              axisLabel: {\\r\\n                color: '#96C2FF',\\r\\n                interval: 0,\\r\\n                fontWeight: 'normal',\\r\\n                fontSize: 13\\r\\n              },\\r\\n              data: this.echdata.yData,\\r\\n              gridIndex: 0\\r\\n            }\\r\\n          ],\\r\\n          series: [\\r\\n            {\\r\\n              name: '数量',\\r\\n              type: 'bar',\\r\\n              barGap: '-100%',\\r\\n              data: this.echdata.xData.map((item, i) => {\\r\\n                const itemStyle = {\\r\\n                  color: i > 3 ? colorList[3] : colorList[i]\\r\\n                };\\r\\n                return {\\r\\n                  value: item,\\r\\n                  itemStyle: itemStyle\\r\\n                };\\r\\n              }),\\r\\n              barWidth: 10,\\r\\n              itemStyle: {\\r\\n                barBorderRadius: 30,\\r\\n                normal: {\\r\\n                  label: {\\r\\n                    position: 'right', // 在上方显示\\r\\n                    show: true, // 开启显示\\r\\n                    textStyle: {\\r\\n                      color: '#FDFEFF',\\r\\n                      fontWeight: 600,\\r\\n                      fontSize: 13\\r\\n                    }\\r\\n                  }\\r\\n                }\\r\\n              },\\r\\n              z: 91\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n\\r\\n        echartEle.setOption(option, true);\\r\\n        // 实时缩放\\r\\n        window.addEventListener('resize', () => {\\r\\n          echartEle.resize();\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped>\\r\\n  .echart-unit {\\r\\n    height: 100%;\\r\\n  }\\r\\n</style>\\r\\n\";","export default \"<template>\\r\\n  <div :id=\\\"eleId\\\" class=\\\"echart-unit\\\">组件</div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n  import * as echarts from 'echarts';\\r\\n\\r\\n  const defaultEchdata = {\\r\\n    xData: ['2020年', '2021年', '2022年', '2023年'],\\r\\n    yData: [101, 202, 303, 404]\\r\\n  };\\r\\n\\r\\n  export default {\\r\\n    props: {\\r\\n      echdata: {\\r\\n        type: [Object, Array],\\r\\n        default: () => defaultEchdata\\r\\n      },\\r\\n      titleText: {\\r\\n        type: String,\\r\\n        default: '标题'\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        eleId: `eleId_${Math.random()\\r\\n          .toString()\\r\\n          .substring(3, 6) + Date.now().toString(36)}`,\\r\\n        chart: null\\r\\n      };\\r\\n    },\\r\\n    mounted() {\\r\\n      this.$echarts = echarts;\\r\\n      this.$nextTick(() => {\\r\\n        this.initEchart();\\r\\n      });\\r\\n    },\\r\\n    methods: {\\r\\n      initEchart() {\\r\\n        var colorList = [\\r\\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\\r\\n            { offset: 0, color: '#EF624A' },\\r\\n            { offset: 1, color: '#FF9482' }\\r\\n          ]),\\r\\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\\r\\n            { offset: 0, color: '#1277CC' },\\r\\n            { offset: 1, color: '#00E7FD' }\\r\\n          ])\\r\\n        ];\\r\\n        var option = {\\r\\n          title: {\\r\\n            text: this.titleText,\\r\\n            textStyle: {\\r\\n              color: '#fff', // 字体颜色\\r\\n              fontSize: '14px', // 字体大小\\r\\n              fontWeight: 600 // 字体粗细\\r\\n            },\\r\\n            x: 'left'\\r\\n          },\\r\\n          tooltip: {\\r\\n            trigger: 'axis',\\r\\n            axisPointer: {\\r\\n              type: 'shadow'\\r\\n            }\\r\\n          },\\r\\n          legend: {\\r\\n            show: false\\r\\n          },\\r\\n          grid: [\\r\\n            {\\r\\n              left: '10',\\r\\n              right: '10',\\r\\n              bottom: '0',\\r\\n              top: '35',\\r\\n              containLabel: true\\r\\n            }\\r\\n          ],\\r\\n          xAxis: [\\r\\n            {\\r\\n              // name: '年龄',\\r\\n              axisLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: 'rgba(209, 209, 209, .3)'\\r\\n                }\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              },\\r\\n              axisLabel: {\\r\\n                color: '#fff',\\r\\n                interval: 0,\\r\\n                fontWeight: 'normal',\\r\\n                fontSize: 12\\r\\n              },\\r\\n              data: this.echdata.xData,\\r\\n              gridIndex: 0\\r\\n            }\\r\\n          ],\\r\\n          yAxis: [\\r\\n            {\\r\\n              show: true,\\r\\n              //   name: '万人',\\r\\n              axisLine: {\\r\\n                show: true,\\r\\n                lineStyle: {\\r\\n                  color: 'rgba(209, 209, 209, .3)'\\r\\n                }\\r\\n              },\\r\\n              axisLabel: {\\r\\n                fontSize: 12,\\r\\n                color: '#fff'\\r\\n              },\\r\\n              splitLine: {\\r\\n                show: false\\r\\n              },\\r\\n              axisTick: {\\r\\n                show: false\\r\\n              }\\r\\n            }\\r\\n          ],\\r\\n          label: {\\r\\n            show: true,\\r\\n            position: 'top',\\r\\n            color: '#fff',\\r\\n            fontSize: 13,\\r\\n            fontWeight: 600\\r\\n          },\\r\\n          series: [\\r\\n            {\\r\\n              // name: '柱状图',\\r\\n              type: 'bar',\\r\\n              data: this.echdata.yData.map((item, i) => {\\r\\n                const itemStyle = {\\r\\n                  color: i % 2 === 1 ? colorList[0] : colorList[1]\\r\\n                };\\r\\n                return {\\r\\n                  value: item,\\r\\n                  itemStyle: itemStyle\\r\\n                };\\r\\n              }),\\r\\n              barWidth: 15\\r\\n            }\\r\\n          ]\\r\\n        };\\r\\n        let echartEle = echarts.init(document.getElementById(this.eleId));\\r\\n        echartEle.setOption(option);\\r\\n        window.addEventListener('resize', () => {\\r\\n          echartEle.resize();\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n</script>\\r\\n\\r\\n<style lang=\\\"scss\\\" scoped>\\r\\n  .echart-unit {\\r\\n    height: 100%;\\r\\n  }\\r\\n</style>\\r\\n\";"],"sourceRoot":""}