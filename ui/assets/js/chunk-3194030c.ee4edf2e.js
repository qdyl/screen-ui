(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-3194030c"],{"0112":function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},a=[],i=t("313e");const o={xData:["2020年","2021年","2022年","2023年"],yData:[4.2,3.2,4.8,3.5],yData2:[4.8,3.5,2.9,2.8,3,5]},s=["手机销量","电脑销量"];var l={props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=i,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let r=i["init"](document.getElementById(this.eleId));r.setOption(n),window.addEventListener("resize",()=>{r.resize()})},getOptions(){const n={title:{text:this.titleText,top:"left",left:"top",textStyle:{align:"left",color:"#fff",fontSize:14}},backgroundColor:"#0f375f",grid:{top:"50px",right:"30px",bottom:"20px"},tooltip:{trigger:"axis",axisPointer:{type:"shadow",label:{show:!0}}},legend:{data:["手机销量","笔记本销量"],top:"15%",textStyle:{color:"#ffffff"}},xAxis:{data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#01FCE3"}},axisTick:{show:!0},axisLabel:{show:!0,textStyle:{}}},yAxis:[{type:"value",name:"亿元",nameTextStyle:{color:"#ebf8ac"},splitLine:{show:!1},axisTick:{show:!0},axisLine:{show:!0,lineStyle:{color:"#FFFFFF"}},axisLabel:{show:!0,textStyle:{color:"#ebf8ac"}}},{type:"value",name:"同比",nameTextStyle:{color:"#ebf8ac"},position:"right",splitLine:{show:!1},axisTick:{show:!1},axisLine:{show:!1},axisLabel:{show:!0,formatter:"{value} %",textStyle:{color:"#ebf8ac"}}},{type:"value",gridIndex:0,min:50,max:100,splitNumber:8,splitLine:{show:!1},axisLine:{show:!1},axisTick:{show:!1},axisLabel:{show:!1},splitArea:{show:!0,areaStyle:{color:["rgba(250,250,250,0.0)","rgba(250,250,250,0.05)"]}}}],series:[{name:"手机销量",type:"line",yAxisIndex:1,smooth:!0,showAllSymbol:!0,symbol:"circle",symbolSize:10,itemStyle:{color:"#058cff"},lineStyle:{color:"#058cff"},areaStyle:{color:"rgba(5,140,255, 0.2)"},data:this.echdata.yData},{name:"笔记本销量",type:"bar",barWidth:10,itemStyle:{normal:{color:new i["graphic"].LinearGradient(0,0,0,1,[{offset:0,color:"#00FFE3"},{offset:1,color:"#4693EC"}])}},data:this.echdata.yData2}]};return n}}},c=l,h=(t("c21f"),t("2877")),d=Object(h["a"])(c,e,a,!1,null,"0337dc24",null);r["default"]=d.exports},"0570":function(n,r,t){"use strict";t.r(r),r["default"]="<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            // subtext: '2023年6月8日',\r\n            // left: 'center',\r\n            textStyle: {\r\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\r\n              fontSize: '14px', // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          legend: {\r\n            // 图例组件，颜色和名字\r\n            top: 0,\r\n            right: 0,\r\n            textStyle: {\r\n              color: 'rgba(255, 255, 255, .5)',\r\n              fontSize: 14\r\n            },\r\n            icon: 'roundRect',\r\n            itemWidth: 16,\r\n            itemHeight: 10,\r\n            itemGap: 5\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            backgroundColor: 'rgba(0, 0, 0, .8)',\r\n            borderColor: 'rgba(0, 0, 0, .8)',\r\n            textStyle: {\r\n              color: '#fff',\r\n              fontSize: 14\r\n            },\r\n            axisPointer: {\r\n              // 坐标轴指示器，坐标轴触发有效\r\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n            }\r\n          },\r\n          grid: [\r\n            {\r\n              left: '3%',\r\n              right: '3%',\r\n              bottom: '-5',\r\n              top: '20%',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: {\r\n            type: 'category',\r\n            axisLabel: {\r\n              // color: 'red',\r\n              color: '#96C2FF',\r\n              fontSize: 10,\r\n              interval: 0,\r\n              rotate: 20\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: 'rgba(209, 209, 209, .3)'\r\n              }\r\n            },\r\n            data: this.echdata.xData\r\n          },\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              name: '',\r\n              axisLabel: {\r\n                // color: 'red',\r\n                color: '#96C2FF',\r\n                fontSize: 12,\r\n                fontWeight: 100\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)',\r\n                  fontSize: 12\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              smooth: true,\r\n              barWidth: 6,\r\n              // showAllSymbol: true,\r\n              // symbol: 'circle',\r\n              // symbolSize: 6,\r\n              color: '#10D6FE',\r\n              lineStyle: {\r\n                width: 1,\r\n                type: 'dashed'\r\n              },\r\n              label: {\r\n                show: true,\r\n                color: '#fff',\r\n                fontSize: '12',\r\n                fontWeight: 600,\r\n                position: 'top',\r\n                formatter: function(params) {\r\n                  return params.value + '人';\r\n                }\r\n              },\r\n              areaStyle: {\r\n                color: {\r\n                  type: 'linear',\r\n                  x: 0,\r\n                  y: 0,\r\n                  x2: 0,\r\n                  y2: 1,\r\n                  colorStops: [\r\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\r\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\r\n                  ],\r\n                  globalCoord: false\r\n                }\r\n              },\r\n              data: this.echdata.yData\r\n            }\r\n          ]\r\n        };\r\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option, true);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"},"07b2":function(n,r,t){"use strict";t("c645")},"0b90":function(n,r,t){"use strict";t("9d4a")},"0c6a":function(n,r,t){"use strict";t.r(r),r["default"]="<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        let totalSum = 0; // 总数\r\n        for (var i = 0; i < this.echdata.yData.length; i++) {\r\n          totalSum += this.echdata.yData[i];\r\n        }\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -4,\r\n            textStyle: {\r\n              color: '#2B9DF2',\r\n              fontSize: 14 // 字体大小\r\n              // fontWeight:  // 字体粗细\r\n            }\r\n          },\r\n          legend: {\r\n            // 图例组件，颜色和名字\r\n            top: 0,\r\n            right: 0,\r\n            textStyle: {\r\n              color: 'rgba(255, 255, 255, .5)',\r\n              fontSize: 14\r\n            },\r\n            icon: 'roundRect',\r\n            itemWidth: 16,\r\n            itemHeight: 10,\r\n            itemGap: 5\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            backgroundColor: 'rgba(0, 0, 0, .8)',\r\n            borderColor: 'rgba(0, 0, 0, .8)',\r\n            textStyle: {\r\n              color: '#fff',\r\n              fontSize: 14\r\n            },\r\n            axisPointer: {\r\n              // 坐标轴指示器，坐标轴触发有效\r\n              type: 'line' // 默认为直线，可选为：'line' | 'shadow'\r\n            }\r\n            // formatter: function(params) {\r\n            //   console.log('鼠标', params);\r\n            //   var value = params.value;\r\n            //   // var total = params.data.total;\r\n            //   var percent = ((value / totalSum) * 100).toFixed(2); // 计算百分比\r\n            //   return params.name + ': ' + value + ' (' + percent + '%)'; // 格式化 tooltip 内容\r\n            // }\r\n            // formatter: '{c}%' // 显示比例（这是关键）\r\n            // formatter: `{b}: {c} ({c/${totalSum} * 100}%)`\r\n          },\r\n          grid: [\r\n            {\r\n              left: '3%',\r\n              right: '3%',\r\n              bottom: '-5',\r\n              top: '20%',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: {\r\n            type: 'category',\r\n            axisLabel: {\r\n              // color: 'red',\r\n              color: '#96C2FF',\r\n              fontSize: 10,\r\n              interval: 0,\r\n              rotate: 20\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: 'rgba(209, 209, 209, .3)'\r\n              }\r\n            },\r\n            data: this.echdata.xData\r\n          },\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              name: '',\r\n              axisLabel: {\r\n                // color: 'red',\r\n                color: '#96C2FF',\r\n                fontSize: 12,\r\n                fontWeight: 100\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)',\r\n                  fontSize: 12\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              smooth: true,\r\n              barWidth: 6,\r\n              showAllSymbol: true,\r\n              symbol: 'circle',\r\n              symbolSize: 6,\r\n              color: '#10D6FE',\r\n              lineStyle: {\r\n                width: 1,\r\n                type: 'dashed'\r\n              },\r\n              label: {\r\n                show: true,\r\n                color: '#fff',\r\n                fontSize: '12',\r\n                fontWeight: 600,\r\n                position: 'top',\r\n                // formatter: '{b}\\n{c}%', // 显示比例（这是关键）\r\n                formatter: function(params) {\r\n                  // console.log('比例饿', params);\r\n                  const percent = ((params.value / totalSum) * 100).toFixed(2) + '%';\r\n                  return percent;\r\n                }\r\n              },\r\n              areaStyle: {\r\n                color: {\r\n                  type: 'linear',\r\n                  x: 0,\r\n                  y: 0,\r\n                  x2: 0,\r\n                  y2: 1,\r\n                  colorStops: [\r\n                    { offset: 0, color: 'rgba(2, 251, 189, .2)' },\r\n                    { offset: 1, color: 'rgba(2, 251, 189, 0)' }\r\n                  ],\r\n                  globalCoord: false\r\n                }\r\n              },\r\n              data: this.echdata.yData\r\n            }\r\n          ]\r\n        };\r\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option, true);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"},"0d59":function(n,r,t){"use strict";t.r(r),r["default"]="<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\" />\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: [5, 75, 115, 52.65, 25.75],\r\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\r\n  };\r\n\r\n  export default {\r\n    infoTip: '',\r\n    name: '',\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '年龄分布(单位：万人)'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`\r\n      };\r\n    },\r\n    watch: {\r\n      echdata: {\r\n        handler: function() {\r\n          this.drainitEchartm();\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n    created() {},\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(function() {\r\n        this.initEchart();\r\n        this.onHanleClick();\r\n      });\r\n    },\r\n    methods: {\r\n      // echart 初始化\r\n      initEchart() {\r\n        var colorList = [\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ])\r\n        ];\r\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\r\n        var seriesBgData = [];\r\n        for (var i = 0; i < this.echdata.xData.length; i++) {\r\n          seriesBgData.push(barMax);\r\n        }\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            textStyle: {\r\n              color: '#fff', // 备用字体色 '#2B9DF2'\r\n              fontSize: 14, // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            },\r\n            x: 'left'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n            // formatter: function(params) {\r\n            //   // return params[0].name + '<br>' + params[0].value + ' 万人'\r\n            //   return params[0].name + '<br>' + params[0].value;\r\n            // }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              top: '20px',\r\n              left: '10',\r\n              right: '10',\r\n              bottom: '-20',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              show: false,\r\n              name: '万人',\r\n              nameTextStyle: {\r\n                align: 'right',\r\n                color: '#FFFFFF'\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                fontSize: 13,\r\n                color: '#FFFFFF'\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              // name: '年龄',\r\n              triggerEvent: true,\r\n              inverse: false,\r\n              axisLine: {\r\n                show: false,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#96C2FF',\r\n                // color: '#fff',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 13\r\n              },\r\n              data: this.echdata.yData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              barCategoryGap: '100%',\r\n              data: this.echdata.xData.map((item, i) => {\r\n                const itemStyle = {\r\n                  color: i > 3 ? colorList[3] : colorList[i]\r\n                };\r\n                return {\r\n                  value: item,\r\n                  itemStyle: itemStyle\r\n                };\r\n              }),\r\n              barWidth: 10,\r\n              itemStyle: {\r\n                barBorderRadius: 30\r\n              },\r\n              z: 91,\r\n              label: {\r\n                show: true,\r\n                distance: 15,\r\n                color: '#fff',\r\n                fontSize: '14',\r\n                fontWeight: 600,\r\n                position: 'right'\r\n              }\r\n            },\r\n            {\r\n              name: '进度条背景',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              barCategoryGap: '200%',\r\n              data: this.echdata.xData.map(function(d) {\r\n                return barMax;\r\n              }),\r\n              barWidth: 10,\r\n              tooltip: {\r\n                show: false\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  barBorderRadius: 30,\r\n                  color: '#1c1d47',\r\n                  // color: '#204b86',\r\n                  barBorderColor: '#204b86', // 边框色\r\n                  barBorderWidth: 1, // 边框宽度\r\n                  label: {\r\n                    show: false,\r\n                    textStyle: {\r\n                      color: 'rgba(255,255,255,1)'\r\n                    },\r\n                    position: 'right',\r\n                    formatter: function(p) {\r\n                      return this.echdata.xData[p.dataIndex];\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              z: 90\r\n            }\r\n          ]\r\n        };\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option, true);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      },\r\n      // 点击事件\r\n      onHanleClick() {\r\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\r\n        echartEle.getZr().on('click', params => {\r\n          console.log('点击饿了', params);\r\n          const pointInPixel = [params.offsetX, params.offsetY];\r\n          if (echartEle.containPixel('grid', pointInPixel)) {\r\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\r\n            console.log(xIndex);\r\n          }\r\n          // this.$router.push('/sy-chanyelian')\r\n          //\r\n          // var options = echartEle.getOption()\r\n          // console.log('options配置', options)\r\n        });\r\n      }\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"},1062:function(n,r,t){},"12a0":function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},a=[],i=t("313e");const o={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404],yData2:[110,220,333,444],yData3:[131,252,363,484]};var s={props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=i,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=[{name:"用户总数",type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#9C9AFF",barBorderRadius:[12,12,0,0]}},data:[400,400,300,300,300,400,400,400,300]},{name:"其它",type:"line",barWidth:"15%",smooth:!0,itemStyle:{normal:{color:"#FFCA71",barBorderRadius:[12,12,0,0]}},data:[400,600,700,700,1e3,400,400,600,700]}],r={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:n};let t=i["init"](document.getElementById(this.eleId));t.setOption(r),window.addEventListener("resize",()=>{t.resize()})}}},l=s,c=(t("dbc2"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"7d30ec4e",null);r["default"]=h.exports},"18d5":function(n,r,t){var e={"./BarA1.vue":"f670","./BarA2.vue":"b463","./BarA3.vue":"a042","./BarA4.vue":"62d3","./BarA5.vue":"3b47","./BarA6.vue":"fc03","./BarA7.vue":"3910","./BarA8.vue":"f3de","./BarB1.vue":"2949","./BarB2.vue":"194e","./BarB3.vue":"c953","./BarB4.vue":"2936","./BarC1.vue":"12a0","./BarC2.vue":"7520","./BarC3.vue":"0112"};function a(n){var r=i(n);return t(r)}function i(n){if(!t.o(e,n)){var r=new Error("Cannot find module '"+n+"'");throw r.code="MODULE_NOT_FOUND",r}return e[n]}a.keys=function(){return Object.keys(e)},a.resolve=i,n.exports=a,a.id="18d5"},"194e":function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},a=[],i=t("313e");const o={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"备注：Y轴数据倒置",name:"",props:{echdata:{type:Object,default:()=>o},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"echartsLine"+Number(Math.random().toString().substr(3,3)+Date.now()).toString(36)}},watch:{echdata:{handler:function(){this.initEchart()},deep:!0}},created(){},mounted(){this.$echarts=i,this.$nextTick((function(){this.initEchart()}))},methods:{initEchart(){let n=i["init"](document.getElementById(this.eleId));const r=[new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}])],t={title:{text:this.titleText,top:-4,textStyle:{color:"#fff",fontSize:14,fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{top:"20",left:"10",right:"20",bottom:"-20",containLabel:!0}],xAxis:[{show:!1,name:"人",nameTextStyle:{align:"right",color:"#FFFFFF"},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:16,color:"#FFFFFF"},splitLine:{show:!1},axisTick:{show:!1}}],yAxis:[{inverse:!0,triggerEvent:!0,nameTextStyle:{fontSize:14,color:"#FDFEFF",padding:[0,0,-10,-100]},axisLine:{show:!1,lineStyle:{color:"#fff",align:"left"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#96C2FF",interval:0,fontWeight:"normal",fontSize:13},data:this.echdata.yData,gridIndex:0}],series:[{name:"数量",type:"bar",barGap:"-100%",data:this.echdata.xData.map((n,t)=>{const e={color:t>3?r[3]:r[t]};return{value:n,itemStyle:e}}),barWidth:10,itemStyle:{barBorderRadius:30,normal:{label:{position:"right",show:!0,textStyle:{color:"#FDFEFF",fontWeight:600,fontSize:13}}}},z:91}]};n.setOption(t,!0),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(t("2a43"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"39797ae2",null);r["default"]=h.exports},"20b0":function(n,r,t){"use strict";t.r(r),r["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404],\n    yData2: [110, 220, 333, 444],\n    yData3: [131, 252, 363, 484]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        // var data1 = this.echdata.xData;\n        const seriesArrData = [\n          {\n            name: '用户总数',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\n          },\n          {\n            name: '新增会员',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#FC8B62',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 500, 500, 500, 500, 400, 400, 500, 500]\n          },\n          {\n            name: '用户',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#FF679F',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          },\n          {\n            name: '其它',\n            type: 'line',\n            barWidth: '15%',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        //\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},"24c1":function(n,r,t){"use strict";t.r(r),r["default"]="<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        var colorList = [\r\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\r\n            { offset: 0, color: '#1277CC' },\r\n            { offset: 1, color: '#00E7FD' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\r\n            { offset: 0, color: '#01C4BA' },\r\n            { offset: 1, color: '#1DEFA9' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\r\n            { offset: 0, color: '#EF624A' },\r\n            { offset: 1, color: '#FF9482' }\r\n          ])\r\n        ];\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -2,\r\n            textStyle: {\r\n              color: '#fff', // 字体颜色\r\n              fontSize: '14px', // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              left: '10',\r\n              right: '10',\r\n              bottom: '0',\r\n              top: '35',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              // name: '年龄',\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#fff',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 12\r\n              },\r\n              data: this.echdata.xData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              show: true,\r\n              //   name: '万人',\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                fontSize: 12,\r\n                color: '#fff'\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          label: {\r\n            show: true,\r\n            position: 'top',\r\n            color: '#fff',\r\n            fontSize: 13,\r\n            fontWeight: 600\r\n          },\r\n          series: [\r\n            {\r\n              // name: '柱状图',\r\n              type: 'bar',\r\n              data: this.echdata.yData.map((item, i) => {\r\n                const itemStyle = {\r\n                  color: i > 3 ? colorList[3] : colorList[i]\r\n                };\r\n                return {\r\n                  value: item,\r\n                  itemStyle: itemStyle\r\n                };\r\n              }),\r\n              barWidth: 10,\r\n              itemStyle: {\r\n                barBorderRadius: 30\r\n              }\r\n            }\r\n          ]\r\n        };\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"},"25d7":function(n,r,t){"use strict";t("50a8")},2936:function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},a=[],i=t("313e");const o={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"备注：",name:"",props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36))}},watch:{echdata:{handler:function(){this.drainitEchartm()},deep:!0}},created(){},mounted(){this.$echarts=i,this.$nextTick((function(){this.initEchart(),this.onHanleClick()}))},methods:{initEchart(){var n=1.1*Math.max(...this.echdata.xData),r={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600},x:"left"},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{left:"10",right:"0",bottom:"-15",top:"30",containLabel:!0}],xAxis:[{show:!1}],yAxis:[{inverse:!1,axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#fff",interval:0,fontWeight:"normal",fontSize:13,formatter:function(n,r){return n.length>5?n.slice(0,5)+"...":n}},data:this.echdata.yData,gridIndex:0}],label:{show:!0,position:"right",color:"#fff",fontSize:13,fontWeight:600},series:[{name:"数量",type:"bar",barGap:"-100%",data:this.echdata.xData,barWidth:8,itemStyle:{barBorderRadius:30,color:new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#FAACA8"},{offset:1,color:"#FA709A"}])},z:91},{name:"进度条背景",type:"bar",barGap:"-100%",data:this.echdata.xData.map((function(r){return n})),barWidth:8,tooltip:{show:!1},itemStyle:{normal:{barBorderRadius:30,color:"#0A3069",barBorderColor:"#0A3069",barBorderWidth:1,label:{show:!1,textStyle:{color:"rgba(255,255,255,1)"},position:"right",formatter:function(n){return this.echdata.xData[n.dataIndex]}}}},z:90}]};let t=i["init"](document.getElementById(this.eleId));t.setOption(r,!0),window.addEventListener("resize",()=>{t.resize()})},getOptions(){var n="#30eee9";new i["graphic"].LinearGradient(0,1,0,0,[{offset:0,color:"rgba(7,44,90,0.3)"},{offset:1,color:"rgba(0,146,246,0.9)"}]),new i["graphic"].LinearGradient(0,1,0,0,[{offset:0,color:"rgba(7,44,90,0.3)"},{offset:1,color:"rgba(0,212,199,0.9)"}]),new i["graphic"].LinearGradient(0,1,0,0,[{offset:0,color:"rgba(7,44,90,0.3)"},{offset:1,color:"rgba(114,144,89,0.9)"}])},onHanleClick(){var n=this.$echarts.init(document.getElementById(this.eleId));n.getZr().on("click",r=>{console.log("点击饿了",r);const t=[r.offsetX,r.offsetY];if(n.containPixel("grid",t)){const t=n.convertFromPixel({seriesIndex:0},[r.offsetX,r.offsetY])[0];console.log(t)}})}}},l=s,c=(t("7da8"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"2c859109",null);r["default"]=h.exports},2949:function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},a=[],i=t("313e");const o={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"",name:"",props:{echdata:{type:Object,default:()=>o},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"echartsLine"+Number(Math.random().toString().substr(3,3)+Date.now()).toString(36)}},watch:{echdata:{handler:function(){this.initEchart()},deep:!0}},created(){},mounted(){this.$echarts=i,this.$nextTick((function(){this.initEchart()}))},methods:{initEchart(){let n=i["init"](document.getElementById(this.eleId));const r=[new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}])],t={title:{text:this.titleText,top:-4,textStyle:{color:"#fff",fontSize:14,fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{top:"20",left:"10",right:"20",bottom:"-20",containLabel:!0}],xAxis:[{show:!1,name:"人",nameTextStyle:{align:"right",color:"#FFFFFF"},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:16,color:"#FFFFFF"},splitLine:{show:!1},axisTick:{show:!1}}],yAxis:[{inverse:!1,triggerEvent:!0,nameTextStyle:{fontSize:14,color:"#FDFEFF",padding:[0,0,-10,-100]},axisLine:{show:!1,lineStyle:{color:"#fff",align:"left"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#96C2FF",interval:0,fontWeight:"normal",fontSize:13},data:this.echdata.yData,gridIndex:0}],series:[{name:"数量",type:"bar",barGap:"-100%",data:this.echdata.xData.map((n,t)=>{const e={color:t>3?r[3]:r[t]};return{value:n,itemStyle:e}}),barWidth:10,itemStyle:{barBorderRadius:30,normal:{label:{position:"right",show:!0,textStyle:{color:"#FDFEFF",fontWeight:600,fontSize:13}}}},z:91}]};n.setOption(t,!0),window.addEventListener("resize",()=>{n.resize()})}}},l=s,c=(t("c70e"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"489e24e2",null);r["default"]=h.exports},"2a43":function(n,r,t){"use strict";t("a2c8")},"2c70":function(n,r,t){"use strict";t("f797")},"332b":function(n,r,t){},"33ab":function(n,r,t){"use strict";t("383b")},"383b":function(n,r,t){},3910:function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},a=[],i=t("313e");const o={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]},s=["手机销量","电脑销量"];var l={props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"标题"},seriesname:{type:[Object,Array],default:()=>s}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=i,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=this.getOptions();let r=i["init"](document.getElementById(this.eleId));r.setOption(n),window.addEventListener("resize",()=>{r.resize()})},getOptions(){var n=50;const r={backgroundColor:"#111c4e",color:["#3398DB"],tooltip:{trigger:"axis",axisPointer:{type:"line",lineStyle:{opacity:0}}},legend:{data:["直接访问","背景"],show:!1},grid:{left:"0%",right:"0%",bottom:"0%",top:"7%",containLabel:!0,z:22},xAxis:[{type:"category",gridIndex:0,data:this.echdata.xData,axisTick:{alignWithLabel:!0},axisLine:{lineStyle:{color:"#0c3b71"}},axisLabel:{show:!0,color:"rgb(170,170,170)",fontSize:12}}],yAxis:[{type:"value",gridIndex:0,splitLine:{show:!1},axisTick:{show:!1},axisLine:{lineStyle:{color:"#0c3b71"}},axisLabel:{color:"rgb(170,170,170)",formatter:"{value} 人"}},{type:"value",gridIndex:0,min:n,max:100,splitNumber:12,splitLine:{show:!1},axisLine:{show:!1},axisTick:{show:!1},axisLabel:{show:!1},splitArea:{show:!0,areaStyle:{color:["rgba(250,250,250,0.0)","rgba(250,250,250,0.05)"]}}}],series:[{name:"合格率",type:"bar",barWidth:"10",xAxisIndex:0,yAxisIndex:0,itemStyle:{normal:{barBorderRadius:30,color:new i["graphic"].LinearGradient(0,0,0,1,[{offset:0,color:"#00feff"},{offset:.5,color:"#027eff"},{offset:1,color:"#0286ff"}])}},data:this.echdata.yData,zlevel:11},{name:"背景",type:"bar",barWidth:"20",xAxisIndex:0,yAxisIndex:1,barGap:"-1.5px",data:[100,100,100,100,100,100,100],itemStyle:{normal:{color:"rgba(255,255,255,0.1)"}},zlevel:9}]};return r}}},c=l,h=(t("7dc9"),t("2877")),d=Object(h["a"])(c,e,a,!1,null,"73b19242",null);r["default"]=d.exports},"3b47":function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},a=[],i=t("313e");const o={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=i,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){var n=[new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#1277CC"},{offset:1,color:"#00E7FD"}]),new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#01C4BA"},{offset:1,color:"#1DEFA9"}]),new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#EF624A"},{offset:1,color:"#FF9482"}])],r={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{left:"10",right:"10",bottom:"0",top:"35",containLabel:!0}],xAxis:[{axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#fff",interval:0,fontWeight:"normal",fontSize:12},data:this.echdata.xData,gridIndex:0}],yAxis:[{show:!0,axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:12,color:"#fff"},splitLine:{show:!1},axisTick:{show:!1}}],label:{show:!0,position:"top",color:"#fff",fontSize:13,fontWeight:600},series:[{type:"bar",data:this.echdata.yData.map((r,t)=>{const e={color:t>3?n[3]:n[t]};return{value:r,itemStyle:e}}),barWidth:10,itemStyle:{barBorderRadius:30}}]};let t=i["init"](document.getElementById(this.eleId));t.setOption(r),window.addEventListener("resize",()=>{t.resize()})}}},l=s,c=(t("401c"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"5a0ca71a",null);r["default"]=h.exports},"401c":function(n,r,t){"use strict";t("e5cf")},4140:function(n,r,t){"use strict";t.r(r),r["default"]='<template>\r\n  <div class="" style="color:#fff">\r\n    echart图\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {};\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n'},"4d76":function(n,r,t){var e={"./BarA1":"753c","./BarA1.vue":"753c","./BarA2":"0570","./BarA2.vue":"0570","./BarA3":"7456","./BarA3.vue":"7456","./BarA4":"0c6a","./BarA4.vue":"0c6a","./BarA5":"24c1","./BarA5.vue":"24c1","./BarA6":"fcc8","./BarA6.vue":"fcc8","./BarA7":"d867","./BarA7.vue":"d867","./BarA8":"4140","./BarA8.vue":"4140","./BarB1":"5075","./BarB1.vue":"5075","./BarB2":"fcaf","./BarB2.vue":"fcaf","./BarB3":"0d59","./BarB3.vue":"0d59","./BarB4":"9d51","./BarB4.vue":"9d51","./BarC1":"c0ca","./BarC1.vue":"c0ca","./BarC2":"20b0","./BarC2.vue":"20b0","./BarC3":"d1b6","./BarC3.vue":"d1b6"};function a(n){var r=i(n);return t(r)}function i(n){if(!t.o(e,n)){var r=new Error("Cannot find module '"+n+"'");throw r.code="MODULE_NOT_FOUND",r}return e[n]}a.keys=function(){return Object.keys(e)},a.resolve=i,n.exports=a,a.id="4d76"},5075:function(n,r,t){"use strict";t.r(r),r["default"]="<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\" />\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: [5, 75, 115, 52.65, 25.75],\r\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\r\n  };\r\n\r\n  export default {\r\n    infoTip: '',\r\n    name: '',\r\n    props: {\r\n      echdata: {\r\n        type: Object,\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '年龄分布(单位：万人)'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `echartsLine${Number(\r\n          Math.random()\r\n            .toString()\r\n            .substr(3, 3) + Date.now()\r\n        ).toString(36)}`\r\n      };\r\n    },\r\n    watch: {\r\n      echdata: {\r\n        handler: function() {\r\n          this.initEchart();\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n    created() {},\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(function() {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        const colorList = [\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ])\r\n        ];\r\n        const option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -4,\r\n            textStyle: {\r\n              // color: '#2992ff',\r\n              color: '#fff', // 备用字体色 '#2B9DF2'\r\n              fontSize: 14, // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n            // formatter: function(params) {\r\n            //   return params[0].name + '<br>' + params[0].value;\r\n            // }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              top: '20',\r\n              left: '10',\r\n              right: '20',\r\n              bottom: '-20',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              show: false,\r\n              name: '人',\r\n              nameTextStyle: {\r\n                align: 'right',\r\n                color: '#FFFFFF'\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                fontSize: 16,\r\n                color: '#FFFFFF'\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              inverse: false, // 设置 Y 轴数据反向展示\r\n              triggerEvent: true,\r\n              nameTextStyle: {\r\n                fontSize: 14,\r\n                color: '#FDFEFF',\r\n                padding: [0, 0, -10, -100]\r\n              },\r\n              axisLine: {\r\n                show: false,\r\n                lineStyle: {\r\n                  color: '#fff',\r\n                  align: 'left'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#96C2FF',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 13\r\n              },\r\n              data: this.echdata.yData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              data: this.echdata.xData.map((item, i) => {\r\n                const itemStyle = {\r\n                  color: i > 3 ? colorList[3] : colorList[i]\r\n                };\r\n                return {\r\n                  value: item,\r\n                  itemStyle: itemStyle\r\n                };\r\n              }),\r\n              barWidth: 10,\r\n              itemStyle: {\r\n                barBorderRadius: 30,\r\n                normal: {\r\n                  label: {\r\n                    position: 'right', // 在上方显示\r\n                    show: true, // 开启显示\r\n                    textStyle: {\r\n                      color: '#FDFEFF',\r\n                      fontWeight: 600,\r\n                      fontSize: 13\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              z: 91\r\n            }\r\n          ]\r\n        };\r\n\r\n        echartEle.setOption(option, true);\r\n        // 实时缩放\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"},"50a8":function(n,r,t){},"61dd":function(n,r,t){},"62d3":function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},a=[],i=t("313e");const o={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=i,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){let n=0;for(var r=0;r<this.echdata.yData.length;r++)n+=this.echdata.yData[r];var t={title:{text:this.titleText,top:-4,textStyle:{color:"#2B9DF2",fontSize:14}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},icon:"roundRect",itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:14},axisPointer:{type:"line"}},grid:[{left:"3%",right:"3%",bottom:"-5",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"#96C2FF",fontSize:10,interval:0,rotate:20},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"#96C2FF",fontSize:12,fontWeight:100},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)",fontSize:12}},splitLine:{show:!1}}],series:[{name:"数量",type:"bar",smooth:!0,barWidth:6,showAllSymbol:!0,symbol:"circle",symbolSize:6,color:"#10D6FE",lineStyle:{width:1,type:"dashed"},label:{show:!0,color:"#fff",fontSize:"12",fontWeight:600,position:"top",formatter:function(r){const t=(r.value/n*100).toFixed(2)+"%";return t}},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(2, 251, 189, .2)"},{offset:1,color:"rgba(2, 251, 189, 0)"}],globalCoord:!1}},data:this.echdata.yData}]},e=this.$echarts.init(document.getElementById(this.eleId));e.setOption(t,!0),window.addEventListener("resize",()=>{e.resize()})}}},l=s,c=(t("82c5"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"15f6bb05",null);r["default"]=h.exports},7456:function(n,r,t){"use strict";t.r(r),r["default"]="<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        const seriesArrData = [\r\n          {\r\n            // 柱体1\r\n            name: '数量',\r\n            data: this.echdata.yData,\r\n            type: 'bar',\r\n            barMaxWidth: 'auto',\r\n            barWidth: '10',\r\n            showBackground: true,\r\n            backgroundStyle: {\r\n              color: 'rgba(20, 88, 168, 0.2)'\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: function(params) {\r\n                  var colorList = ['#02AFD5', '#F3CB6B'];\r\n                  return colorList[params.dataIndex % colorList.length];\r\n                },\r\n                label: {\r\n                  position: 'top',\r\n                  show: true, // 开启显示\r\n                  formatter: ['{a|{c}}'].join(','),\r\n                  rich: {\r\n                    a: {\r\n                      color: '#fff',\r\n                      align: 'center',\r\n                      fontSize: '12px'\r\n                    }\r\n                  },\r\n                  // position: 'top', // 在上方显示\r\n                  textStyle: {\r\n                    // 数值样式\r\n                    color: '#FDFEFF',\r\n                    fontSize: 12\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            zlevel: 2\r\n          }\r\n        ];\r\n        const option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -2,\r\n            textStyle: {\r\n              color: '#fff', // 备用字体色 '#2B9DF2' '#2992ff',\r\n              fontSize: 14, // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              // 坐标轴指示器，坐标轴触发有效\r\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n            }\r\n          },\r\n          grid: {\r\n            right: '5%',\r\n            left: '5',\r\n            bottom: '0',\r\n            top: '30',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: this.echdata.xData,\r\n            // 坐标轴\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#1d71b7'\r\n              }\r\n            },\r\n            // 坐标值标注\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                color: '#96C2FF',\r\n                fontSize: 12\r\n              }\r\n            },\r\n            axisTick: {\r\n              show: false\r\n            }\r\n          },\r\n          yAxis: {\r\n            // 坐标轴\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#1d71b7'\r\n              }\r\n            },\r\n            // 坐标值标注\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                color: '#96C2FF',\r\n                fontSize: 12\r\n              }\r\n            },\r\n            // 分格线\r\n            splitLine: {\r\n              show: false,\r\n              lineStyle: {\r\n                color: '#4784e8'\r\n              }\r\n            }\r\n          },\r\n          series: seriesArrData\r\n        };\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option, true);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"},7520:function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},a=[],i=t("313e");const o={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404],yData2:[110,220,333,444],yData3:[131,252,363,484]};var s={props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=i,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=[{name:"用户总数",type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#9C9AFF",barBorderRadius:[12,12,0,0]}},data:[400,400,300,300,300,400,400,400,300]},{name:"新增会员",type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#FC8B62",barBorderRadius:[12,12,0,0]}},data:[400,500,500,500,500,400,400,500,500]},{name:"用户",type:"bar",barWidth:"15%",itemStyle:{normal:{color:"#FF679F",barBorderRadius:[12,12,0,0]}},data:[400,600,700,700,1e3,400,400,600,700]},{name:"其它",type:"line",barWidth:"15%",smooth:!0,itemStyle:{normal:{color:"#FFCA71",barBorderRadius:[12,12,0,0]}},data:[400,600,700,700,1e3,400,400,600,700]}],r={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:n};let t=i["init"](document.getElementById(this.eleId));t.setOption(r),window.addEventListener("resize",()=>{t.resize()})}}},l=s,c=(t("25d7"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"3737eff4",null);r["default"]=h.exports},"753c":function(n,r,t){"use strict";t.r(r),r["default"]="<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        // var data1 = this.echdata.xData;\r\n        const seriesArrData = [\r\n          {\r\n            // 柱体1\r\n            name: '数量',\r\n            data: this.echdata.yData,\r\n            type: 'bar',\r\n            barMaxWidth: 'auto',\r\n            barWidth: '10',\r\n            showBackground: true,\r\n            backgroundStyle: {\r\n              color: 'rgba(20, 88, 168, 0.2)'\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: params => {\r\n                  var colorList = [['#2D98DF', '#0B244C']];\r\n                  47;\r\n                  return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                    {\r\n                      offset: 0,\r\n                      color: colorList[0][0]\r\n                    },\r\n                    {\r\n                      offset: 0.5,\r\n                      color: colorList[0][0]\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: colorList[0][1]\r\n                    }\r\n                  ]);\r\n                },\r\n                label: {\r\n                  show: true,\r\n                  position: 'top',\r\n                  textStyle: {\r\n                    fontSize: 14,\r\n                    fontWeight: 600,\r\n                    color: '#D1DBFF' // 字体颜色\r\n                  }\r\n                }\r\n              },\r\n              barBorderRadius: 30\r\n            },\r\n            zlevel: 2\r\n          }\r\n        ];\r\n        const option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -2,\r\n            textStyle: {\r\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\r\n              fontSize: '14px', // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\r\n            }\r\n          },\r\n          grid: {\r\n            right: '5%',\r\n            left: '5',\r\n            bottom: '0',\r\n            top: '30',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: this.echdata.xData,\r\n            // 坐标轴\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#1d71b7'\r\n              }\r\n            },\r\n            // 坐标值标注\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                color: '#96C2FF',\r\n                fontSize: 12\r\n              }\r\n            },\r\n            axisTick: {\r\n              show: false\r\n            }\r\n          },\r\n          yAxis: {\r\n            // 坐标轴\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: '#1d71b7'\r\n              }\r\n            },\r\n            // 坐标值标注\r\n            axisLabel: {\r\n              show: true,\r\n              textStyle: {\r\n                color: '#96C2FF',\r\n                fontSize: 12\r\n              }\r\n            },\r\n            // 分格线\r\n            splitLine: {\r\n              show: false,\r\n              lineStyle: {\r\n                color: '#4784e8'\r\n              }\r\n            }\r\n          },\r\n          series: seriesArrData\r\n        };\r\n        //\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"},"7da8":function(n,r,t){"use strict";t("8f11")},"7dc9":function(n,r,t){"use strict";t("1062")},"82c5":function(n,r,t){"use strict";t("a360")},"8c05":function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"page"},[r("div",{staticClass:"header"},[r("h3",{staticClass:"title"},[n._v("柱状图·基础")]),r("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.echDefDataA,expression:"echDefDataA",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"rightCopy"},[n._v("复制数据")])]),r("section",{staticClass:"units-box"},[r("ul",{staticClass:"unit-list"},n._l(n.dynamicComponents_A,(function(t,e){return r("li",{key:e+"A",staticClass:"unit-item",attrs:{id:"itemCls"+e}},[r("div",{staticClass:"theUnit"},[r(n.dynamicComponents_A[e],{tag:"component",attrs:{titleText:"标题"+(e+1)}})],1),r("div",{staticClass:"title",attrs:{info:"tip提示"}},[n._v(n._s(n.getInfoTip(n.vueFiles["BarA"+(e+1)])))]),r("div",{staticClass:"btnBlock"},[r("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(r){return n.onHandleItem("BarA"+(e+1))}}}),r("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles["BarA"+(e+1)],expression:"vueFiles[`BarA${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),r("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(r){return n.onPreview("BarA"+(e+1))}}})])])})),0)]),r("div",{staticClass:"header"},[r("h3",{staticClass:"title"},[n._v("柱状图·横向")]),r("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.echDefDataB,expression:"echDefDataB",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"rightCopy"},[n._v("复制数据")])]),r("section",{staticClass:"units-box"},[r("ul",{staticClass:"unit-list"},n._l(n.dynamicComponents_B,(function(t,e){return r("li",{key:e+"B",staticClass:"unit-item",attrs:{id:"itemCls"+e}},[r("div",{staticClass:"theUnit"},[r(n.dynamicComponents_B[e],{tag:"component"})],1),r("div",{staticClass:"title",attrs:{info:"tip提示"}},[n._v(n._s(n.getInfoTip(n.vueFiles["BarB"+(e+1)])))]),r("div",{staticClass:"btnBlock"},[r("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(r){return n.onHandleItem("BarB"+(e+1))}}}),r("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles["BarB"+(e+1)],expression:"vueFiles[`BarB${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),r("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(r){return n.onPreview("BarB"+(e+1))}}})])])})),0)]),r("div",{staticClass:"header"},[r("h3",{staticClass:"title"},[n._v("柱状图·横向")]),r("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.echDefDataB,expression:"echDefDataB",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"rightCopy"},[n._v("复制数据")])]),r("section",{staticClass:"units-box"},[r("ul",{staticClass:"unit-list"},n._l(n.dynamicComponents_C,(function(t,e){return r("li",{key:e+"C",staticClass:"unit-item",attrs:{id:"itemCls"+e}},[r("div",{staticClass:"theUnit"},[r(n.dynamicComponents_C[e],{tag:"component"})],1),r("div",{staticClass:"title",attrs:{info:"tip提示"}},[n._v(n._s(n.getInfoTip(n.vueFiles["BarC"+(e+1)])))]),r("div",{staticClass:"btnBlock"},[r("span",{staticClass:"iconfont icon-bianji",attrs:{title:"编辑"},on:{click:function(r){return n.onHandleItem("BarC"+(e+1))}}}),r("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles["BarC"+(e+1)],expression:"vueFiles[`BarC${i + 1}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"iconfont icon-fuzhi",attrs:{title:"复制"}}),r("span",{staticClass:"iconfont icon-yulan",attrs:{title:"预览"},on:{click:function(r){return n.onPreview("BarC"+(e+1))}}})])])})),0)]),n.isShowFullCode?r("FullScreenCodeNew",{attrs:{isshow:n.isShowFullCode,codecontent:n.codecontent},on:{"update:isshow":function(r){n.isShowFullCode=r},"update:codecontent":function(r){n.codecontent=r}}}):n._e(),n.isShowFullPreview?r("FullScreenPreview",{attrs:{isshow:n.isShowFullPreview},on:{"update:isshow":function(r){n.isShowFullPreview=r}}},[r(n.previewEchart,{tag:"component"}),r("template",{slot:"btn"},[r("span",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:n.vueFiles[""+n.previewEchart],expression:"vueFiles[`${previewEchart}`]",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:n.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"btnicon"},[n._v("复制")])])],2):n._e()],1)},a=[],i=(t("14d9"),t("2b0e")),o=t("00e9");let s={},l=[];function c(){const n=t("18d5");n.keys().forEach(r=>{const e=n(r),a=r.replace(/^\.\//,"").replace(/\.vue$/,"");i["a"].component(a,e.default||e);const o=r.replace(/\.\//,""),c=t("4d76")("./"+o),h=o.replace(".vue","");s[h]=c.default,l.push(h)})}c();var h={data(){return{isShowFullCode:!1,isShowFullPreview:!1,previewEchart:"",codecontent:"hello world",vueFiles:{},dynamicComponents_A:["BarA1"],dynamicComponents_B:["BarB1"],dynamicComponents_C:["BarC1"],dynamicComponents_D:["BarD1"],dynamicComponents:["BarA1","BarA2"],echDefDataA:"{\n          xData: ['2020年', '2021年', '2022年', '2023年'], // X轴\n          yData: [101, 202, 303, 404] // Y轴\n        }",echDefDataB:"{\n          xData: [5, 75, 115, 52.65, 25.75],  // X轴\n          yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']  // Y轴\n        }"}},mounted(){this.vueFiles=s,this.dynamicComponents_A=l.filter(n=>n.includes("BarA")),this.dynamicComponents_B=l.filter(n=>n.includes("BarB")),this.dynamicComponents_C=l.filter(n=>n.includes("BarC")),this.dynamicComponents_D=l.filter(n=>n.includes("BarD"))},methods:{onHandleItem(n){this.isShowFullCode=!0,this.codecontent=s[n]},clipboardSuccess(){Object(o["a"])()},onPreview(n){this.isShowFullPreview=!0,this.previewEchart=n},getInfoTip(n){if(!n)return;const r=/infoTip:\s*['"]([^'"]+)['"]/;if(!r)return;const t=n.match(r),e=t&&t[1]||"备注：";return e}}},d=h,f=(t("b46d"),t("2877")),u=Object(f["a"])(d,e,a,!1,null,"bfffb1bc",null);r["default"]=u.exports},"8f11":function(n,r,t){},"9d4a":function(n,r,t){},"9d51":function(n,r,t){"use strict";t.r(r),r["default"]="<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\" />\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: [5, 75, 115, 52.65, 25.75],\r\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\r\n  };\r\n\r\n  export default {\r\n    infoTip: '备注：',\r\n    name: '',\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '年龄分布(单位：万人)'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`\r\n      };\r\n    },\r\n    watch: {\r\n      echdata: {\r\n        handler: function() {\r\n          this.drainitEchartm();\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n    created() {},\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(function() {\r\n        this.initEchart();\r\n        this.onHanleClick();\r\n      });\r\n    },\r\n    methods: {\r\n      // echart 初始化\r\n      initEchart() {\r\n        var barMax = Math.max(...this.echdata.xData) * 1.1;\r\n\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            textStyle: {\r\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\r\n              fontSize: '14px', // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            },\r\n            x: 'left'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              left: '10',\r\n              right: '0',\r\n              bottom: '-15',\r\n              top: '30',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              show: false\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              // name: '年龄',\r\n              inverse: false,\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#fff',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 13,\r\n                formatter: function(value, index) {\r\n                  return value.length > 5 ? value.slice(0, 5) + '...' : value;\r\n                }\r\n              },\r\n              data: this.echdata.yData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          label: {\r\n            show: true,\r\n            position: 'right',\r\n            color: '#fff',\r\n            fontSize: 13,\r\n            fontWeight: 600\r\n          },\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              data: this.echdata.xData,\r\n              barWidth: 8,\r\n              itemStyle: {\r\n                barBorderRadius: 30,\r\n                color: new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n                  { offset: 0, color: '#FAACA8' },\r\n                  { offset: 1, color: '#FA709A' }\r\n                ])\r\n              },\r\n              z: 91\r\n            },\r\n            {\r\n              name: '进度条背景',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              data: this.echdata.xData.map(function(d) {\r\n                return barMax;\r\n              }),\r\n              barWidth: 8,\r\n              tooltip: {\r\n                show: false\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  barBorderRadius: 30,\r\n                  color: '#0A3069',\r\n                  barBorderColor: '#0A3069', // 边框色\r\n                  barBorderWidth: 1, // 边框宽度\r\n                  label: {\r\n                    show: false,\r\n                    textStyle: {\r\n                      color: 'rgba(255,255,255,1)'\r\n                    },\r\n                    position: 'right',\r\n                    formatter: function(p) {\r\n                      return this.echdata.xData[p.dataIndex];\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              z: 90\r\n            }\r\n          ]\r\n        };\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option, true);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      },\r\n      getOptions() {\r\n        var fontColor = '#30eee9';\r\n        const options = {\r\n          backgroundColor: '#11183c',\r\n          grid: {\r\n            left: '5%',\r\n            right: '10%',\r\n            top: '20%',\r\n            bottom: '15%',\r\n            containLabel: true\r\n          },\r\n          tooltip: {\r\n            show: true,\r\n            trigger: 'item'\r\n          },\r\n          legend: {\r\n            show: true,\r\n            x: 'center',\r\n            y: '35',\r\n            icon: 'stack',\r\n            itemWidth: 10,\r\n            itemHeight: 10,\r\n            textStyle: {\r\n              color: '#1bb4f6'\r\n            },\r\n            data: ['已采纳', '已发布', '浏览量']\r\n          },\r\n          xAxis: [\r\n            {\r\n              type: 'category',\r\n              boundaryGap: false,\r\n              axisLabel: {\r\n                color: fontColor\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: '#397cbc'\r\n                }\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              splitLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: '#195384'\r\n                }\r\n              },\r\n              data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              name: '信息量',\r\n              min: 0,\r\n              max: 1000,\r\n              axisLabel: {\r\n                formatter: '{value}',\r\n                textStyle: {\r\n                  color: '#2ad1d2'\r\n                }\r\n              },\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#27b4c2'\r\n                }\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              splitLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: '#11366e'\r\n                }\r\n              }\r\n            },\r\n            {\r\n              type: 'value',\r\n              name: '浏览量',\r\n              min: 0,\r\n              max: 1000,\r\n              axisLabel: {\r\n                formatter: '{value} 人',\r\n                textStyle: {\r\n                  color: '#186afe'\r\n                }\r\n              },\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#186afe'\r\n                }\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              splitLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: '#11366e'\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '已采纳',\r\n              type: 'line',\r\n              stack: '总量',\r\n              symbol: 'circle',\r\n              symbolSize: 8,\r\n              itemStyle: {\r\n                normal: {\r\n                  color: '#0092f6',\r\n                  lineStyle: {\r\n                    color: '#0092f6',\r\n                    width: 1\r\n                  },\r\n                  areaStyle: {\r\n                    //color: '#94C9EC'\r\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\r\n                      {\r\n                        offset: 0,\r\n                        color: 'rgba(7,44,90,0.3)'\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: 'rgba(0,146,246,0.9)'\r\n                      }\r\n                    ])\r\n                  }\r\n                }\r\n              },\r\n              markPoint: {\r\n                itemStyle: {\r\n                  normal: {\r\n                    color: 'red'\r\n                  }\r\n                }\r\n              },\r\n              data: [120, 132, 101, 134, 90, 230, 210, 182, 191, 234, 290, 330]\r\n            },\r\n            {\r\n              name: '已发布',\r\n              type: 'line',\r\n              stack: '总量',\r\n              symbol: 'circle',\r\n              symbolSize: 8,\r\n\r\n              itemStyle: {\r\n                normal: {\r\n                  color: '#00d4c7',\r\n                  lineStyle: {\r\n                    color: '#00d4c7',\r\n                    width: 1\r\n                  },\r\n                  areaStyle: {\r\n                    //color: '#94C9EC'\r\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\r\n                      {\r\n                        offset: 0,\r\n                        color: 'rgba(7,44,90,0.3)'\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: 'rgba(0,212,199,0.9)'\r\n                      }\r\n                    ])\r\n                  }\r\n                }\r\n              },\r\n              data: [220, 182, 191, 234, 290, 330, 310, 201, 154, 190, 330, 410]\r\n            },\r\n            {\r\n              name: '浏览量',\r\n              type: 'line',\r\n              stack: '总量',\r\n              symbol: 'circle',\r\n              symbolSize: 8,\r\n              itemStyle: {\r\n                normal: {\r\n                  color: '#aecb56',\r\n                  lineStyle: {\r\n                    color: '#aecb56',\r\n                    width: 1\r\n                  },\r\n                  areaStyle: {\r\n                    //color: '#94C9EC'\r\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [\r\n                      {\r\n                        offset: 0,\r\n                        color: 'rgba(7,44,90,0.3)'\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: 'rgba(114,144,89,0.9)'\r\n                      }\r\n                    ])\r\n                  }\r\n                }\r\n              },\r\n              data: [150, 232, 201, 154, 190, 330, 410, 150, 232, 201, 154, 190]\r\n            }\r\n          ]\r\n        };\r\n      },\r\n      // 点击事件\r\n      onHanleClick() {\r\n        var echartEle = this.$echarts.init(document.getElementById(this.eleId));\r\n        echartEle.getZr().on('click', params => {\r\n          console.log('点击饿了', params);\r\n          const pointInPixel = [params.offsetX, params.offsetY];\r\n          if (echartEle.containPixel('grid', pointInPixel)) {\r\n            const xIndex = echartEle.convertFromPixel({ seriesIndex: 0 }, [params.offsetX, params.offsetY])[0];\r\n            console.log(xIndex);\r\n          }\r\n          // this.$router.push('/sy-chanyelian')\r\n          //\r\n          // var options = echartEle.getOption()\r\n          // console.log('options配置', options)\r\n        });\r\n      }\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"},a042:function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},a=[],i=t("313e");const o={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=[{name:"数量",data:this.echdata.yData,type:"bar",barMaxWidth:"auto",barWidth:"10",showBackground:!0,backgroundStyle:{color:"rgba(20, 88, 168, 0.2)"},itemStyle:{normal:{color:function(n){var r=["#02AFD5","#F3CB6B"];return r[n.dataIndex%r.length]},label:{position:"top",show:!0,formatter:["{a|{c}}"].join(","),rich:{a:{color:"#fff",align:"center",fontSize:"12px"}},textStyle:{color:"#FDFEFF",fontSize:12}}}},zlevel:2}],r={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:14,fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:n};let t=i["init"](document.getElementById(this.eleId));t.setOption(r,!0),window.addEventListener("resize",()=>{t.resize()})}}},l=s,c=(t("0b90"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"4bd8d17e",null);r["default"]=h.exports},a2c8:function(n,r,t){},a360:function(n,r,t){},b404:function(n,r,t){},b463:function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},a=[],i=t("313e");const o={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=i,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){var n={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},legend:{top:0,right:0,textStyle:{color:"rgba(255, 255, 255, .5)",fontSize:14},icon:"roundRect",itemWidth:16,itemHeight:10,itemGap:5},tooltip:{trigger:"axis",backgroundColor:"rgba(0, 0, 0, .8)",borderColor:"rgba(0, 0, 0, .8)",textStyle:{color:"#fff",fontSize:14},axisPointer:{type:"shadow"}},grid:[{left:"3%",right:"3%",bottom:"-5",top:"20%",containLabel:!0}],xAxis:{type:"category",axisLabel:{color:"#96C2FF",fontSize:10,interval:0,rotate:20},axisLine:{lineStyle:{color:"rgba(209, 209, 209, .3)"}},data:this.echdata.xData},yAxis:[{type:"value",name:"",axisLabel:{color:"#96C2FF",fontSize:12,fontWeight:100},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)",fontSize:12}},splitLine:{show:!1}}],series:[{name:"数量",type:"bar",smooth:!0,barWidth:6,color:"#10D6FE",lineStyle:{width:1,type:"dashed"},label:{show:!0,color:"#fff",fontSize:"12",fontWeight:600,position:"top",formatter:function(n){return n.value+"人"}},areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(2, 251, 189, .2)"},{offset:1,color:"rgba(2, 251, 189, 0)"}],globalCoord:!1}},data:this.echdata.yData}]},r=this.$echarts.init(document.getElementById(this.eleId));r.setOption(n,!0),window.addEventListener("resize",()=>{r.resize()})}}},l=s,c=(t("2c70"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"0edb0670",null);r["default"]=h.exports},b46d:function(n,r,t){"use strict";t("61dd")},c0ca:function(n,r,t){"use strict";t.r(r),r["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [101, 202, 303, 404],\n    yData2: [110, 220, 333, 444],\n    yData3: [131, 252, 363, 484]\n  };\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        // var data1 = this.echdata.xData;\n        const seriesArrData = [\n          {\n            name: '用户总数',\n            type: 'bar',\n            barWidth: '15%',\n            itemStyle: {\n              normal: {\n                color: '#9C9AFF',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 400, 300, 300, 300, 400, 400, 400, 300]\n          },\n          {\n            name: '其它',\n            type: 'line',\n            barWidth: '15%',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: '#FFCA71',\n                barBorderRadius: [12, 12, 0, 0]\n              }\n            },\n            data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]\n          }\n        ];\n        const option = {\n          title: {\n            text: this.titleText,\n            top: -2,\n            textStyle: {\n              color: '#fff', // 字体颜色 备用色  '#2B9DF2'\n              fontSize: '14px', // 字体大小\n              fontWeight: 600 // 字体粗细\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow' // 默认为直线，可选为：'line' | 'shadow' // 坐标轴指示器，坐标轴触发有效\n            }\n          },\n          grid: {\n            right: '5%',\n            left: '5',\n            bottom: '0',\n            top: '30',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'category',\n            data: this.echdata.xData,\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          },\n          yAxis: {\n            // 坐标轴\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#1d71b7'\n              }\n            },\n            // 坐标值标注\n            axisLabel: {\n              show: true,\n              textStyle: {\n                color: '#96C2FF',\n                fontSize: 12\n              }\n            },\n            // 分格线\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#4784e8'\n              }\n            }\n          },\n          series: seriesArrData\n        };\n        //\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      }\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},c21f:function(n,r,t){"use strict";t("b404")},c645:function(n,r,t){},c70e:function(n,r,t){"use strict";t("e812")},c953:function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}})},a=[],i=(t("14d9"),t("313e"));const o={xData:[5,75,115,52.65,25.75],yData:["16-20岁","21-30岁","31-40岁","41-50岁","51-60岁"]};var s={infoTip:"",name:"",props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"年龄分布(单位：万人)"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36))}},watch:{echdata:{handler:function(){this.drainitEchartm()},deep:!0}},created(){},mounted(){this.$echarts=i,this.$nextTick((function(){this.initEchart(),this.onHanleClick()}))},methods:{initEchart(){for(var n=[new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}]),new this.$echarts.graphic.LinearGradient(0,1,1,1,[{offset:0,color:"#395CFE"},{offset:1,color:"#2EC7CF"}])],r=1.1*Math.max(...this.echdata.xData),t=[],e=0;e<this.echdata.xData.length;e++)t.push(r);var a={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:14,fontWeight:600},x:"left"},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{top:"20px",left:"10",right:"10",bottom:"-20",containLabel:!0}],xAxis:[{show:!1,name:"万人",nameTextStyle:{align:"right",color:"#FFFFFF"},axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:13,color:"#FFFFFF"},splitLine:{show:!1},axisTick:{show:!1}}],yAxis:[{triggerEvent:!0,inverse:!1,axisLine:{show:!1,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#96C2FF",interval:0,fontWeight:"normal",fontSize:13},data:this.echdata.yData,gridIndex:0}],series:[{name:"数量",type:"bar",barGap:"-100%",barCategoryGap:"100%",data:this.echdata.xData.map((r,t)=>{const e={color:t>3?n[3]:n[t]};return{value:r,itemStyle:e}}),barWidth:10,itemStyle:{barBorderRadius:30},z:91,label:{show:!0,distance:15,color:"#fff",fontSize:"14",fontWeight:600,position:"right"}},{name:"进度条背景",type:"bar",barGap:"-100%",barCategoryGap:"200%",data:this.echdata.xData.map((function(n){return r})),barWidth:10,tooltip:{show:!1},itemStyle:{normal:{barBorderRadius:30,color:"#1c1d47",barBorderColor:"#204b86",barBorderWidth:1,label:{show:!1,textStyle:{color:"rgba(255,255,255,1)"},position:"right",formatter:function(n){return this.echdata.xData[n.dataIndex]}}}},z:90}]};let o=i["init"](document.getElementById(this.eleId));o.setOption(a,!0),window.addEventListener("resize",()=>{o.resize()})},onHanleClick(){var n=this.$echarts.init(document.getElementById(this.eleId));n.getZr().on("click",r=>{console.log("点击饿了",r);const t=[r.offsetX,r.offsetY];if(n.containPixel("grid",t)){const t=n.convertFromPixel({seriesIndex:0},[r.offsetX,r.offsetY])[0];console.log(t)}})}}},l=s,c=(t("d858"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"599ff382",null);r["default"]=h.exports},d1b6:function(n,r,t){"use strict";t.r(r),r["default"]="<template>\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n\n  const defaultEchdata = {\n    xData: ['2020年', '2021年', '2022年', '2023年'],\n    yData: [4.2, 3.2, 4.8, 3.5],\n    yData2: [4.8, 3.5, 2.9, 2.8, 3, 5]\n  };\n  const defaultSeriesName = ['手机销量', '电脑销量'];\n\n  export default {\n    props: {\n      echdata: {\n        type: [Object, Array],\n        default: () => defaultEchdata\n      },\n      titleText: {\n        type: String,\n        default: '标题'\n      },\n      seriesname: {\n        type: [Object, Array],\n        default: () => defaultSeriesName\n      }\n    },\n    data() {\n      return {\n        eleId: `eleId_${Math.random()\n          .toString()\n          .substring(3, 6) + Date.now().toString(36)}`,\n        chart: null\n      };\n    },\n    mounted() {\n      this.$echarts = echarts;\n      this.$nextTick(() => {\n        this.initEchart();\n      });\n    },\n    methods: {\n      initEchart() {\n        const option = this.getOptions();\n        let echartEle = echarts.init(document.getElementById(this.eleId));\n        echartEle.setOption(option);\n        window.addEventListener('resize', () => {\n          echartEle.resize();\n        });\n      },\n      getOptions() {\n        const options = {\n          title: {\n            text: this.titleText,\n            top: 'left',\n            left: 'top',\n            textStyle: {\n              align: 'left',\n              color: '#fff',\n              fontSize: 14\n            }\n          },\n          backgroundColor: '#0f375f',\n          grid: {\n            top: '50px',\n            right: '30px',\n            bottom: '20px' //也可设置left和right设置距离来控制图表的大小\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow',\n              label: {\n                show: true\n              }\n            }\n          },\n          legend: {\n            data: ['手机销量', '笔记本销量'],\n            top: '15%',\n            textStyle: {\n              color: '#ffffff'\n            }\n          },\n          xAxis: {\n            data: this.echdata.xData,\n            axisLine: {\n              show: true, //隐藏X轴轴线\n              lineStyle: {\n                color: '#01FCE3'\n              }\n            },\n            axisTick: {\n              show: true //隐藏X轴刻度\n            },\n            axisLabel: {\n              show: true,\n              textStyle: {\n                // color: '#ebf8ac' //X轴文字颜色\n              }\n            }\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '亿元',\n              nameTextStyle: {\n                color: '#ebf8ac'\n              },\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: true\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  color: '#FFFFFF'\n                }\n              },\n              axisLabel: {\n                show: true,\n                textStyle: {\n                  color: '#ebf8ac'\n                }\n              }\n            },\n            {\n              type: 'value',\n              name: '同比',\n              nameTextStyle: {\n                color: '#ebf8ac'\n              },\n              position: 'right',\n              splitLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLine: {\n                show: false\n              },\n              axisLabel: {\n                show: true,\n                formatter: '{value} %', //右侧Y轴文字显示\n                textStyle: {\n                  color: '#ebf8ac'\n                }\n              }\n            },\n            {\n              type: 'value',\n              gridIndex: 0,\n              min: 50,\n              max: 100,\n              splitNumber: 8,\n              splitLine: {\n                show: false\n              },\n              axisLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                show: false\n              },\n              splitArea: {\n                show: true,\n                areaStyle: {\n                  color: ['rgba(250,250,250,0.0)', 'rgba(250,250,250,0.05)']\n                }\n              }\n            }\n          ],\n          series: [\n            {\n              name: '手机销量',\n              type: 'line',\n              yAxisIndex: 1, //使用的 y 轴的 index，在单个图表实例中存在多个 y轴的时候有用\n              smooth: true, //平滑曲线显示\n              showAllSymbol: true, //显示所有图形。\n              symbol: 'circle', //标记的图形为实心圆\n              symbolSize: 10, //标记的大小\n              itemStyle: {\n                //折线拐点标志的样式\n                color: '#058cff'\n              },\n              lineStyle: {\n                color: '#058cff'\n              },\n              areaStyle: {\n                color: 'rgba(5,140,255, 0.2)'\n              },\n              data: this.echdata.yData\n            },\n            {\n              name: '笔记本销量',\n              type: 'bar',\n              barWidth: 10,\n              itemStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: '#00FFE3'\n                    },\n                    {\n                      offset: 1,\n                      color: '#4693EC'\n                    }\n                  ])\n                }\n              },\n              data: this.echdata.yData2\n            }\n          ]\n        };\n        return options;\n      }\n      //\n    }\n  };\n<\/script>\n\n<style lang=\"scss\" scoped>\n  .echart-unit {\n    height: 100%;\n  }\n</style>\n"},d858:function(n,r,t){"use strict";t("332b")},d867:function(n,r,t){"use strict";t.r(r),r["default"]="<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n  const defaultSeriesName = ['手机销量', '电脑销量'];\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      },\r\n      seriesname: {\r\n        type: [Object, Array],\r\n        default: () => defaultSeriesName\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        const option = this.getOptions();\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      },\r\n      getOptions() {\r\n        var min = 50;\r\n        const options = {\r\n          backgroundColor: '#111c4e',\r\n          color: ['#3398DB'],\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'line',\r\n              lineStyle: {\r\n                opacity: 0\r\n              }\r\n            }\r\n            // formatter: function(prams) {\r\n            //   if (prams[0].data === min) {\r\n            //     return '合格率：0%';\r\n            //   } else {\r\n            //     return '合格率：' + prams[0].data + '%';\r\n            //   }\r\n            // }\r\n          },\r\n          legend: {\r\n            data: ['直接访问', '背景'],\r\n            show: false\r\n          },\r\n          grid: {\r\n            left: '0%',\r\n            right: '0%',\r\n            bottom: '0%',\r\n            top: '7%',\r\n            // height: '85%',\r\n            containLabel: true,\r\n            z: 22\r\n          },\r\n          xAxis: [\r\n            {\r\n              type: 'category',\r\n              gridIndex: 0,\r\n              data: this.echdata.xData,\r\n              axisTick: {\r\n                alignWithLabel: true\r\n              },\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#0c3b71'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                show: true,\r\n                color: 'rgb(170,170,170)',\r\n                fontSize: 12\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              gridIndex: 0,\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              // min: min,\r\n              // max: 100,\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#0c3b71'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                color: 'rgb(170,170,170)',\r\n                formatter: '{value} 人'\r\n              }\r\n            },\r\n            {\r\n              type: 'value',\r\n              gridIndex: 0,\r\n              min: min,\r\n              max: 100,\r\n              splitNumber: 12,\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                show: false\r\n              },\r\n              splitArea: {\r\n                show: true,\r\n                areaStyle: {\r\n                  color: ['rgba(250,250,250,0.0)', 'rgba(250,250,250,0.05)']\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '合格率',\r\n              type: 'bar',\r\n              barWidth: '10',\r\n              xAxisIndex: 0,\r\n              yAxisIndex: 0,\r\n              itemStyle: {\r\n                normal: {\r\n                  barBorderRadius: 30,\r\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                    {\r\n                      offset: 0,\r\n                      color: '#00feff'\r\n                    },\r\n                    {\r\n                      offset: 0.5,\r\n                      color: '#027eff'\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: '#0286ff'\r\n                    }\r\n                  ])\r\n                }\r\n              },\r\n              data: this.echdata.yData,\r\n              zlevel: 11\r\n            },\r\n            {\r\n              name: '背景',\r\n              type: 'bar',\r\n              barWidth: '20',\r\n              xAxisIndex: 0,\r\n              yAxisIndex: 1,\r\n              // barGap: '-135%',\r\n              barGap: '-1.5px',\r\n              data: [100, 100, 100, 100, 100, 100, 100],\r\n              itemStyle: {\r\n                normal: {\r\n                  color: 'rgba(255,255,255,0.1)'\r\n                }\r\n              },\r\n              zlevel: 9\r\n            }\r\n          ]\r\n        };\r\n        return options;\r\n      }\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"},dbc2:function(n,r,t){"use strict";t("eb77")},e5cf:function(n,r,t){},e812:function(n,r,t){},eb77:function(n,r,t){},f3de:function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticStyle:{color:"#fff"}},[n._v(" echart图 ")])},a=[],i={data(){return{}}},o=i,s=t("2877"),l=Object(s["a"])(o,e,a,!1,null,"1fefdfbc",null);r["default"]=l.exports},f670:function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},a=[],i=t("313e");const o={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=i,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){const n=[{name:"数量",data:this.echdata.yData,type:"bar",barMaxWidth:"auto",barWidth:"10",showBackground:!0,backgroundStyle:{color:"rgba(20, 88, 168, 0.2)"},itemStyle:{normal:{color:n=>{var r=[["#2D98DF","#0B244C"]];return new this.$echarts.graphic.LinearGradient(0,0,0,1,[{offset:0,color:r[0][0]},{offset:.5,color:r[0][0]},{offset:1,color:r[0][1]}])},label:{show:!0,position:"top",textStyle:{fontSize:14,fontWeight:600,color:"#D1DBFF"}}},barBorderRadius:30},zlevel:2}],r={title:{text:this.titleText,top:-2,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600}},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{right:"5%",left:"5",bottom:"0",top:"30",containLabel:!0},xAxis:{type:"category",data:this.echdata.xData,axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},axisTick:{show:!1}},yAxis:{axisLine:{show:!0,lineStyle:{color:"#1d71b7"}},axisLabel:{show:!0,textStyle:{color:"#96C2FF",fontSize:12}},splitLine:{show:!1,lineStyle:{color:"#4784e8"}}},series:n};let t=i["init"](document.getElementById(this.eleId));t.setOption(r),window.addEventListener("resize",()=>{t.resize()})}}},l=s,c=(t("07b2"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"76cbb846",null);r["default"]=h.exports},f797:function(n,r,t){},fc03:function(n,r,t){"use strict";t.r(r);var e=function(){var n=this,r=n._self._c;return r("div",{staticClass:"echart-unit",attrs:{id:n.eleId}},[n._v("组件")])},a=[],i=t("313e");const o={xData:["2020年","2021年","2022年","2023年"],yData:[101,202,303,404]};var s={props:{echdata:{type:[Object,Array],default:()=>o},titleText:{type:String,default:"标题"}},data(){return{eleId:"eleId_"+(Math.random().toString().substring(3,6)+Date.now().toString(36)),chart:null}},mounted(){this.$echarts=i,this.$nextTick(()=>{this.initEchart()})},methods:{initEchart(){var n=[new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#EF624A"},{offset:1,color:"#FF9482"}]),new this.$echarts.graphic.LinearGradient(1,1,1,0,[{offset:0,color:"#1277CC"},{offset:1,color:"#00E7FD"}])],r={title:{text:this.titleText,textStyle:{color:"#fff",fontSize:"14px",fontWeight:600},x:"left"},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{show:!1},grid:[{left:"10",right:"10",bottom:"0",top:"35",containLabel:!0}],xAxis:[{axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},splitLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#fff",interval:0,fontWeight:"normal",fontSize:12},data:this.echdata.xData,gridIndex:0}],yAxis:[{show:!0,axisLine:{show:!0,lineStyle:{color:"rgba(209, 209, 209, .3)"}},axisLabel:{fontSize:12,color:"#fff"},splitLine:{show:!1},axisTick:{show:!1}}],label:{show:!0,position:"top",color:"#fff",fontSize:13,fontWeight:600},series:[{type:"bar",data:this.echdata.yData.map((r,t)=>{const e={color:t%2===1?n[0]:n[1]};return{value:r,itemStyle:e}}),barWidth:15}]};let t=i["init"](document.getElementById(this.eleId));t.setOption(r),window.addEventListener("resize",()=>{t.resize()})}}},l=s,c=(t("33ab"),t("2877")),h=Object(c["a"])(l,e,a,!1,null,"08759bc4",null);r["default"]=h.exports},fcaf:function(n,r,t){"use strict";t.r(r),r["default"]="<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\" />\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: [5, 75, 115, 52.65, 25.75],\r\n    yData: ['16-20岁', '21-30岁', '31-40岁', '41-50岁', '51-60岁']\r\n  };\r\n\r\n  export default {\r\n    infoTip: '备注：Y轴数据倒置',\r\n    name: '',\r\n    props: {\r\n      echdata: {\r\n        type: Object,\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '年龄分布(单位：万人)'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `echartsLine${Number(\r\n          Math.random()\r\n            .toString()\r\n            .substr(3, 3) + Date.now()\r\n        ).toString(36)}`\r\n      };\r\n    },\r\n    watch: {\r\n      echdata: {\r\n        handler: function() {\r\n          this.initEchart();\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n    created() {},\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(function() {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        const colorList = [\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(0, 1, 1, 1, [\r\n            { offset: 0, color: '#395CFE' },\r\n            { offset: 1, color: '#2EC7CF' }\r\n          ])\r\n        ];\r\n        const option = {\r\n          title: {\r\n            text: this.titleText,\r\n            top: -4,\r\n            textStyle: {\r\n              // color: '#2992ff',\r\n              color: '#fff', // 备用字体色 '#2B9DF2'\r\n              fontSize: 14, // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n            // formatter: function(params) {\r\n            //   return params[0].name + '<br>' + params[0].value;\r\n            // }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              top: '20',\r\n              left: '10',\r\n              right: '20',\r\n              bottom: '-20',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              show: false,\r\n              name: '人',\r\n              nameTextStyle: {\r\n                align: 'right',\r\n                color: '#FFFFFF'\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                fontSize: 16,\r\n                color: '#FFFFFF'\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              inverse: true, // 设置 Y 轴数据反向展示\r\n              triggerEvent: true,\r\n              nameTextStyle: {\r\n                fontSize: 14,\r\n                color: '#FDFEFF',\r\n                padding: [0, 0, -10, -100]\r\n              },\r\n              axisLine: {\r\n                show: false,\r\n                lineStyle: {\r\n                  color: '#fff',\r\n                  align: 'left'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#96C2FF',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 13\r\n              },\r\n              data: this.echdata.yData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '数量',\r\n              type: 'bar',\r\n              barGap: '-100%',\r\n              data: this.echdata.xData.map((item, i) => {\r\n                const itemStyle = {\r\n                  color: i > 3 ? colorList[3] : colorList[i]\r\n                };\r\n                return {\r\n                  value: item,\r\n                  itemStyle: itemStyle\r\n                };\r\n              }),\r\n              barWidth: 10,\r\n              itemStyle: {\r\n                barBorderRadius: 30,\r\n                normal: {\r\n                  label: {\r\n                    position: 'right', // 在上方显示\r\n                    show: true, // 开启显示\r\n                    textStyle: {\r\n                      color: '#FDFEFF',\r\n                      fontWeight: 600,\r\n                      fontSize: 13\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              z: 91\r\n            }\r\n          ]\r\n        };\r\n\r\n        echartEle.setOption(option, true);\r\n        // 实时缩放\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"},fcc8:function(n,r,t){"use strict";t.r(r),r["default"]="<template>\r\n  <div :id=\"eleId\" class=\"echart-unit\">组件</div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from 'echarts';\r\n\r\n  const defaultEchdata = {\r\n    xData: ['2020年', '2021年', '2022年', '2023年'],\r\n    yData: [101, 202, 303, 404]\r\n  };\r\n\r\n  export default {\r\n    props: {\r\n      echdata: {\r\n        type: [Object, Array],\r\n        default: () => defaultEchdata\r\n      },\r\n      titleText: {\r\n        type: String,\r\n        default: '标题'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        eleId: `eleId_${Math.random()\r\n          .toString()\r\n          .substring(3, 6) + Date.now().toString(36)}`,\r\n        chart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$echarts = echarts;\r\n      this.$nextTick(() => {\r\n        this.initEchart();\r\n      });\r\n    },\r\n    methods: {\r\n      initEchart() {\r\n        var colorList = [\r\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\r\n            { offset: 0, color: '#EF624A' },\r\n            { offset: 1, color: '#FF9482' }\r\n          ]),\r\n          new this.$echarts.graphic.LinearGradient(1, 1, 1, 0, [\r\n            { offset: 0, color: '#1277CC' },\r\n            { offset: 1, color: '#00E7FD' }\r\n          ])\r\n        ];\r\n        var option = {\r\n          title: {\r\n            text: this.titleText,\r\n            textStyle: {\r\n              color: '#fff', // 字体颜色\r\n              fontSize: '14px', // 字体大小\r\n              fontWeight: 600 // 字体粗细\r\n            },\r\n            x: 'left'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          },\r\n          legend: {\r\n            show: false\r\n          },\r\n          grid: [\r\n            {\r\n              left: '10',\r\n              right: '10',\r\n              bottom: '0',\r\n              top: '35',\r\n              containLabel: true\r\n            }\r\n          ],\r\n          xAxis: [\r\n            {\r\n              // name: '年龄',\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                color: '#fff',\r\n                interval: 0,\r\n                fontWeight: 'normal',\r\n                fontSize: 12\r\n              },\r\n              data: this.echdata.xData,\r\n              gridIndex: 0\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              show: true,\r\n              //   name: '万人',\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  color: 'rgba(209, 209, 209, .3)'\r\n                }\r\n              },\r\n              axisLabel: {\r\n                fontSize: 12,\r\n                color: '#fff'\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              }\r\n            }\r\n          ],\r\n          label: {\r\n            show: true,\r\n            position: 'top',\r\n            color: '#fff',\r\n            fontSize: 13,\r\n            fontWeight: 600\r\n          },\r\n          series: [\r\n            {\r\n              // name: '柱状图',\r\n              type: 'bar',\r\n              data: this.echdata.yData.map((item, i) => {\r\n                const itemStyle = {\r\n                  color: i % 2 === 1 ? colorList[0] : colorList[1]\r\n                };\r\n                return {\r\n                  value: item,\r\n                  itemStyle: itemStyle\r\n                };\r\n              }),\r\n              barWidth: 15\r\n            }\r\n          ]\r\n        };\r\n        let echartEle = echarts.init(document.getElementById(this.eleId));\r\n        echartEle.setOption(option);\r\n        window.addEventListener('resize', () => {\r\n          echartEle.resize();\r\n        });\r\n      }\r\n    }\r\n  };\r\n<\/script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .echart-unit {\r\n    height: 100%;\r\n  }\r\n</style>\r\n"}}]);
//# sourceMappingURL=chunk-3194030c.ee4edf2e.js.map